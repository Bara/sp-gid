{"functions":[{"name":"IsNullVector","docStart":4872,"docEnd":5030,"docs":{"brief":"Check if the given vector is the NULL_VECTOR.","tags":[{"tag":"","text":"Check if the given vector is the NULL_VECTOR."},{"tag":"param:vec","text":"Check if the given vector is the NULL_VECTOR.\nThe vector to test."},{"tag":"return","text":"Check if the given vector is the NULL_VECTOR.\nThe vector to test.True if NULL_VECTOR, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const float[3]","name":"vec","decl":"const float vec[3]"}]},{"name":"IsNullString","docStart":5081,"docEnd":5239,"docs":{"brief":"Check if the given string is the NULL_STRING.","tags":[{"tag":"","text":"Check if the given string is the NULL_STRING."},{"tag":"param:str","text":"Check if the given string is the NULL_STRING.\nThe string to test."},{"tag":"return","text":"Check if the given string is the NULL_STRING.\nThe string to test.True if NULL_STRING, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"str","decl":"const char[] str"}]},{"name":"VerifyCoreVersion","docStart":0,"docEnd":0,"docs":null,"kind":"native","returnType":"int","arguments":[]},{"name":"MarkNativeAsOptional","docStart":5473,"docEnd":5709,"docs":{"brief":"Sets a native as optional, such that if it is unloaded, removed,or otherwise non-existent, the plugin will still work.  Callingremoved natives results in a run-time error.","tags":[{"tag":"","text":"Sets a native as optional, such that if it is unloaded, removed,or otherwise non-existent, the plugin will still work.  Callingremoved natives results in a run-time error."},{"tag":"param:name","text":"Sets a native as optional, such that if it is unloaded, removed,or otherwise non-existent, the plugin will still work.  Callingremoved natives results in a run-time error.\nNative name."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"name","decl":"const char[] name"}]},{"name":"__ext_core_SetNTVOptional","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"void","arguments":[]}],"methodmaps":[],"constants":[],"enums":[{"name":"Action","docStart":1913,"docEnd":1970,"docs":{"brief":"Specifies what to do after a hook completes.","tags":[{"tag":"","text":"Specifies what to do after a hook completes."}]},"entries":[{"name":"Plugin_Continue","docStart":2013,"docEnd":2054,"docs":null},{"name":"Plugin_Changed","docStart":2081,"docEnd":2143,"docs":null},{"name":"Plugin_Handled","docStart":2170,"docEnd":2222,"docs":null},{"name":"Plugin_Stop","docStart":2249,"docEnd":2312,"docs":null}]},{"name":"Identity","docStart":2320,"docEnd":2358,"docs":{"brief":"Specifies identity types.","tags":[{"tag":"","text":"Specifies identity types."}]},"entries":[{"name":"Identity_Core","docStart":0,"docEnd":0,"docs":null},{"name":"Identity_Extension","docStart":0,"docEnd":0,"docs":null},{"name":"Identity_Plugin","docStart":0,"docEnd":0,"docs":null}]},{"name":"PluginStatus","docStart":2600,"docEnd":2634,"docs":{"brief":"Plugin status values.","tags":[{"tag":"","text":"Plugin status values."}]},"entries":[{"name":"Plugin_Running","docStart":2683,"docEnd":2764,"docs":null},{"name":"Plugin_Paused","docStart":2791,"docEnd":2826,"docs":null},{"name":"Plugin_Error","docStart":2853,"docEnd":2945,"docs":null},{"name":"Plugin_Loaded","docStart":2972,"docEnd":3026,"docs":null},{"name":"Plugin_Failed","docStart":3053,"docEnd":3087,"docs":null},{"name":"Plugin_Created","docStart":3114,"docEnd":3159,"docs":null},{"name":"Plugin_Uncompiled","docStart":3186,"docEnd":3231,"docs":null},{"name":"Plugin_BadLoad","docStart":3258,"docEnd":3287,"docs":null},{"name":"Plugin_Evicted","docStart":3314,"docEnd":3357,"docs":null}]},{"name":"PluginInfo","docStart":3365,"docEnd":3799,"docs":{"brief":"Plugin information properties. Plugins can declare a global variable withtheir info. Example,\npublic Plugin myinfo = {name = \"Admin Help\",author = \"AlliedModders LLC\",description = \"Display command information\",version = \"1.0\",url = \"http://www.sourcemod.net/\"};\nSourceMod will display this information when a user inspects plugins in theconsole.","tags":[{"tag":"","text":"Plugin information properties. Plugins can declare a global variable withtheir info. Example,\npublic Plugin myinfo = {name = \"Admin Help\",author = \"AlliedModders LLC\",description = \"Display command information\",version = \"1.0\",url = \"http://www.sourcemod.net/\"};\nSourceMod will display this information when a user inspects plugins in theconsole."}]},"entries":[{"name":"PlInfo_Name","docStart":3846,"docEnd":3865,"docs":null},{"name":"PlInfo_Author","docStart":3892,"docEnd":3913,"docs":null},{"name":"PlInfo_Description","docStart":3940,"docEnd":3966,"docs":null},{"name":"PlInfo_Version","docStart":3993,"docEnd":4015,"docs":null},{"name":"PlInfo_URL","docStart":4042,"docEnd":4060,"docs":null}]}],"typesets":[],"typedefs":[]}