{"functions":[{"name":"CCC_GetColor","docStart":450,"docEnd":906,"docs":{"brief":"Gets a client's color as a hexadecimal integer.","tags":[{"tag":"","text":"Gets a client's color as a hexadecimal integer."},{"tag":"param:client","text":"Client index"},{"tag":"param:type","text":"Color type to retreive"},{"tag":"param:alpha","text":"Pass a boolean variable by reference here and it will be true if the color has alpha specified or false if it doesn't (or is a stock color)"},{"tag":"return","text":"Color as a hexadecimal integer (use %X in formatting to get a hexadecimal string)\n\nOn error/errors:  Invalid client index or client is not in game"}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"CCC_ColorType","name":"type","decl":"CCC_ColorType type"},{"type":"bool&","name":"alpha","decl":"bool& alpha"}]},{"name":"CCC_SetColor","docStart":986,"docEnd":1456,"docs":{"brief":"Sets a client's color as a hexadecimal integer.","tags":[{"tag":"","text":"Sets a client's color as a hexadecimal integer."},{"tag":"param:client","text":"Client index"},{"tag":"param:type","text":"Color type to set"},{"tag":"param:color","text":"Integer representation of the color (use StringToInt(input, 16) to convert a hexadecimal string) or one of the color defines"},{"tag":"param:alpha","text":"Are you specifying a color with alpha?"},{"tag":"return","text":"True if the color is updated successfully, false otherwise\n\nOn error/errors:  Invalid client index or client is not in game"}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"CCC_ColorType","name":"type","decl":"CCC_ColorType type"},{"type":"int","name":"color","decl":"int color"},{"type":"bool","name":"alpha","decl":"bool alpha"}]},{"name":"CCC_GetTag","docStart":1539,"docEnd":1771,"docs":{"brief":"Gets a client's tag","tags":[{"tag":"","text":"Gets a client's tag"},{"tag":"param:client","text":"Client index"},{"tag":"param:buffer","text":"Buffer to store the tag in"},{"tag":"param:maxlen","text":"Maximum buffer length\n\nOn error/errors:  Invalid client index or client is not in game"}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"char[]","name":"buffer","decl":"char[] buffer"},{"type":"int","name":"maxlen","decl":"int maxlen"}]},{"name":"CCC_SetTag","docStart":1836,"docEnd":2029,"docs":{"brief":"Sets a client's tag","tags":[{"tag":"","text":"Sets a client's tag"},{"tag":"param:client","text":"Client index"},{"tag":"param:tag","text":"String containing the new tag\n\nOn error/errors:  Invalid client index or client is not in game"}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"const char[]","name":"tag","decl":"const char[] tag"}]},{"name":"CCC_ResetColor","docStart":2085,"docEnd":2308,"docs":{"brief":"Resets a client's color to the value in the config file.","tags":[{"tag":"","text":"Resets a client's color to the value in the config file."},{"tag":"param:client","text":"Client index"},{"tag":"param:type","text":"Color type to restore\n\nOn error/errors:  Invalid client index or client is not in game"}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"CCC_ColorType","name":"type","decl":"CCC_ColorType type"}]},{"name":"CCC_ResetTag","docStart":2370,"docEnd":2552,"docs":{"brief":"Resets a client's tag to the value in the config file.","tags":[{"tag":"","text":"Resets a client's tag to the value in the config file."},{"tag":"param:client","text":"Client index\n\nOn error/errors:  Invalid client index or client is not in game"}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"}]},{"name":"CCC_OnNameColor","docStart":0,"docEnd":0,"docs":null,"kind":"forward","returnType":"Action","arguments":[{"type":"int","name":"client","decl":"int client"}]},{"name":"CCC_OnChatColor","docStart":0,"docEnd":0,"docs":null,"kind":"forward","returnType":"Action","arguments":[{"type":"int","name":"client","decl":"int client"}]},{"name":"CCC_OnTagApplied","docStart":0,"docEnd":0,"docs":null,"kind":"forward","returnType":"Action","arguments":[{"type":"int","name":"client","decl":"int client"}]},{"name":"CCC_OnColor","docStart":3661,"docEnd":4148,"docs":{"brief":"Called when a client's name is about to be tagged\nDO NOT START A NEW USERMESSAGE (i.e. PrintToChat, PrintToChatAll) WITHIN THIS FORWARD","tags":[{"tag":"","text":"Called when a client's name is about to be tagged\nDO NOT START A NEW USERMESSAGE (i.e. PrintToChat, PrintToChatAll) WITHIN THIS FORWARD"},{"tag":"param:client","text":"Client index"},{"tag":"param:message","text":"Chat message that will be printed"},{"tag":"param:type","text":"What type of color will be applied. If this is CCC_TagColor, it controls whether the tag will be applied at all, not whether the tag will be colored."},{"tag":"return","text":"Plugin_Handled to prevent coloring, Plugin_Continue to allow coloring"}]},"kind":"forward","returnType":"Action","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"const char[]","name":"message","decl":"const char[] message"},{"type":"CCC_ColorType","name":"type","decl":"CCC_ColorType type"}]},{"name":"CCC_OnChatMessage","docStart":4232,"docEnd":4500,"docs":{"brief":"Called when a message has been fully colored and will be sent, unless further plugins modify it through Simple Chat Processor","tags":[{"tag":"","text":"Called when a message has been fully colored and will be sent, unless further plugins modify it through Simple Chat Processor"},{"tag":"param:author","text":"Author client index"},{"tag":"param:message","text":"Message"},{"tag":"param:maxlen","text":"Maximum length of message buffer"}]},"kind":"forward","returnType":"void","arguments":[{"type":"int","name":"author","decl":"int author"},{"type":"char[]","name":"message","decl":"char[] message"},{"type":"int","name":"maxlen","decl":"int maxlen"}]},{"name":"CCC_OnUserConfigPreLoaded","docStart":4574,"docEnd":4850,"docs":{"brief":"Called when a client's colors and tag are about to be loaded from the config file\nAt this point, the client has NO COLORS","tags":[{"tag":"","text":"Called when a client's colors and tag are about to be loaded from the config file\nAt this point, the client has NO COLORS"},{"tag":"param:client","text":"Client index"},{"tag":"return","text":"Plugin_Handled or Plugin_Stop to prevent loading, Plugin_Continue or Plugin_Changed to allow"}]},"kind":"forward","returnType":"Action","arguments":[{"type":"int","name":"client","decl":"int client"}]},{"name":"CCC_OnUserConfigLoaded","docStart":4906,"docEnd":5039,"docs":{"brief":"Called when a client's colors and tag have been loaded from the config file","tags":[{"tag":"","text":"Called when a client's colors and tag have been loaded from the config file"},{"tag":"param:client","text":"Client index"}]},"kind":"forward","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"}]},{"name":"CCC_OnConfigReloaded","docStart":5090,"docEnd":5193,"docs":{"brief":"Called when the configuration file is reloaded with the sm_reloadccc command\n","tags":[{"tag":"","text":"Called when the configuration file is reloaded with the sm_reloadccc command\n"}]},"kind":"forward","returnType":"void","arguments":[]},{"name":"__pl_ccc_SetNTVOptional","docStart":0,"docEnd":0,"docs":null,"kind":"public","returnType":"void","arguments":[]}],"methodmaps":[],"constants":[],"enums":[{"name":"CCC_ColorType","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"CCC_TagColor","docStart":0,"docEnd":0,"docs":null},{"name":"CCC_NameColor","docStart":0,"docEnd":0,"docs":null},{"name":"CCC_ChatColor","docStart":0,"docEnd":0,"docs":null}]}],"typesets":[],"typedefs":[]}