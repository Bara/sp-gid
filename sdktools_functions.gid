{"functions":[{"name":"RemovePlayerItem","docStart":1661,"docEnd":1977,"docs":{"brief":"Removes a player's item.","tags":[{"tag":"","text":"Removes a player's item."},{"tag":"param:client","text":"Removes a player's item.\nClient index."},{"tag":"param:item","text":"Removes a player's item.\nClient index.CBaseCombatWeapon entity index."},{"tag":"return","text":"Removes a player's item.\nClient index.CBaseCombatWeapon entity index.True on success, false otherwise."},{"tag":"error","text":"Removes a player's item.\nClient index.CBaseCombatWeapon entity index.True on success, false otherwise.Invalid client or entity, lack of mod support, or client not ingame."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"int","name":"item","decl":"int item"}]},{"name":"GivePlayerItem","docStart":2034,"docEnd":2373,"docs":{"brief":"Gives a named item to a player.","tags":[{"tag":"","text":"Gives a named item to a player."},{"tag":"param:client","text":"Gives a named item to a player.\nClient index."},{"tag":"param:item","text":"Gives a named item to a player.\nClient index.Item classname (such as weapon_ak47)."},{"tag":"param:iSubType","text":"Gives a named item to a player.\nClient index.Item classname (such as weapon_ak47).Unknown."},{"tag":"return","text":"Gives a named item to a player.\nClient index.Item classname (such as weapon_ak47).Unknown.Entity index on success, or -1 on failure."},{"tag":"error","text":"Gives a named item to a player.\nClient index.Item classname (such as weapon_ak47).Unknown.Entity index on success, or -1 on failure.Invalid client or client not in game, or lack of mod support."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"const char[]","name":"item","decl":"const char[] item"},{"type":"int","name":"iSubType","decl":"int iSubType"}]},{"name":"GetPlayerWeaponSlot","docStart":2452,"docEnd":2760,"docs":{"brief":"Returns the weapon in a player's slot.","tags":[{"tag":"","text":"Returns the weapon in a player's slot."},{"tag":"param:client","text":"Returns the weapon in a player's slot.\nClient index."},{"tag":"param:slot","text":"Returns the weapon in a player's slot.\nClient index.Slot index (mod specific)."},{"tag":"return","text":"Returns the weapon in a player's slot.\nClient index.Slot index (mod specific).Entity index on success, -1 if no weapon existed."},{"tag":"error","text":"Returns the weapon in a player's slot.\nClient index.Slot index (mod specific).Entity index on success, -1 if no weapon existed.Invalid client or client not in game, or lack of mod support."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"int","name":"slot","decl":"int slot"}]},{"name":"IgniteEntity","docStart":2819,"docEnd":3166,"docs":{"brief":"Ignites an entity on fire.","tags":[{"tag":"","text":"Ignites an entity on fire."},{"tag":"param:entity","text":"Ignites an entity on fire.\nEntity index."},{"tag":"param:time","text":"Ignites an entity on fire.\nEntity index.Number of seconds to set on fire."},{"tag":"param:npc","text":"Ignites an entity on fire.\nEntity index.Number of seconds to set on fire.True to only affect NPCs."},{"tag":"param:size","text":"Ignites an entity on fire.\nEntity index.Number of seconds to set on fire.True to only affect NPCs.Unknown."},{"tag":"param:level","text":"Ignites an entity on fire.\nEntity index.Number of seconds to set on fire.True to only affect NPCs.Unknown.Unknown."},{"tag":"error","text":"Ignites an entity on fire.\nEntity index.Number of seconds to set on fire.True to only affect NPCs.Unknown.Unknown.Invalid entity or client not in game, or lack of mod support."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"float","name":"time","decl":"float time"},{"type":"bool","name":"npc","decl":"bool npc"},{"type":"float","name":"size","decl":"float size"},{"type":"bool","name":"level","decl":"bool level"}]},{"name":"ExtinguishEntity","docStart":3271,"docEnd":3453,"docs":{"brief":"Extinguishes an entity that is on fire.","tags":[{"tag":"","text":"Extinguishes an entity that is on fire."},{"tag":"param:entity","text":"Extinguishes an entity that is on fire.\nEntity index."},{"tag":"error","text":"Extinguishes an entity that is on fire.\nEntity index.Invalid entity or client not in game, or lack of mod support."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"}]},{"name":"TeleportEntity","docStart":3500,"docEnd":3866,"docs":{"brief":"Teleports an entity.","tags":[{"tag":"","text":"Teleports an entity."},{"tag":"param:entity","text":"Teleports an entity.\nClient index."},{"tag":"param:origin","text":"Teleports an entity.\nClient index.New origin, or NULL_VECTOR for no change."},{"tag":"param:angles","text":"Teleports an entity.\nClient index.New origin, or NULL_VECTOR for no change.New angles, or NULL_VECTOR for no change."},{"tag":"param:velocity","text":"Teleports an entity.\nClient index.New origin, or NULL_VECTOR for no change.New angles, or NULL_VECTOR for no change.New velocity, or NULL_VECTOR for no change."},{"tag":"error","text":"Teleports an entity.\nClient index.New origin, or NULL_VECTOR for no change.New angles, or NULL_VECTOR for no change.New velocity, or NULL_VECTOR for no change.Invalid entity or client not in game, or lack of mod support."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"const float[3]","name":"angles","decl":"const float angles[3]"},{"type":"const float[3]","name":"velocity","decl":"const float velocity[3]"}]},{"name":"ForcePlayerSuicide","docStart":3982,"docEnd":4159,"docs":{"brief":"Forces a player to commit suicide.","tags":[{"tag":"","text":"Forces a player to commit suicide."},{"tag":"param:client","text":"Forces a player to commit suicide.\nClient index."},{"tag":"error","text":"Forces a player to commit suicide.\nClient index.Invalid client or client not in game, or lack of mod support."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"}]},{"name":"SlapPlayer","docStart":4208,"docEnd":4494,"docs":{"brief":"Slaps a player in a random direction.","tags":[{"tag":"","text":"Slaps a player in a random direction."},{"tag":"param:client","text":"Slaps a player in a random direction.\nClient index."},{"tag":"param:health","text":"Slaps a player in a random direction.\nClient index.Health to subtract."},{"tag":"param:sound","text":"Slaps a player in a random direction.\nClient index.Health to subtract.False to disable the sound effects."},{"tag":"error","text":"Slaps a player in a random direction.\nClient index.Health to subtract.False to disable the sound effects.Invalid client or client not in game, or lack of mod support."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"int","name":"health","decl":"int health"},{"type":"bool","name":"sound","decl":"bool sound"}]},{"name":"FindEntityByClassname","docStart":4566,"docEnd":4933,"docs":{"brief":"Searches for an entity by classname.","tags":[{"tag":"","text":"Searches for an entity by classname."},{"tag":"param:startEnt","text":"Searches for an entity by classname.\nThe entity index after which to begin searching from.Use -1 to start from the first entity."},{"tag":"param:classname","text":"Searches for an entity by classname.\nThe entity index after which to begin searching from.Use -1 to start from the first entity.Classname of the entity to find."},{"tag":"return","text":"Searches for an entity by classname.\nThe entity index after which to begin searching from.Use -1 to start from the first entity.Classname of the entity to find.Entity index >= 0 if found, -1 otherwise."},{"tag":"error","text":"Searches for an entity by classname.\nThe entity index after which to begin searching from.Use -1 to start from the first entity.Classname of the entity to find.Entity index >= 0 if found, -1 otherwise.Lack of mod support."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"startEnt","decl":"int startEnt"},{"type":"const char[]","name":"classname","decl":"const char[] classname"}]},{"name":"GetClientEyeAngles","docStart":5010,"docEnd":5324,"docs":{"brief":"Returns the client's eye angles.","tags":[{"tag":"","text":"Returns the client's eye angles."},{"tag":"param:client","text":"Returns the client's eye angles.\nPlayer's index."},{"tag":"param:ang","text":"Returns the client's eye angles.\nPlayer's index.Destination vector to store the client's eye angles."},{"tag":"return","text":"Returns the client's eye angles.\nPlayer's index.Destination vector to store the client's eye angles.True on success, false on failure."},{"tag":"error","text":"Returns the client's eye angles.\nPlayer's index.Destination vector to store the client's eye angles.True on success, false on failure.Invalid client index, client not in game, or no mod support."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"float[3]","name":"ang","decl":"float ang[3]"}]},{"name":"CreateEntityByName","docStart":5387,"docEnd":5941,"docs":{"brief":"Creates an entity by string name, but does not spawn it (see DispatchSpawn).If ForceEdictIndex is not -1, then it will use the edict by that index. If the index isinvalid or there is already an edict using that index, it will error out.","tags":[{"tag":"","text":"Creates an entity by string name, but does not spawn it (see DispatchSpawn).If ForceEdictIndex is not -1, then it will use the edict by that index. If the index isinvalid or there is already an edict using that index, it will error out."},{"tag":"param:classname","text":"Creates an entity by string name, but does not spawn it (see DispatchSpawn).If ForceEdictIndex is not -1, then it will use the edict by that index. If the index isinvalid or there is already an edict using that index, it will error out.\nEntity classname."},{"tag":"param:ForceEdictIndex","text":"Creates an entity by string name, but does not spawn it (see DispatchSpawn).If ForceEdictIndex is not -1, then it will use the edict by that index. If the index isinvalid or there is already an edict using that index, it will error out.\nEntity classname.Edict index used by the created entity (ignored on Orangebox and above)."},{"tag":"return","text":"Creates an entity by string name, but does not spawn it (see DispatchSpawn).If ForceEdictIndex is not -1, then it will use the edict by that index. If the index isinvalid or there is already an edict using that index, it will error out.\nEntity classname.Edict index used by the created entity (ignored on Orangebox and above).Entity index on success, or -1 on failure."},{"tag":"error","text":"Creates an entity by string name, but does not spawn it (see DispatchSpawn).If ForceEdictIndex is not -1, then it will use the edict by that index. If the index isinvalid or there is already an edict using that index, it will error out.\nEntity classname.Edict index used by the created entity (ignored on Orangebox and above).Entity index on success, or -1 on failure.Invalid edict index, or no mod support."}]},"kind":"native","returnType":"int","arguments":[{"type":"const char[]","name":"classname","decl":"const char[] classname"},{"type":"int","name":"ForceEdictIndex","decl":"int ForceEdictIndex"}]},{"name":"DispatchSpawn","docStart":6025,"docEnd":6259,"docs":{"brief":"Spawns an entity into the game.","tags":[{"tag":"","text":"Spawns an entity into the game."},{"tag":"param:entity","text":"Spawns an entity into the game.\nEntity index of the created entity."},{"tag":"return","text":"Spawns an entity into the game.\nEntity index of the created entity.True on success, false otherwise."},{"tag":"error","text":"Spawns an entity into the game.\nEntity index of the created entity.True on success, false otherwise.Invalid entity index, or no mod support."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"entity","decl":"int entity"}]},{"name":"DispatchKeyValue","docStart":6303,"docEnd":6638,"docs":{"brief":"Dispatches a KeyValue into given entity using a string value.","tags":[{"tag":"","text":"Dispatches a KeyValue into given entity using a string value."},{"tag":"param:entity","text":"Dispatches a KeyValue into given entity using a string value.\nDestination entity index."},{"tag":"param:keyName","text":"Dispatches a KeyValue into given entity using a string value.\nDestination entity index.Name of the key."},{"tag":"param:value","text":"Dispatches a KeyValue into given entity using a string value.\nDestination entity index.Name of the key.String value."},{"tag":"return","text":"Dispatches a KeyValue into given entity using a string value.\nDestination entity index.Name of the key.String value.True on success, false otherwise."},{"tag":"error","text":"Dispatches a KeyValue into given entity using a string value.\nDestination entity index.Name of the key.String value.True on success, false otherwise.Invalid entity index, or no mod support."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"const char[]","name":"keyName","decl":"const char[] keyName"},{"type":"const char[]","name":"value","decl":"const char[] value"}]},{"name":"DispatchKeyValueFloat","docStart":6727,"docEnd":7078,"docs":{"brief":"Dispatches a KeyValue into given entity using a floating point value.","tags":[{"tag":"","text":"Dispatches a KeyValue into given entity using a floating point value."},{"tag":"param:entity","text":"Dispatches a KeyValue into given entity using a floating point value.\nDestination entity index."},{"tag":"param:keyName","text":"Dispatches a KeyValue into given entity using a floating point value.\nDestination entity index.Name of the key."},{"tag":"param:value","text":"Dispatches a KeyValue into given entity using a floating point value.\nDestination entity index.Name of the key.Floating point value."},{"tag":"return","text":"Dispatches a KeyValue into given entity using a floating point value.\nDestination entity index.Name of the key.Floating point value.True on success, false otherwise."},{"tag":"error","text":"Dispatches a KeyValue into given entity using a floating point value.\nDestination entity index.Name of the key.Floating point value.True on success, false otherwise.Invalid entity index, or no mod support."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"const char[]","name":"keyName","decl":"const char[] keyName"},{"type":"float","name":"value","decl":"float value"}]},{"name":"DispatchKeyValueVector","docStart":7165,"docEnd":7500,"docs":{"brief":"Dispatches a KeyValue into given entity using a vector value.","tags":[{"tag":"","text":"Dispatches a KeyValue into given entity using a vector value."},{"tag":"param:entity","text":"Dispatches a KeyValue into given entity using a vector value.\nDestination entity index."},{"tag":"param:keyName","text":"Dispatches a KeyValue into given entity using a vector value.\nDestination entity index.Name of the key."},{"tag":"param:vec","text":"Dispatches a KeyValue into given entity using a vector value.\nDestination entity index.Name of the key.Vector value."},{"tag":"return","text":"Dispatches a KeyValue into given entity using a vector value.\nDestination entity index.Name of the key.Vector value.True on success, false otherwise."},{"tag":"error","text":"Dispatches a KeyValue into given entity using a vector value.\nDestination entity index.Name of the key.Vector value.True on success, false otherwise.Invalid entity index, or no mod support."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"const char[]","name":"keyName","decl":"const char[] keyName"},{"type":"const float[3]","name":"vec","decl":"const float vec[3]"}]},{"name":"GetClientAimTarget","docStart":7595,"docEnd":8020,"docs":{"brief":"Returns the entity a client is aiming at.","tags":[{"tag":"","text":"Returns the entity a client is aiming at."},{"tag":"param:client","text":"Returns the entity a client is aiming at.\nClient performing the aiming."},{"tag":"param:only_clients","text":"Returns the entity a client is aiming at.\nClient performing the aiming.True to exclude all entities but clients."},{"tag":"return","text":"Returns the entity a client is aiming at.\nClient performing the aiming.True to exclude all entities but clients.Entity index being aimed at.-1 if no entity is being aimed at.-2 if the function is not supported."},{"tag":"error","text":"Returns the entity a client is aiming at.\nClient performing the aiming.True to exclude all entities but clients.Entity index being aimed at.-1 if no entity is being aimed at.-2 if the function is not supported.Invalid client index or client not in game."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"bool","name":"only_clients","decl":"bool only_clients"}]},{"name":"GetTeamCount","docStart":8092,"docEnd":8263,"docs":{"brief":"Returns the total number of teams in a game.Note: This native should not be called before OnMapStart.","tags":[{"tag":"","text":"Returns the total number of teams in a game.Note: This native should not be called before OnMapStart."},{"tag":"return","text":"Returns the total number of teams in a game.Note: This native should not be called before OnMapStart.\nTotal number of teams."}]},"kind":"native","returnType":"int","arguments":[]},{"name":"GetTeamName","docStart":8295,"docEnd":8612,"docs":{"brief":"Retrieves the team name based on a team index.Note: This native should not be called before OnMapStart.","tags":[{"tag":"","text":"Retrieves the team name based on a team index.Note: This native should not be called before OnMapStart."},{"tag":"param:index","text":"Retrieves the team name based on a team index.Note: This native should not be called before OnMapStart.\nTeam index."},{"tag":"param:name","text":"Retrieves the team name based on a team index.Note: This native should not be called before OnMapStart.\nTeam index.Buffer to store string in."},{"tag":"param:maxlength","text":"Retrieves the team name based on a team index.Note: This native should not be called before OnMapStart.\nTeam index.Buffer to store string in.Maximum length of string buffer."},{"tag":"error","text":"Retrieves the team name based on a team index.Note: This native should not be called before OnMapStart.\nTeam index.Buffer to store string in.Maximum length of string buffer.Invalid team index."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"index","decl":"int index"},{"type":"char[]","name":"name","decl":"char[] name"},{"type":"int","name":"maxlength","decl":"int maxlength"}]},{"name":"GetTeamScore","docStart":8681,"docEnd":8924,"docs":{"brief":"Returns the score of a team based on a team index.Note: This native should not be called before OnMapStart.","tags":[{"tag":"","text":"Returns the score of a team based on a team index.Note: This native should not be called before OnMapStart."},{"tag":"param:index","text":"Returns the score of a team based on a team index.Note: This native should not be called before OnMapStart.\nTeam index."},{"tag":"return","text":"Returns the score of a team based on a team index.Note: This native should not be called before OnMapStart.\nTeam index.Score."},{"tag":"error","text":"Returns the score of a team based on a team index.Note: This native should not be called before OnMapStart.\nTeam index.Score.Invalid team index."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"index","decl":"int index"}]},{"name":"SetTeamScore","docStart":8965,"docEnd":9215,"docs":{"brief":"Sets the score of a team based on a team index.Note: This native should not be called before OnMapStart.","tags":[{"tag":"","text":"Sets the score of a team based on a team index.Note: This native should not be called before OnMapStart."},{"tag":"param:index","text":"Sets the score of a team based on a team index.Note: This native should not be called before OnMapStart.\nTeam index."},{"tag":"param:value","text":"Sets the score of a team based on a team index.Note: This native should not be called before OnMapStart.\nTeam index.New score value."},{"tag":"error","text":"Sets the score of a team based on a team index.Note: This native should not be called before OnMapStart.\nTeam index.New score value.Invalid team index."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"index","decl":"int index"},{"type":"int","name":"value","decl":"int value"}]},{"name":"GetTeamClientCount","docStart":9268,"docEnd":9535,"docs":{"brief":"Retrieves the number of players in a certain team.Note: This native should not be called before OnMapStart.","tags":[{"tag":"","text":"Retrieves the number of players in a certain team.Note: This native should not be called before OnMapStart."},{"tag":"param:index","text":"Retrieves the number of players in a certain team.Note: This native should not be called before OnMapStart.\nTeam index."},{"tag":"return","text":"Retrieves the number of players in a certain team.Note: This native should not be called before OnMapStart.\nTeam index.Number of players in the team."},{"tag":"error","text":"Retrieves the number of players in a certain team.Note: This native should not be called before OnMapStart.\nTeam index.Number of players in the team.Invalid team index."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"index","decl":"int index"}]},{"name":"GetTeamEntity","docStart":9582,"docEnd":9763,"docs":{"brief":"Returns the entity index of a team.","tags":[{"tag":"","text":"Returns the entity index of a team."},{"tag":"param:teamIndex","text":"Returns the entity index of a team.\nTeam index."},{"tag":"return","text":"Returns the entity index of a team.\nTeam index.Entity index of team."},{"tag":"error","text":"Returns the entity index of a team.\nTeam index.Entity index of team.Invalid team index."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"teamIndex","decl":"int teamIndex"}]},{"name":"SetEntityModel","docStart":9809,"docEnd":10001,"docs":{"brief":"Sets the model to a given entity.","tags":[{"tag":"","text":"Sets the model to a given entity."},{"tag":"param:entity","text":"Sets the model to a given entity.\nEntity index."},{"tag":"param:model","text":"Sets the model to a given entity.\nEntity index.Model name."},{"tag":"error","text":"Sets the model to a given entity.\nEntity index.Model name.Invalid entity index, or no mod support."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"const char[]","name":"model","decl":"const char[] model"}]},{"name":"GetPlayerDecalFile","docStart":10066,"docEnd":10425,"docs":{"brief":"Retrieves the decal file name associated with a given client.","tags":[{"tag":"","text":"Retrieves the decal file name associated with a given client."},{"tag":"param:client","text":"Retrieves the decal file name associated with a given client.\nPlayer's index."},{"tag":"param:hex","text":"Retrieves the decal file name associated with a given client.\nPlayer's index.Buffer to store the logo filename."},{"tag":"param:maxlength","text":"Retrieves the decal file name associated with a given client.\nPlayer's index.Buffer to store the logo filename.Maximum length of string buffer."},{"tag":"return","text":"Retrieves the decal file name associated with a given client.\nPlayer's index.Buffer to store the logo filename.Maximum length of string buffer.True on success, otherwise false."},{"tag":"error","text":"Retrieves the decal file name associated with a given client.\nPlayer's index.Buffer to store the logo filename.Maximum length of string buffer.True on success, otherwise false.Invalid client or client not in game."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"char[]","name":"hex","decl":"char[] hex"},{"type":"int","name":"maxlength","decl":"int maxlength"}]},{"name":"GetPlayerJingleFile","docStart":10501,"docEnd":10863,"docs":{"brief":"Retrieves the jingle file name associated with a given client.","tags":[{"tag":"","text":"Retrieves the jingle file name associated with a given client."},{"tag":"param:client","text":"Retrieves the jingle file name associated with a given client.\nPlayer's index."},{"tag":"param:hex","text":"Retrieves the jingle file name associated with a given client.\nPlayer's index.Buffer to store the jingle filename."},{"tag":"param:maxlength","text":"Retrieves the jingle file name associated with a given client.\nPlayer's index.Buffer to store the jingle filename.Maximum length of string buffer."},{"tag":"return","text":"Retrieves the jingle file name associated with a given client.\nPlayer's index.Buffer to store the jingle filename.Maximum length of string buffer.True on success, otherwise false."},{"tag":"error","text":"Retrieves the jingle file name associated with a given client.\nPlayer's index.Buffer to store the jingle filename.Maximum length of string buffer.True on success, otherwise false.Invalid client or client not in game."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"char[]","name":"hex","decl":"char[] hex"},{"type":"int","name":"maxlength","decl":"int maxlength"}]},{"name":"GetServerNetStats","docStart":10940,"docEnd":11152,"docs":{"brief":"Returns the average server network traffic in bytes/sec.","tags":[{"tag":"","text":"Returns the average server network traffic in bytes/sec."},{"tag":"param:in","text":"Returns the average server network traffic in bytes/sec.\nBuffer to store the input traffic velocity."},{"tag":"param:out","text":"Returns the average server network traffic in bytes/sec.\nBuffer to store the input traffic velocity.Buffer to store the output traffic velocity."}]},"kind":"native","returnType":"void","arguments":[{"type":"float&","name":"inAmount","decl":"float& inAmount"},{"type":"float&","name":"outAmout","decl":"float& outAmout"}]},{"name":"EquipPlayerWeapon","docStart":11222,"docEnd":11481,"docs":{"brief":"Equip's a player's weapon.","tags":[{"tag":"","text":"Equip's a player's weapon."},{"tag":"param:client","text":"Equip's a player's weapon.\nClient index."},{"tag":"param:weapon","text":"Equip's a player's weapon.\nClient index.CBaseCombatWeapon entity index."},{"tag":"error","text":"Equip's a player's weapon.\nClient index.CBaseCombatWeapon entity index.Invalid client or entity, lack of mod support, or client not ingame."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"int","name":"weapon","decl":"int weapon"}]},{"name":"ActivateEntity","docStart":11541,"docEnd":11707,"docs":{"brief":"Activates an entity (CBaseAnimating::Activate)","tags":[{"tag":"","text":"Activates an entity (CBaseAnimating::Activate)"},{"tag":"param:entity","text":"Activates an entity (CBaseAnimating::Activate)\nEntity index."},{"tag":"error","text":"Activates an entity (CBaseAnimating::Activate)\nEntity index.Invalid entity or lack of mod support."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"}]},{"name":"SetClientInfo","docStart":11752,"docEnd":12104,"docs":{"brief":"Sets values to client info buffer keys and notifies the engine of the change.The change does not get propagated to mods until the next frame.","tags":[{"tag":"","text":"Sets values to client info buffer keys and notifies the engine of the change.The change does not get propagated to mods until the next frame."},{"tag":"param:client","text":"Sets values to client info buffer keys and notifies the engine of the change.The change does not get propagated to mods until the next frame.\nPlayer's index."},{"tag":"param:key","text":"Sets values to client info buffer keys and notifies the engine of the change.The change does not get propagated to mods until the next frame.\nPlayer's index.Key string."},{"tag":"param:value","text":"Sets values to client info buffer keys and notifies the engine of the change.The change does not get propagated to mods until the next frame.\nPlayer's index.Key string.Value string."},{"tag":"error","text":"Sets values to client info buffer keys and notifies the engine of the change.The change does not get propagated to mods until the next frame.\nPlayer's index.Key string.Value string.Invalid client index, or client not connected."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"const char[]","name":"key","decl":"const char[] key"},{"type":"const char[]","name":"value","decl":"const char[] value"}]},{"name":"SetClientName","docStart":12186,"docEnd":12375,"docs":{"brief":"Changes a client's name.","tags":[{"tag":"","text":"Changes a client's name."},{"tag":"param:client","text":"Changes a client's name.\nPlayer's index."},{"tag":"param:name","text":"Changes a client's name.\nPlayer's index.New name."},{"tag":"error","text":"Changes a client's name.\nPlayer's index.New name.Invalid client index, or client not connected."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"const char[]","name":"name","decl":"const char[] name"}]},{"name":"GivePlayerAmmo","docStart":12438,"docEnd":12884,"docs":{"brief":"Gives ammo of a certain type to a player.This natives obeys the maximum amount of ammo a player can carry per ammo type.","tags":[{"tag":"","text":"Gives ammo of a certain type to a player.This natives obeys the maximum amount of ammo a player can carry per ammo type."},{"tag":"param:client","text":"Gives ammo of a certain type to a player.This natives obeys the maximum amount of ammo a player can carry per ammo type.\nThe client index."},{"tag":"param:amount","text":"Gives ammo of a certain type to a player.This natives obeys the maximum amount of ammo a player can carry per ammo type.\nThe client index.Amount of ammo to give. Is capped at ammotype's limit."},{"tag":"param:ammotype","text":"Gives ammo of a certain type to a player.This natives obeys the maximum amount of ammo a player can carry per ammo type.\nThe client index.Amount of ammo to give. Is capped at ammotype's limit.Type of ammo to give to player."},{"tag":"param:suppressSound","text":"Gives ammo of a certain type to a player.This natives obeys the maximum amount of ammo a player can carry per ammo type.\nThe client index.Amount of ammo to give. Is capped at ammotype's limit.Type of ammo to give to player.If true, don't play the ammo pickup sound."},{"tag":"return","text":"Gives ammo of a certain type to a player.This natives obeys the maximum amount of ammo a player can carry per ammo type.\nThe client index.Amount of ammo to give. Is capped at ammotype's limit.Type of ammo to give to player.If true, don't play the ammo pickup sound.Amount of ammo actually given."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"int","name":"amount","decl":"int amount"},{"type":"int","name":"ammotype","decl":"int ammotype"},{"type":"bool","name":"suppressSound","decl":"bool suppressSound"}]}],"methodmaps":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}