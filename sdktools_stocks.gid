{"functions":[{"name":"FindTeamByName","docStart":1656,"docEnd":2129,"docs":{"brief":"Given a partial team name, attempts to find a matching team.\nThe search is performed case insensitively and only against thefirst N characters of the team names, where N is the number ofcharacters in the search pattern.","tags":[{"tag":"","text":"Given a partial team name, attempts to find a matching team.\nThe search is performed case insensitively and only against thefirst N characters of the team names, where N is the number ofcharacters in the search pattern."},{"tag":"param:name","text":"Given a partial team name, attempts to find a matching team.\nThe search is performed case insensitively and only against thefirst N characters of the team names, where N is the number ofcharacters in the search pattern.\nPartial or full team name."},{"tag":"return","text":"Given a partial team name, attempts to find a matching team.\nThe search is performed case insensitively and only against thefirst N characters of the team names, where N is the number ofcharacters in the search pattern.\nPartial or full team name.A valid team index on success.-1 if no team matched.-2 if more than one team matched."}]},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"name","decl":"const char[] name"}]}],"methodmaps":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}