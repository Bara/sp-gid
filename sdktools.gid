¶ifunctionsäødnamepStartPrepSDKCallhdocStart.fdocEnd¢ddocs¢ebriefx&Starts the preparation of an SDK call.dtagsÇ¢ctag`dtextx&Starts the preparation of an SDK call.¢ctagjparam:typedtextxLStarts the preparation of an SDK call. 
 Type of function call this will be.dkindfnativejreturnTypedvoidiargumentsÅ£dtypekSDKCallTypednamedtypeddeclpSDKCallType typeˇødnamevPrepSDKCall_SetVirtualhdocStart◊fdocEndNddocs¢ebriefx8Sets the virtual index of the SDK call if it is virtual.dtagsÇ¢ctag`dtextx8Sets the virtual index of the SDK call if it is virtual.¢ctagmparam:vtblidxdtextxOSets the virtual index of the SDK call if it is virtual. 
 Virtual table index.dkindfnativejreturnTypedvoidiargumentsÅ£dtypecintdnamegvtblidxddeclkint vtblidxˇødnamexPrepSDKCall_SetSignaturehdocStartÑfdocEndãddocs¢ebriefxQFinds an address in a library and sets it as the address to use for the SDK call.dtagsÖ¢ctag`dtextxQFinds an address in a library and sets it as the address to use for the SDK call.¢ctagiparam:libdtextxcFinds an address in a library and sets it as the address to use for the SDK call. 
 Library to use.¢ctagoparam:signaturedtextyFinds an address in a library and sets it as the address to use for the SDK call. 
 Library to use. Binary data to search for in the library.  If it starts with '@', the bytes parameter is ignored and the signature is interpreted as a symbol lookup in the library.¢ctagkparam:bytesdtexty5Finds an address in a library and sets it as the address to use for the SDK call. 
 Library to use. Binary data to search for in the library.  If it starts with '@', the bytes parameter is ignored and the signature is interpreted as a symbol lookup in the library. Number of bytes in the binary search string.¢ctagfreturndtextybFinds an address in a library and sets it as the address to use for the SDK call. 
 Library to use. Binary data to search for in the library.  If it starts with '@', the bytes parameter is ignored and the signature is interpreted as a symbol lookup in the library. Number of bytes in the binary search string. True on success, false if nothing was found.dkindfnativejreturnTypedbooliargumentsÉ£dtypejSDKLibrarydnameclibddeclnSDKLibrary lib£dtypelconst char[]dnameisignatureddeclvconst char[] signature£dtypecintdnameebytesddecliint bytesˇødnamevPrepSDKCall_SetAddresshdocStartÈfdocEndúddocs¢ebriefx1Uses the given function address for the SDK call.dtagsÉ¢ctag`dtextx1Uses the given function address for the SDK call.¢ctagjparam:addrdtextxOUses the given function address for the SDK call. 
 Address of function to use.¢ctagfreturndtextxrUses the given function address for the SDK call. 
 Address of function to use. True on success, false on failure.dkindfnativejreturnTypedbooliargumentsÅ£dtypegAddressdnamedaddrddecllAddress addrˇødnamewPrepSDKCall_SetFromConfhdocStart”fdocEndyddocs¢ebriefxxFinds an address or virtual function index in a GameConfig file and sets it as the calling information for the SDK call.dtagsÖ¢ctag`dtextxxFinds an address or virtual function index in a GameConfig file and sets it as the calling information for the SDK call.¢ctagnparam:gameconfdtextx∫Finds an address or virtual function index in a GameConfig file and sets it as the calling information for the SDK call. 
 GameConfig Handle, or INVALID_HANDLE to use sdktools.games.txt.¢ctaglparam:sourcedtextx‰Finds an address or virtual function index in a GameConfig file and sets it as the calling information for the SDK call. 
 GameConfig Handle, or INVALID_HANDLE to use sdktools.games.txt. Whether to look in Offsets or Signatures.¢ctagjparam:namedtextyFinds an address or virtual function index in a GameConfig file and sets it as the calling information for the SDK call. 
 GameConfig Handle, or INVALID_HANDLE to use sdktools.games.txt. Whether to look in Offsets or Signatures. Name of the property to find.¢ctagfreturndtexty/Finds an address or virtual function index in a GameConfig file and sets it as the calling information for the SDK call. 
 GameConfig Handle, or INVALID_HANDLE to use sdktools.games.txt. Whether to look in Offsets or Signatures. Name of the property to find. True on success, false if nothing was found.dkindfnativejreturnTypedbooliargumentsÉ£dtypefHandlednamehgameconfddecloHandle gameconf£dtypeqSDKFuncConfSourcednamefsourceddeclxSDKFuncConfSource source£dtypelconst char[]dnamednameddeclqconst char[] nameˇødnamexPrepSDKCall_SetReturnInfohdocStart·fdocEnd≠ddocs¢ebriefxæSets the return information of an SDK call.  Do not call this if there is no return data. This must be called if there is a return value (i.e. it is not necessarily safe to ignore the data).dtagsÖ¢ctag`dtextxæSets the return information of an SDK call.  Do not call this if there is no return data. This must be called if there is a return value (i.e. it is not necessarily safe to ignore the data).¢ctagjparam:typedtextxﬁSets the return information of an SDK call.  Do not call this if there is no return data. This must be called if there is a return value (i.e. it is not necessarily safe to ignore the data). 
 Data type to convert to/from.¢ctagjparam:passdtextx˝Sets the return information of an SDK call.  Do not call this if there is no return data. This must be called if there is a return value (i.e. it is not necessarily safe to ignore the data). 
 Data type to convert to/from. How the data is passed in C++.¢ctagnparam:decflagsdtexty'Sets the return information of an SDK call.  Do not call this if there is no return data. This must be called if there is a return value (i.e. it is not necessarily safe to ignore the data). 
 Data type to convert to/from. How the data is passed in C++. Flags on decoding from the plugin to C++.¢ctagnparam:encflagsdtextyQSets the return information of an SDK call.  Do not call this if there is no return data. This must be called if there is a return value (i.e. it is not necessarily safe to ignore the data). 
 Data type to convert to/from. How the data is passed in C++. Flags on decoding from the plugin to C++. Flags on encoding from C++ to the plugin.dkindfnativejreturnTypedvoidiargumentsÑ£dtypegSDKTypednamedtypeddecllSDKType type£dtypemSDKPassMethoddnamedpassddeclrSDKPassMethod pass£dtypecintdnamehdecflagsddecllint decflags£dtypecintdnamehencflagsddecllint encflagsˇødnamexPrepSDKCall_AddParameterhdocStartfdocEnd~ddocs¢ebriefx]Adds a parameter to the calling convention.  This should be called in normal ascending order.dtagsÖ¢ctag`dtextx]Adds a parameter to the calling convention.  This should be called in normal ascending order.¢ctagjparam:typedtextx}Adds a parameter to the calling convention.  This should be called in normal ascending order. 
 Data type to convert to/from.¢ctagjparam:passdtextxúAdds a parameter to the calling convention.  This should be called in normal ascending order. 
 Data type to convert to/from. How the data is passed in C++.¢ctagnparam:decflagsdtextx∆Adds a parameter to the calling convention.  This should be called in normal ascending order. 
 Data type to convert to/from. How the data is passed in C++. Flags on decoding from the plugin to C++.¢ctagnparam:encflagsdtextxAdds a parameter to the calling convention.  This should be called in normal ascending order. 
 Data type to convert to/from. How the data is passed in C++. Flags on decoding from the plugin to C++. Flags on encoding from C++ to the plugin.dkindfnativejreturnTypedvoidiargumentsÑ£dtypegSDKTypednamedtypeddecllSDKType type£dtypemSDKPassMethoddnamedpassddeclrSDKPassMethod pass£dtypecintdnamehdecflagsddecllint decflags£dtypecintdnamehencflagsddecllint encflagsˇødnamenEndPrepSDKCallhdocStartÎfdocEndóddocs¢ebriefxCFinalizes an SDK call preparation and returns the resultant Handle.dtagsÇ¢ctag`dtextxCFinalizes an SDK call preparation and returns the resultant Handle.¢ctagfreturndtextxÑFinalizes an SDK call preparation and returns the resultant Handle. 
 A new SDKCall Handle on success, or INVALID_HANDLE on failure.dkindfnativejreturnTypefHandleiargumentsÄˇødnamegSDKCallhdocStartºfdocEnd◊ddocs¢ebriefyCalls an SDK function with the given parameters. 
 If the call type is Entity or Player, the index MUST ALWAYS be the FIRST parameter passed. If the call type is GameRules, then nothing special needs to be passed. If the return value is a Vector or QAngles, the SECOND parameter must be a Float[3]. If the return value is a string, the THIRD parameter must be a String buffer, and the FOURTH parameter must be the maximum length. All parameters must be passed after the above is followed.  Failure to follow these rules will result in crashes or wildly unexpected behavior! 
 If the return value is a float or integer, the return value will be this value. If the return value is a CBaseEntity, CBasePlayer, or edict, the return value will always be the entity index, or -1 for NULL.dtagsÖ¢ctag`dtextyCalls an SDK function with the given parameters. 
 If the call type is Entity or Player, the index MUST ALWAYS be the FIRST parameter passed. If the call type is GameRules, then nothing special needs to be passed. If the return value is a Vector or QAngles, the SECOND parameter must be a Float[3]. If the return value is a string, the THIRD parameter must be a String buffer, and the FOURTH parameter must be the maximum length. All parameters must be passed after the above is followed.  Failure to follow these rules will result in crashes or wildly unexpected behavior! 
 If the return value is a float or integer, the return value will be this value. If the return value is a CBaseEntity, CBasePlayer, or edict, the return value will always be the entity index, or -1 for NULL.¢ctagjparam:calldtexty Calls an SDK function with the given parameters. 
 If the call type is Entity or Player, the index MUST ALWAYS be the FIRST parameter passed. If the call type is GameRules, then nothing special needs to be passed. If the return value is a Vector or QAngles, the SECOND parameter must be a Float[3]. If the return value is a string, the THIRD parameter must be a String buffer, and the FOURTH parameter must be the maximum length. All parameters must be passed after the above is followed.  Failure to follow these rules will result in crashes or wildly unexpected behavior! 
 If the return value is a float or integer, the return value will be this value. If the return value is a CBaseEntity, CBasePlayer, or edict, the return value will always be the entity index, or -1 for NULL. 
 SDKCall Handle.¢ctagiparam:...dtexty1Calls an SDK function with the given parameters. 
 If the call type is Entity or Player, the index MUST ALWAYS be the FIRST parameter passed. If the call type is GameRules, then nothing special needs to be passed. If the return value is a Vector or QAngles, the SECOND parameter must be a Float[3]. If the return value is a string, the THIRD parameter must be a String buffer, and the FOURTH parameter must be the maximum length. All parameters must be passed after the above is followed.  Failure to follow these rules will result in crashes or wildly unexpected behavior! 
 If the return value is a float or integer, the return value will be this value. If the return value is a CBaseEntity, CBasePlayer, or edict, the return value will always be the entity index, or -1 for NULL. 
 SDKCall Handle. Call Parameters.¢ctagfreturndtextyNCalls an SDK function with the given parameters. 
 If the call type is Entity or Player, the index MUST ALWAYS be the FIRST parameter passed. If the call type is GameRules, then nothing special needs to be passed. If the return value is a Vector or QAngles, the SECOND parameter must be a Float[3]. If the return value is a string, the THIRD parameter must be a String buffer, and the FOURTH parameter must be the maximum length. All parameters must be passed after the above is followed.  Failure to follow these rules will result in crashes or wildly unexpected behavior! 
 If the return value is a float or integer, the return value will be this value. If the return value is a CBaseEntity, CBasePlayer, or edict, the return value will always be the entity index, or -1 for NULL. 
 SDKCall Handle. Call Parameters. Simple return value, if any.¢ctageerrordtextyyCalls an SDK function with the given parameters. 
 If the call type is Entity or Player, the index MUST ALWAYS be the FIRST parameter passed. If the call type is GameRules, then nothing special needs to be passed. If the return value is a Vector or QAngles, the SECOND parameter must be a Float[3]. If the return value is a string, the THIRD parameter must be a String buffer, and the FOURTH parameter must be the maximum length. All parameters must be passed after the above is followed.  Failure to follow these rules will result in crashes or wildly unexpected behavior! 
 If the return value is a float or integer, the return value will be this value. If the return value is a CBaseEntity, CBasePlayer, or edict, the return value will always be the entity index, or -1 for NULL. 
 SDKCall Handle. Call Parameters. Simple return value, if any. Invalid Handle or internal decoding error.dkindfnativejreturnTypecanyiargumentsÇ£dtypefHandlednamedcallddeclkHandle call£dtypefany...dnamec...ddecljany... ...ˇødnamewGetPlayerResourceEntityhdocStart fdocEnd úddocs¢ebriefx?Returns the entity index of the player resource/manager entity.dtagsÇ¢ctag`dtextx?Returns the entity index of the player resource/manager entity.¢ctagfreturndtextxnReturns the entity index of the player resource/manager entity. 
 Index of resource entity or -1 if not found.dkindfnativejreturnTypecintiargumentsÄˇjmethodmapsÄiconstantsÄeenumsÖødnamekSDKCallTypehdocStart fdocEnd ddocsˆgentriesÜødnamenSDKCall_StatichdocStart}fdocEndêddocsˆˇødnamenSDKCall_EntityhdocStart´fdocEnd√ddocsˆˇødnamenSDKCall_PlayerhdocStartﬁfdocEndˆddocsˆˇødnameqSDKCall_GameRuleshdocStart	fdocEnd	(ddocsˆˇødnamerSDKCall_EntityListhdocStart	CfdocEnd	addocsˆˇødnamekSDKCall_RawhdocStart	|fdocEnd	¨ddocsˆˇˇødnamejSDKLibraryhdocStart fdocEnd ddocsˆgentriesÇødnameqSDKLibrary_ServerhdocStart	·fdocEnd
ddocsˆˇødnameqSDKLibrary_EnginehdocStart
fdocEnd
;ddocsˆˇˇødnameqSDKFuncConfSourcehdocStart fdocEnd ddocsˆgentriesÉødnameoSDKConf_VirtualhdocStart
wfdocEnd
¨ddocsˆˇødnameqSDKConf_SignaturehdocStart
«fdocEnd
˚ddocsˆˇødnameoSDKConf_AddresshdocStartfdocEndHddocsˆˇˇødnamegSDKTypehdocStart fdocEnd ddocsˆgentriesâødnamesSDKType_CBaseEntityhdocStartzfdocEnd°ddocsˆˇødnamesSDKType_CBasePlayerhdocStartºfdocEnd„ddocsˆˇødnamenSDKType_VectorhdocStart˛fdocEnd'ddocsˆˇødnamenSDKType_QAnglehdocStartBfdocEndlddocsˆˇødnametSDKType_PlainOldDatahdocStartáfdocEnd±ddocsˆˇødnamemSDKType_FloathdocStartÃfdocEndﬂddocsˆˇødnamemSDKType_EdicthdocStart˙fdocEndddocsˆˇødnamenSDKType_StringhdocStart8fdocEndjddocsˆˇødnamelSDKType_BoolhdocStartÖfdocEndöddocsˆˇˇødnamemSDKPassMethodhdocStart fdocEnd ddocsˆgentriesÑødnameoSDKPass_PointerhdocStart“fdocEndÎddocsˆˇødnamemSDKPass_PlainhdocStartfdocEnd ddocsˆˇødnameoSDKPass_ByValuehdocStart;fdocEndZddocsˆˇødnamemSDKPass_ByRefhdocStartufdocEndòddocsˆˇˇhtypesetsÄhtypedefsÄ