{"functions":[{"name":"PrefetchSound","docStart":5060,"docEnd":5169,"docs":{"brief":"Prefetches a sound.","tags":[{"tag":"","text":"Prefetches a sound."},{"tag":"param:name","text":"Prefetches a sound.\nSound file name relative to the \"sound\" folder."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"name","decl":"const char[] name"}]},{"name":"GetSoundDuration","docStart":0,"docEnd":0,"docs":null,"kind":"native","returnType":"float","arguments":[{"type":"const char[]","name":"name","decl":"const char[] name"}]},{"name":"EmitAmbientSound","docStart":5636,"docEnd":6082,"docs":{"brief":"Emits an ambient sound.","tags":[{"tag":"","text":"Emits an ambient sound."},{"tag":"param:name","text":"Emits an ambient sound.\nSound file name relative to the \"sound\" folder."},{"tag":"param:pos","text":"Emits an ambient sound.\nSound file name relative to the \"sound\" folder.Origin of sound."},{"tag":"param:entity","text":"Emits an ambient sound.\nSound file name relative to the \"sound\" folder.Origin of sound.Entity index to associate sound with."},{"tag":"param:level","text":"Emits an ambient sound.\nSound file name relative to the \"sound\" folder.Origin of sound.Entity index to associate sound with.Sound level (from 0 to 255)."},{"tag":"param:flags","text":"Emits an ambient sound.\nSound file name relative to the \"sound\" folder.Origin of sound.Entity index to associate sound with.Sound level (from 0 to 255).Sound flags."},{"tag":"param:vol","text":"Emits an ambient sound.\nSound file name relative to the \"sound\" folder.Origin of sound.Entity index to associate sound with.Sound level (from 0 to 255).Sound flags.Volume (from 0.0 to 1.0)."},{"tag":"param:pitch","text":"Emits an ambient sound.\nSound file name relative to the \"sound\" folder.Origin of sound.Entity index to associate sound with.Sound level (from 0 to 255).Sound flags.Volume (from 0.0 to 1.0).Pitch (from 0 to 255)."},{"tag":"param:delay","text":"Emits an ambient sound.\nSound file name relative to the \"sound\" folder.Origin of sound.Entity index to associate sound with.Sound level (from 0 to 255).Sound flags.Volume (from 0.0 to 1.0).Pitch (from 0 to 255).Play delay."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"name","decl":"const char[] name"},{"type":"const float[3]","name":"pos","decl":"const float pos[3]"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"level","decl":"int level"},{"type":"int","name":"flags","decl":"int flags"},{"type":"float","name":"vol","decl":"float vol"},{"type":"int","name":"pitch","decl":"int pitch"},{"type":"float","name":"delay","decl":"float delay"}]},{"name":"FadeClientVolume","docStart":6365,"docEnd":6750,"docs":{"brief":"Fades a client's volume level toward silence or a given percentage.","tags":[{"tag":"","text":"Fades a client's volume level toward silence or a given percentage."},{"tag":"param:client","text":"Fades a client's volume level toward silence or a given percentage.\nClient index."},{"tag":"param:percent","text":"Fades a client's volume level toward silence or a given percentage.\nClient index.Fade percentage."},{"tag":"param:outtime","text":"Fades a client's volume level toward silence or a given percentage.\nClient index.Fade percentage.Fade out time, in seconds."},{"tag":"param:holdtime","text":"Fades a client's volume level toward silence or a given percentage.\nClient index.Fade percentage.Fade out time, in seconds.Hold time, in seconds."},{"tag":"param:intime","text":"Fades a client's volume level toward silence or a given percentage.\nClient index.Fade percentage.Fade out time, in seconds.Hold time, in seconds.Fade in time, in seconds."},{"tag":"error","text":"Fades a client's volume level toward silence or a given percentage.\nClient index.Fade percentage.Fade out time, in seconds.Hold time, in seconds.Fade in time, in seconds.Invalid client index or client not in game."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"float","name":"percent","decl":"float percent"},{"type":"float","name":"outtime","decl":"float outtime"},{"type":"float","name":"holdtime","decl":"float holdtime"},{"type":"float","name":"intime","decl":"float intime"}]},{"name":"StopSound","docStart":6857,"docEnd":7041,"docs":{"brief":"Stops a sound.","tags":[{"tag":"","text":"Stops a sound."},{"tag":"param:entity","text":"Stops a sound.\nEntity index."},{"tag":"param:channel","text":"Stops a sound.\nEntity index.Channel number."},{"tag":"param:name","text":"Stops a sound.\nEntity index.Channel number.Sound file name relative to the \"sound\" folder."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"channel","decl":"int channel"},{"type":"const char[]","name":"name","decl":"const char[] name"}]},{"name":"EmitSound","docStart":7113,"docEnd":7955,"docs":{"brief":"Emits a sound to a list of clients.","tags":[{"tag":"","text":"Emits a sound to a list of clients."},{"tag":"param:clients","text":"Emits a sound to a list of clients.\nArray of client indexes."},{"tag":"param:numClients","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array."},{"tag":"param:sample","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder."},{"tag":"param:entity","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from."},{"tag":"param:channel","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with."},{"tag":"param:level","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level."},{"tag":"param:flags","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags."},{"tag":"param:volume","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume."},{"tag":"param:pitch","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch."},{"tag":"param:speakerentity","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown."},{"tag":"param:origin","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin."},{"tag":"param:dir","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction."},{"tag":"param:updatePos","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)"},{"tag":"param:soundtime","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for."},{"tag":"param:...","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Optional list of Float[3] arrays to specify additional origins."},{"tag":"error","text":"Emits a sound to a list of clients.\nArray of client indexes.Number of clients in the array.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Optional list of Float[3] arrays to specify additional origins.Invalid client index."}]},"kind":"native","returnType":"void","arguments":[{"type":"const int[]","name":"clients","decl":"const int[] clients"},{"type":"int","name":"numClients","decl":"int numClients"},{"type":"const char[]","name":"sample","decl":"const char[] sample"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"channel","decl":"int channel"},{"type":"int","name":"level","decl":"int level"},{"type":"int","name":"flags","decl":"int flags"},{"type":"float","name":"volume","decl":"float volume"},{"type":"int","name":"pitch","decl":"int pitch"},{"type":"int","name":"speakerentity","decl":"int speakerentity"},{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"const float[3]","name":"dir","decl":"const float dir[3]"},{"type":"bool","name":"updatePos","decl":"bool updatePos"},{"type":"float","name":"soundtime","decl":"float soundtime"},{"type":"any...","name":"...","decl":"any... ..."}]},{"name":"EmitSoundEntry","docStart":8448,"docEnd":9528,"docs":{"brief":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.","tags":[{"tag":"","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2."},{"tag":"param:clients","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes."},{"tag":"param:numClients","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array."},{"tag":"param:soundEntry","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name."},{"tag":"param:sample","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder."},{"tag":"param:entity","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from."},{"tag":"param:channel","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with."},{"tag":"param:level","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level."},{"tag":"param:seed","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed."},{"tag":"param:flags","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags."},{"tag":"param:volume","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags.Sound volume."},{"tag":"param:pitch","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags.Sound volume.Sound pitch."},{"tag":"param:speakerentity","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags.Sound volume.Sound pitch.Unknown."},{"tag":"param:origin","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin."},{"tag":"param:dir","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction."},{"tag":"param:updatePos","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)"},{"tag":"param:soundtime","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for."},{"tag":"param:...","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Optional list of Float[3] arrays to specify additional origins."},{"tag":"error","text":"Emits a sound or game sound to a list of clients using the latest version of the engine sound interface.This native is only available in engines that are greater than or equal to Portal 2.\nArray of client indexes.Number of clients in the array.Sound entry name.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound seed.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Optional list of Float[3] arrays to specify additional origins.Invalid client index."}]},"kind":"native","returnType":"void","arguments":[{"type":"const int[]","name":"clients","decl":"const int[] clients"},{"type":"int","name":"numClients","decl":"int numClients"},{"type":"const char[]","name":"soundEntry","decl":"const char[] soundEntry"},{"type":"const char[]","name":"sample","decl":"const char[] sample"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"channel","decl":"int channel"},{"type":"int","name":"level","decl":"int level"},{"type":"int","name":"seed","decl":"int seed"},{"type":"int","name":"flags","decl":"int flags"},{"type":"float","name":"volume","decl":"float volume"},{"type":"int","name":"pitch","decl":"int pitch"},{"type":"int","name":"speakerentity","decl":"int speakerentity"},{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"const float[3]","name":"dir","decl":"const float dir[3]"},{"type":"bool","name":"updatePos","decl":"bool updatePos"},{"type":"float","name":"soundtime","decl":"float soundtime"},{"type":"any...","name":"...","decl":"any... ..."}]},{"name":"EmitSentence","docStart":10077,"docEnd":10918,"docs":{"brief":"Emits a sentence to a list of clients.","tags":[{"tag":"","text":"Emits a sentence to a list of clients."},{"tag":"param:clients","text":"Emits a sentence to a list of clients.\nArray of client indexes."},{"tag":"param:numClients","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array."},{"tag":"param:sentence","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile)."},{"tag":"param:entity","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from."},{"tag":"param:channel","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with."},{"tag":"param:level","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level."},{"tag":"param:flags","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags."},{"tag":"param:volume","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume."},{"tag":"param:pitch","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch."},{"tag":"param:speakerentity","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown."},{"tag":"param:origin","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin."},{"tag":"param:dir","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction."},{"tag":"param:updatePos","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)"},{"tag":"param:soundtime","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for."},{"tag":"param:...","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Optional list of Float[3] arrays to specify additional origins."},{"tag":"error","text":"Emits a sentence to a list of clients.\nArray of client indexes.Number of clients in the array.Sentence index (from PrecacheSentenceFile).Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Optional list of Float[3] arrays to specify additional origins.Invalid client index."}]},"kind":"native","returnType":"void","arguments":[{"type":"const int[]","name":"clients","decl":"const int[] clients"},{"type":"int","name":"numClients","decl":"int numClients"},{"type":"int","name":"sentence","decl":"int sentence"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"channel","decl":"int channel"},{"type":"int","name":"level","decl":"int level"},{"type":"int","name":"flags","decl":"int flags"},{"type":"float","name":"volume","decl":"float volume"},{"type":"int","name":"pitch","decl":"int pitch"},{"type":"int","name":"speakerentity","decl":"int speakerentity"},{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"const float[3]","name":"dir","decl":"const float dir[3]"},{"type":"bool","name":"updatePos","decl":"bool updatePos"},{"type":"float","name":"soundtime","decl":"float soundtime"},{"type":"any...","name":"...","decl":"any... ..."}]},{"name":"GetDistGainFromSoundLevel","docStart":11387,"docEnd":11809,"docs":{"brief":"Calculates gain of sound on given distance with given sound level in decibel","tags":[{"tag":"","text":"Calculates gain of sound on given distance with given sound level in decibel"},{"tag":"param:soundlevel","text":"Calculates gain of sound on given distance with given sound level in decibel\ndecibel of sound, like SNDLEVEL_NORMAL or integer value"},{"tag":"param:distance","text":"Calculates gain of sound on given distance with given sound level in decibel\ndecibel of sound, like SNDLEVEL_NORMAL or integer valuedistance of sound to calculate, not meter or feet, but Source Engine`s normal Coordinate unit"},{"tag":"return","text":"Calculates gain of sound on given distance with given sound level in decibel\ndecibel of sound, like SNDLEVEL_NORMAL or integer valuedistance of sound to calculate, not meter or feet, but Source Engine`s normal Coordinate unitgain of sound. you can multiply this with original sound`s volume to calculate volume on given distance"}]},"kind":"native","returnType":"float","arguments":[{"type":"int","name":"soundlevel","decl":"int soundlevel"},{"type":"float","name":"distance","decl":"float distance"}]},{"name":"AddAmbientSoundHook","docStart":14574,"docEnd":14723,"docs":{"brief":"Hooks all played ambient sounds.","tags":[{"tag":"","text":"Hooks all played ambient sounds."},{"tag":"param:hook","text":"Hooks all played ambient sounds.\nFunction to use as a hook."},{"tag":"error","text":"Hooks all played ambient sounds.\nFunction to use as a hook.Invalid function hook."}]},"kind":"native","returnType":"void","arguments":[{"type":"AmbientSHook","name":"hook","decl":"AmbientSHook hook"}]},{"name":"AddNormalSoundHook","docStart":14780,"docEnd":14928,"docs":{"brief":"Hooks all played normal sounds.","tags":[{"tag":"","text":"Hooks all played normal sounds."},{"tag":"param:hook","text":"Hooks all played normal sounds.\nFunction to use as a hook."},{"tag":"error","text":"Hooks all played normal sounds.\nFunction to use as a hook.Invalid function hook."}]},"kind":"native","returnType":"void","arguments":[{"type":"NormalSHook","name":"hook","decl":"NormalSHook hook"}]},{"name":"RemoveAmbientSoundHook","docStart":14983,"docEnd":15135,"docs":{"brief":"Unhooks all played ambient sounds.","tags":[{"tag":"","text":"Unhooks all played ambient sounds."},{"tag":"param:hook","text":"Unhooks all played ambient sounds.\nFunction used for the hook."},{"tag":"error","text":"Unhooks all played ambient sounds.\nFunction used for the hook.Invalid function hook."}]},"kind":"native","returnType":"void","arguments":[{"type":"AmbientSHook","name":"hook","decl":"AmbientSHook hook"}]},{"name":"RemoveNormalSoundHook","docStart":15195,"docEnd":15346,"docs":{"brief":"Unhooks all played normal sounds.","tags":[{"tag":"","text":"Unhooks all played normal sounds."},{"tag":"param:hook","text":"Unhooks all played normal sounds.\nFunction used for the hook."},{"tag":"error","text":"Unhooks all played normal sounds.\nFunction used for the hook.Invalid function hook."}]},"kind":"native","returnType":"void","arguments":[{"type":"NormalSHook","name":"hook","decl":"NormalSHook hook"}]},{"name":"EmitSoundToClient","docStart":15404,"docEnd":16090,"docs":{"brief":"Wrapper to emit sound to one client.","tags":[{"tag":"","text":"Wrapper to emit sound to one client."},{"tag":"param:client","text":"Wrapper to emit sound to one client.\nClient index."},{"tag":"param:sample","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder."},{"tag":"param:entity","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from."},{"tag":"param:channel","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with."},{"tag":"param:level","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level."},{"tag":"param:flags","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags."},{"tag":"param:volume","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume."},{"tag":"param:pitch","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch."},{"tag":"param:speakerentity","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown."},{"tag":"param:origin","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin."},{"tag":"param:dir","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction."},{"tag":"param:updatePos","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)"},{"tag":"param:soundtime","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for."},{"tag":"error","text":"Wrapper to emit sound to one client.\nClient index.Sound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Invalid client index."}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"const char[]","name":"sample","decl":"const char[] sample"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"channel","decl":"int channel"},{"type":"int","name":"level","decl":"int level"},{"type":"int","name":"flags","decl":"int flags"},{"type":"float","name":"volume","decl":"float volume"},{"type":"int","name":"pitch","decl":"int pitch"},{"type":"int","name":"speakerentity","decl":"int speakerentity"},{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"const float[3]","name":"dir","decl":"const float dir[3]"},{"type":"bool","name":"updatePos","decl":"bool updatePos"},{"type":"float","name":"soundtime","decl":"float soundtime"}]},{"name":"EmitSoundToAll","docStart":16861,"docEnd":17509,"docs":{"brief":"Wrapper to emit sound to all clients.","tags":[{"tag":"","text":"Wrapper to emit sound to all clients."},{"tag":"param:sample","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder."},{"tag":"param:entity","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from."},{"tag":"param:channel","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with."},{"tag":"param:level","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level."},{"tag":"param:flags","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags."},{"tag":"param:volume","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume."},{"tag":"param:pitch","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch."},{"tag":"param:speakerentity","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown."},{"tag":"param:origin","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin."},{"tag":"param:dir","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction."},{"tag":"param:updatePos","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)"},{"tag":"param:soundtime","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for."},{"tag":"error","text":"Wrapper to emit sound to all clients.\nSound file name relative to the \"sound\" folder.Entity to emit from.Channel to emit with.Sound level.Sound flags.Sound volume.Sound pitch.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Invalid client index."}]},"kind":"stock","returnType":"void","arguments":[{"type":"const char[]","name":"sample","decl":"const char[] sample"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"channel","decl":"int channel"},{"type":"int","name":"level","decl":"int level"},{"type":"int","name":"flags","decl":"int flags"},{"type":"float","name":"volume","decl":"float volume"},{"type":"int","name":"pitch","decl":"int pitch"},{"type":"int","name":"speakerentity","decl":"int speakerentity"},{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"const float[3]","name":"dir","decl":"const float dir[3]"},{"type":"bool","name":"updatePos","decl":"bool updatePos"},{"type":"float","name":"soundtime","decl":"float soundtime"}]},{"name":"ATTN_TO_SNDLEVEL","docStart":18276,"docEnd":18468,"docs":{"brief":"Converts an attenuation value to a sound level.This function is from the HL2SDK.","tags":[{"tag":"","text":"Converts an attenuation value to a sound level.This function is from the HL2SDK."},{"tag":"param:attn","text":"Converts an attenuation value to a sound level.This function is from the HL2SDK.\nAttenuation value."},{"tag":"return","text":"Converts an attenuation value to a sound level.This function is from the HL2SDK.\nAttenuation value.Integer sound level."}]},"kind":"stock","returnType":"int","arguments":[{"type":"float","name":"attn","decl":"float attn"}]},{"name":"GetGameSoundParams","docStart":18600,"docEnd":19395,"docs":{"brief":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.","tags":[{"tag":"","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random."},{"tag":"param:gameSound","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound."},{"tag":"param:channel","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Channel to emit with."},{"tag":"param:level","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Channel to emit with.Sound level."},{"tag":"param:volume","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Channel to emit with.Sound level.Sound volume."},{"tag":"param:pitch","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Channel to emit with.Sound level.Sound volume.Sound pitch."},{"tag":"param:sample","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Channel to emit with.Sound level.Sound volume.Sound pitch.Sound file name relative to the \"sound\" folder."},{"tag":"param:maxlength","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Channel to emit with.Sound level.Sound volume.Sound pitch.Sound file name relative to the \"sound\" folder.Maximum length of sample string buffer."},{"tag":"param:entity","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Channel to emit with.Sound level.Sound volume.Sound pitch.Sound file name relative to the \"sound\" folder.Maximum length of sample string buffer.Entity the sound is being emitted from."},{"tag":"return","text":"Retrieves the parameters for a game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Channel to emit with.Sound level.Sound volume.Sound pitch.Sound file name relative to the \"sound\" folder.Maximum length of sample string buffer.Entity the sound is being emitted from.True if the sound was successfully retrieved, false if itwas not found"}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"gameSound","decl":"const char[] gameSound"},{"type":"int&","name":"channel","decl":"int& channel"},{"type":"int&","name":"soundLevel","decl":"int& soundLevel"},{"type":"float&","name":"volume","decl":"float& volume"},{"type":"int&","name":"pitch","decl":"int& pitch"},{"type":"char[]","name":"sample","decl":"char[] sample"},{"type":"int","name":"maxlength","decl":"int maxlength"},{"type":"int","name":"entity","decl":"int entity"}]},{"name":"EmitGameSound","docStart":19609,"docEnd":20468,"docs":{"brief":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.","tags":[{"tag":"","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random."},{"tag":"param:clients","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes."},{"tag":"param:numClients","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array."},{"tag":"param:gameSound","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound."},{"tag":"param:entity","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound.Entity to emit from."},{"tag":"param:flags","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound.Entity to emit from.Sound flags."},{"tag":"param:speakerentity","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound.Entity to emit from.Sound flags.Unknown."},{"tag":"param:origin","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin."},{"tag":"param:dir","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction."},{"tag":"param:updatePos","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)"},{"tag":"param:soundtime","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for."},{"tag":"return","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.True if the sound was played successfully, false if it failed"},{"tag":"error","text":"Emits a game sound to a list of clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nArray of client indexes.Number of clients in the array.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.True if the sound was played successfully, false if it failedInvalid client index."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const int[]","name":"clients","decl":"const int[] clients"},{"type":"int","name":"numClients","decl":"int numClients"},{"type":"const char[]","name":"gameSound","decl":"const char[] gameSound"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"flags","decl":"int flags"},{"type":"int","name":"speakerentity","decl":"int speakerentity"},{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"const float[3]","name":"dir","decl":"const float dir[3]"},{"type":"bool","name":"updatePos","decl":"bool updatePos"},{"type":"float","name":"soundtime","decl":"float soundtime"}]},{"name":"EmitAmbientGameSound","docStart":21182,"docEnd":21656,"docs":{"brief":"Emits an ambient game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.","tags":[{"tag":"","text":"Emits an ambient game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random."},{"tag":"param:gameSound","text":"Emits an ambient game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound."},{"tag":"param:pos","text":"Emits an ambient game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Origin of sound."},{"tag":"param:entity","text":"Emits an ambient game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Origin of sound.Entity index to associate sound with."},{"tag":"param:flags","text":"Emits an ambient game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Origin of sound.Entity index to associate sound with.Sound flags."},{"tag":"param:delay","text":"Emits an ambient game sound.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Origin of sound.Entity index to associate sound with.Sound flags.Play delay."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"gameSound","decl":"const char[] gameSound"},{"type":"const float[3]","name":"pos","decl":"const float pos[3]"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"flags","decl":"int flags"},{"type":"float","name":"delay","decl":"float delay"}]},{"name":"EmitGameSoundToClient","docStart":22245,"docEnd":22952,"docs":{"brief":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.","tags":[{"tag":"","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random."},{"tag":"param:client","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index."},{"tag":"param:gameSound","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index.Name of game sound."},{"tag":"param:entity","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index.Name of game sound.Entity to emit from."},{"tag":"param:flags","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index.Name of game sound.Entity to emit from.Sound flags."},{"tag":"param:speakerentity","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index.Name of game sound.Entity to emit from.Sound flags.Unknown."},{"tag":"param:origin","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin."},{"tag":"param:dir","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction."},{"tag":"param:updatePos","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)"},{"tag":"param:soundtime","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for."},{"tag":"error","text":"Wrapper to emit a game sound to one client.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nClient index.Name of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Invalid client index."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"const char[]","name":"gameSound","decl":"const char[] gameSound"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"flags","decl":"int flags"},{"type":"int","name":"speakerentity","decl":"int speakerentity"},{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"const float[3]","name":"dir","decl":"const float dir[3]"},{"type":"bool","name":"updatePos","decl":"bool updatePos"},{"type":"float","name":"soundtime","decl":"float soundtime"}]},{"name":"EmitGameSoundToAll","docStart":23562,"docEnd":24229,"docs":{"brief":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.","tags":[{"tag":"","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random."},{"tag":"param:gameSound","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound."},{"tag":"param:entity","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Entity to emit from."},{"tag":"param:flags","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Entity to emit from.Sound flags."},{"tag":"param:speakerentity","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Entity to emit from.Sound flags.Unknown."},{"tag":"param:origin","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Entity to emit from.Sound flags.Unknown.Sound origin."},{"tag":"param:dir","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction."},{"tag":"param:updatePos","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)"},{"tag":"param:soundtime","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for."},{"tag":"error","text":"Wrapper to emit game sound to all clients.\nGame sounds are found in a game's scripts/game_sound.txt or other filesreferenced from it\nNote that if a game sound has a rndwave section, one of them will be returnedat random.\nName of game sound.Entity to emit from.Sound flags.Unknown.Sound origin.Sound direction.Unknown (updates positions?)Alternate time to play sound for.Invalid client index."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"gameSound","decl":"const char[] gameSound"},{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"flags","decl":"int flags"},{"type":"int","name":"speakerentity","decl":"int speakerentity"},{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"const float[3]","name":"dir","decl":"const float dir[3]"},{"type":"bool","name":"updatePos","decl":"bool updatePos"},{"type":"float","name":"soundtime","decl":"float soundtime"}]},{"name":"PrecacheScriptSound","docStart":24853,"docEnd":25523,"docs":{"brief":"Precache a game sound.\nMost games will precache all game sounds on map start, but this is not guaranteed...Team Fortress 2 is known to not pre-cache MvM game mode sounds on non-MvM maps.\nDue to the above, this native should be called before any calls to GetGameSoundParams,EmitGameSound*, or EmitAmbientGameSound.\nIt should be safe to pass already precached game sounds to this function.\nNote: It precaches all files for a game sound.","tags":[{"tag":"","text":"Precache a game sound.\nMost games will precache all game sounds on map start, but this is not guaranteed...Team Fortress 2 is known to not pre-cache MvM game mode sounds on non-MvM maps.\nDue to the above, this native should be called before any calls to GetGameSoundParams,EmitGameSound*, or EmitAmbientGameSound.\nIt should be safe to pass already precached game sounds to this function.\nNote: It precaches all files for a game sound."},{"tag":"param:soundname","text":"Precache a game sound.\nMost games will precache all game sounds on map start, but this is not guaranteed...Team Fortress 2 is known to not pre-cache MvM game mode sounds on non-MvM maps.\nDue to the above, this native should be called before any calls to GetGameSoundParams,EmitGameSound*, or EmitAmbientGameSound.\nIt should be safe to pass already precached game sounds to this function.\nNote: It precaches all files for a game sound.\nGame sound to precache"},{"tag":"return","text":"Precache a game sound.\nMost games will precache all game sounds on map start, but this is not guaranteed...Team Fortress 2 is known to not pre-cache MvM game mode sounds on non-MvM maps.\nDue to the above, this native should be called before any calls to GetGameSoundParams,EmitGameSound*, or EmitAmbientGameSound.\nIt should be safe to pass already precached game sounds to this function.\nNote: It precaches all files for a game sound.\nGame sound to precacheTrue if the game sound was found, false if sound did not existor had no files"}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"soundname","decl":"const char[] soundname"}]}],"methodmaps":[],"constants":[{"name":"SNDCHAN_REPLACE","docStart":1988,"docEnd":2003,"docs":{"brief":"Unknown","tags":[{"tag":"","text":"Unknown"}]}},{"name":"SNDCHAN_AUTO","docStart":2034,"docEnd":2046,"docs":{"brief":"Auto","tags":[{"tag":"","text":"Auto"}]}},{"name":"SNDCHAN_WEAPON","docStart":2077,"docEnd":2092,"docs":{"brief":"Weapons","tags":[{"tag":"","text":"Weapons"}]}},{"name":"SNDCHAN_VOICE","docStart":2123,"docEnd":2137,"docs":{"brief":"Voices","tags":[{"tag":"","text":"Voices"}]}},{"name":"SNDCHAN_ITEM","docStart":2168,"docEnd":2181,"docs":{"brief":"Items","tags":[{"tag":"","text":"Items"}]}},{"name":"SNDCHAN_BODY","docStart":2212,"docEnd":2227,"docs":{"brief":"Player?","tags":[{"tag":"","text":"Player?"}]}},{"name":"SNDCHAN_STREAM","docStart":2258,"docEnd":2314,"docs":{"brief":"\"Stream channel from the static or dynamic area\"","tags":[{"tag":"","text":"\"Stream channel from the static or dynamic area\""}]}},{"name":"SNDCHAN_STATIC","docStart":2345,"docEnd":2390,"docs":{"brief":"\"Stream channel from the static area\"","tags":[{"tag":"","text":"\"Stream channel from the static area\""}]}},{"name":"SNDCHAN_VOICE_BASE","docStart":2421,"docEnd":2461,"docs":{"brief":"\"Channel for network voice data\"","tags":[{"tag":"","text":"\"Channel for network voice data\""}]}},{"name":"SNDCHAN_USER_BASE","docStart":2492,"docEnd":2542,"docs":{"brief":"Anything >= this is allocated to game code","tags":[{"tag":"","text":"Anything >= this is allocated to game code"}]}},{"name":"SND_NOFLAGS","docStart":2644,"docEnd":2659,"docs":{"brief":"Nothing","tags":[{"tag":"","text":"Nothing"}]}},{"name":"SND_CHANGEVOL","docStart":2690,"docEnd":2717,"docs":{"brief":"Change sound volume","tags":[{"tag":"","text":"Change sound volume"}]}},{"name":"SND_CHANGEPITCH","docStart":2748,"docEnd":2774,"docs":{"brief":"Change sound pitch","tags":[{"tag":"","text":"Change sound pitch"}]}},{"name":"SND_STOP","docStart":2805,"docEnd":2827,"docs":{"brief":"Stop the sound","tags":[{"tag":"","text":"Stop the sound"}]}},{"name":"SND_SPAWNING","docStart":2858,"docEnd":2897,"docs":{"brief":"Used in some cases for ambients","tags":[{"tag":"","text":"Used in some cases for ambients"}]}},{"name":"SND_DELAY","docStart":2928,"docEnd":2962,"docs":{"brief":"Sound has an initial delay","tags":[{"tag":"","text":"Sound has an initial delay"}]}},{"name":"SND_STOPLOOPING","docStart":2993,"docEnd":3038,"docs":{"brief":"Stop looping all sounds on the entity","tags":[{"tag":"","text":"Stop looping all sounds on the entity"}]}},{"name":"SND_SPEAKER","docStart":3069,"docEnd":3116,"docs":{"brief":"Being played by a mic through a speaker","tags":[{"tag":"","text":"Being played by a mic through a speaker"}]}},{"name":"SND_SHOULDPAUSE","docStart":3147,"docEnd":3178,"docs":{"brief":"Pause if game is paused","tags":[{"tag":"","text":"Pause if game is paused"}]}},{"name":"SNDLEVEL_NONE","docStart":3277,"docEnd":3289,"docs":{"brief":"None","tags":[{"tag":"","text":"None"}]}},{"name":"SNDLEVEL_RUSTLE","docStart":3320,"docEnd":3343,"docs":{"brief":"Rustling leaves","tags":[{"tag":"","text":"Rustling leaves"}]}},{"name":"SNDLEVEL_WHISPER","docStart":3374,"docEnd":3392,"docs":{"brief":"Whispering","tags":[{"tag":"","text":"Whispering"}]}},{"name":"SNDLEVEL_LIBRARY","docStart":3423,"docEnd":3443,"docs":{"brief":"In a library","tags":[{"tag":"","text":"In a library"}]}},{"name":"SNDLEVEL_FRIDGE","docStart":3474,"docEnd":3494,"docs":{"brief":"Refrigerator","tags":[{"tag":"","text":"Refrigerator"}]}},{"name":"SNDLEVEL_HOME","docStart":3525,"docEnd":3556,"docs":{"brief":"Average home (3.9 attn)","tags":[{"tag":"","text":"Average home (3.9 attn)"}]}},{"name":"SNDLEVEL_CONVO","docStart":3587,"docEnd":3625,"docs":{"brief":"Normal conversation (2.0 attn)","tags":[{"tag":"","text":"Normal conversation (2.0 attn)"}]}},{"name":"SNDLEVEL_DRYER","docStart":3656,"docEnd":3677,"docs":{"brief":"Clothes dryer","tags":[{"tag":"","text":"Clothes dryer"}]}},{"name":"SNDLEVEL_DISHWASHER","docStart":3708,"docEnd":3753,"docs":{"brief":"Dishwasher/washing machine (1.5 attn)","tags":[{"tag":"","text":"Dishwasher/washing machine (1.5 attn)"}]}},{"name":"SNDLEVEL_CAR","docStart":3784,"docEnd":3824,"docs":{"brief":"Car or vacuum cleaner (1.0 attn)","tags":[{"tag":"","text":"Car or vacuum cleaner (1.0 attn)"}]}},{"name":"SNDLEVEL_NORMAL","docStart":3855,"docEnd":3881,"docs":{"brief":"Normal sound level","tags":[{"tag":"","text":"Normal sound level"}]}},{"name":"SNDLEVEL_TRAFFIC","docStart":3912,"docEnd":3943,"docs":{"brief":"Busy traffic (0.8 attn)","tags":[{"tag":"","text":"Busy traffic (0.8 attn)"}]}},{"name":"SNDLEVEL_MINIBIKE","docStart":3974,"docEnd":4015,"docs":{"brief":"Mini-bike, alarm clock (0.7 attn)","tags":[{"tag":"","text":"Mini-bike, alarm clock (0.7 attn)"}]}},{"name":"SNDLEVEL_SCREAMING","docStart":4046,"docEnd":4080,"docs":{"brief":"Screaming child (0.5 attn)","tags":[{"tag":"","text":"Screaming child (0.5 attn)"}]}},{"name":"SNDLEVEL_TRAIN","docStart":4111,"docEnd":4159,"docs":{"brief":"Subway train, pneumatic drill (0.4 attn)","tags":[{"tag":"","text":"Subway train, pneumatic drill (0.4 attn)"}]}},{"name":"SNDLEVEL_HELICOPTER","docStart":4190,"docEnd":4208,"docs":{"brief":"Helicopter","tags":[{"tag":"","text":"Helicopter"}]}},{"name":"SNDLEVEL_SNOWMOBILE","docStart":4239,"docEnd":4258,"docs":{"brief":"Snow mobile","tags":[{"tag":"","text":"Snow mobile"}]}},{"name":"SNDLEVEL_AIRCRAFT","docStart":4289,"docEnd":4316,"docs":{"brief":"Auto horn, aircraft","tags":[{"tag":"","text":"Auto horn, aircraft"}]}},{"name":"SNDLEVEL_RAIDSIREN","docStart":4347,"docEnd":4369,"docs":{"brief":"Air raid siren","tags":[{"tag":"","text":"Air raid siren"}]}},{"name":"SNDLEVEL_GUNFIRE","docStart":4400,"docEnd":4439,"docs":{"brief":"Gunshot, jet engine (0.27 attn)","tags":[{"tag":"","text":"Gunshot, jet engine (0.27 attn)"}]}},{"name":"SNDLEVEL_ROCKET","docStart":4470,"docEnd":4505,"docs":{"brief":"Rocket launching (0.2 attn)","tags":[{"tag":"","text":"Rocket launching (0.2 attn)"}]}}],"enums":[],"typesets":[{"name":"NormalSHook","docStart":0,"docEnd":0,"docs":null,"types":[{"type":"function Action(int clients[], int& numClients, char sample[], int& entity, int& channel, float& volume, int& level, int& pitch, int& flags, char soundEntry[], int& seed)","docStart":12865,"docEnd":13872,"docs":{"brief":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.","tags":[{"tag":"","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior."},{"tag":"param:clients","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes."},{"tag":"param:numClients","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array)."},{"tag":"param:sample","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder."},{"tag":"param:entity","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder.Entity emitting the sound."},{"tag":"param:channel","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder.Entity emitting the sound.Channel emitting the sound."},{"tag":"param:volume","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder.Entity emitting the sound.Channel emitting the sound.Sound volume."},{"tag":"param:level","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder.Entity emitting the sound.Channel emitting the sound.Sound volume.Sound level."},{"tag":"param:pitch","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder.Entity emitting the sound.Channel emitting the sound.Sound volume.Sound level.Sound pitch."},{"tag":"param:flags","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder.Entity emitting the sound.Channel emitting the sound.Sound volume.Sound level.Sound pitch.Sound flags."},{"tag":"param:soundEntry","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder.Entity emitting the sound.Channel emitting the sound.Sound volume.Sound level.Sound pitch.Sound flags.Game sound entry name. (Used in engines newer than Portal 2)"},{"tag":"param:seed","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder.Entity emitting the sound.Channel emitting the sound.Sound volume.Sound level.Sound pitch.Sound flags.Game sound entry name. (Used in engines newer than Portal 2)Sound seed. (Used in engines newer than Portal 2)"},{"tag":"return","text":"Called when a sound is going to be emitted to one or more clients.NOTICE: all params can be overwritten to modify the default behavior.\nArray of client indexes.Number of clients in the array (modify this value if you add/remove elements from the client array).Sound file name relative to the \"sound\" folder.Entity emitting the sound.Channel emitting the sound.Sound volume.Sound level.Sound pitch.Sound flags.Game sound entry name. (Used in engines newer than Portal 2)Sound seed. (Used in engines newer than Portal 2)Plugin_Continue to allow the sound to be played, Plugin_Stop to block it,Plugin_Changed when any parameter has been modified"}]}},{"type":"function Action(int clients[64], int& numClients, char sample[], int& entity, int& channel, float& volume, int& level, int& pitch, int& flags, char soundEntry[], int& seed)","docStart":14104,"docEnd":14139,"docs":{"brief":"Deprecated. Use other prototype","tags":[{"tag":"","text":"Deprecated. Use other prototype"}]}},{"type":"function Action(int clients[64], int& numClients, char sample[], int& entity, int& channel, float& volume, int& level, int& pitch, int& flags)","docStart":14363,"docEnd":14398,"docs":{"brief":"Deprecated. Use other prototype","tags":[{"tag":"","text":"Deprecated. Use other prototype"}]}}]}],"typedefs":[{"name":"AmbientSHook","docStart":11886,"docEnd":12643,"docs":{"brief":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.","tags":[{"tag":"","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior."},{"tag":"param:sample","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.\nSound file name relative to the \"sound\" folder."},{"tag":"param:entity","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.\nSound file name relative to the \"sound\" folder.Entity index associated to the sound."},{"tag":"param:volume","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.\nSound file name relative to the \"sound\" folder.Entity index associated to the sound.Volume (from 0.0 to 1.0)."},{"tag":"param:level","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.\nSound file name relative to the \"sound\" folder.Entity index associated to the sound.Volume (from 0.0 to 1.0).Sound level (from 0 to 255)."},{"tag":"param:pitch","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.\nSound file name relative to the \"sound\" folder.Entity index associated to the sound.Volume (from 0.0 to 1.0).Sound level (from 0 to 255).Pitch (from 0 to 255)."},{"tag":"param:pos","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.\nSound file name relative to the \"sound\" folder.Entity index associated to the sound.Volume (from 0.0 to 1.0).Sound level (from 0 to 255).Pitch (from 0 to 255).Origin of sound."},{"tag":"param:flags","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.\nSound file name relative to the \"sound\" folder.Entity index associated to the sound.Volume (from 0.0 to 1.0).Sound level (from 0 to 255).Pitch (from 0 to 255).Origin of sound.Sound flags."},{"tag":"param:delay","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.\nSound file name relative to the \"sound\" folder.Entity index associated to the sound.Volume (from 0.0 to 1.0).Sound level (from 0 to 255).Pitch (from 0 to 255).Origin of sound.Sound flags.Play delay."},{"tag":"return","text":"Called when an ambient sound is about to be emitted to one or more clients.\nNOTICE: all parameters can be overwritten to modify the default behavior.\nSound file name relative to the \"sound\" folder.Entity index associated to the sound.Volume (from 0.0 to 1.0).Sound level (from 0 to 255).Pitch (from 0 to 255).Origin of sound.Sound flags.Play delay.Plugin_Continue to allow the sound to be played, Plugin_Stop to block it,Plugin_Changed when any parameter has been modified."}]},"type":"function Action(char sample[], int& entity, float& volume, int& level, int& pitch, float pos[3], int& flags, float& delay)"}]}