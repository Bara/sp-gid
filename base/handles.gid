{"functions":[{"name":"CloseHandle","docStart":1770,"docEnd":2160,"docs":{"brief":"Closes a Handle.  If the handle has multiple copies open,\nit is not destroyed unless all copies are closed.","tags":[{"tag":"","text":"Closes a Handle.  If the handle has multiple copies open,\nit is not destroyed unless all copies are closed."},{"tag":"note","text":"Closing a Handle has a different meaning for each Handle type.  Make\nsure you read the documentation on whatever provided the Handle."},{"tag":"param:hndl","text":"Handle to close."},{"tag":"error","text":"Invalid handles will cause a run time error."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null}]},{"name":"CloneHandle","docStart":2203,"docEnd":3280,"docs":{"brief":"Clones a Handle.  When passing handles in between plugins, caching handles\ncan result in accidental invalidation when one plugin releases the Handle, or is its owner\nis unloaded from memory.  To prevent this, the Handle may be \"cloned\" with a new owner.","tags":[{"tag":"","text":"Clones a Handle.  When passing handles in between plugins, caching handles\ncan result in accidental invalidation when one plugin releases the Handle, or is its owner\nis unloaded from memory.  To prevent this, the Handle may be \"cloned\" with a new owner."},{"tag":"note","text":"Usually, you will be cloning Handles for other plugins.  This means that if you clone\nthe Handle without specifying the new owner, it will assume the identity of your original\ncalling plugin, which is not very useful.  You should either specify that the receiving\nplugin should clone the handle on its own, or you should explicitly clone the Handle\nusing the receiving plugin's identity Handle."},{"tag":"param:hndl","text":"Handle to clone/duplicate."},{"tag":"param:plugin","text":"Optional Handle to another plugin to mark as the new owner.\nIf no owner is passed, the owner becomes the calling plugin."},{"tag":"return","text":"Handle on success, INVALID_HANDLE if not cloneable."},{"tag":"error","text":"Invalid handles will cause a run time error."}]},"kind":"native","returnType":"Handle","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"Handle","name":"plugin","decl":"Handle plugin","default":"INVALID_HANDLE"}]},{"name":"IsValidHandle","docStart":0,"docEnd":0,"docs":null,"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null}]}],"methodmaps":[],"enumstructs":[],"constants":[],"enums":[{"name":"Handle","docStart":1639,"docEnd":1673,"docs":{"brief":"Preset Handle values.","tags":[{"tag":"","text":"Preset Handle values."}]},"entries":[{"name":"INVALID_HANDLE","docStart":0,"docEnd":0,"docs":null,"value":"0"}]}],"typesets":[],"typedefs":[]}