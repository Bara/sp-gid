{"functions":[{"name":"NominateMap","docStart":2284,"docEnd":2720,"docs":{"brief":"Attempt to add a map to the mapchooser map list.","tags":[{"tag":"","text":"Attempt to add a map to the mapchooser map list."},{"tag":"param:map","text":"Map to add."},{"tag":"param:force","text":"Should we force the map in even if it requires overwriting an existing nomination?"},{"tag":"param:owner","text":"Client index of the nominator. If the client disconnects the nomination will be removed.\nUse 0 for constant nominations"},{"tag":"return","text":"Nominate Result of the outcome"}]},"kind":"native","returnType":"NominateResult","arguments":[{"type":"const char[]","name":"map","decl":"const char[] map","default":null},{"type":"bool","name":"force","decl":"bool force","default":null},{"type":"int","name":"owner","decl":"int owner","default":null}]},{"name":"RemoveNominationByMap","docStart":2801,"docEnd":3024,"docs":{"brief":"Attempt to remove a map from the mapchooser map list.","tags":[{"tag":"","text":"Attempt to remove a map from the mapchooser map list."},{"tag":"param:map","text":"Map to remove."},{"tag":"return","text":"True if the nomination was found and removed, or false if the nomination was not found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"map","decl":"const char[] map","default":null}]},{"name":"RemoveNominationByOwner","docStart":3082,"docEnd":3321,"docs":{"brief":"Attempt to remove a map from the mapchooser map list.","tags":[{"tag":"","text":"Attempt to remove a map from the mapchooser map list."},{"tag":"param:owner","text":"Client index of the nominator."},{"tag":"return","text":"True if the nomination was found and removed, or false if the nomination was not found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"owner","decl":"int owner","default":null}]},{"name":"GetExcludeMapList","docStart":3374,"docEnd":3502,"docs":{"brief":"Gets the current list of excluded maps.","tags":[{"tag":"","text":"Gets the current list of excluded maps."},{"tag":"param:array","text":"An ADT array handle to add the map strings to."}]},"kind":"native","returnType":"void","arguments":[{"type":"ArrayList","name":"array","decl":"ArrayList array","default":null}]},{"name":"GetNominatedMapList","docStart":3555,"docEnd":3778,"docs":{"brief":"Gets the current list of nominated maps.","tags":[{"tag":"","text":"Gets the current list of nominated maps."},{"tag":"param:maparray","text":"An ADT array handle to add the map strings to."},{"tag":"param:ownerarray","text":"An optional ADT array handle to add the nominator client indexes to."}]},"kind":"native","returnType":"void","arguments":[{"type":"ArrayList","name":"maparray","decl":"ArrayList maparray","default":null},{"type":"ArrayList","name":"ownerarray","decl":"ArrayList ownerarray","default":"null"}]},{"name":"CanMapChooserStartVote","docStart":3865,"docEnd":4023,"docs":{"brief":"Checks if MapChooser will allow a vote","tags":[{"tag":"","text":"Checks if MapChooser will allow a vote"},{"tag":"return","text":"True if a vote can be held, or false if mapchooser is already holding a vote."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"InitiateMapChooserVote","docStart":4066,"docEnd":4437,"docs":{"brief":"Initiates a MapChooser map vote\n\nNote: If no input array is specified mapchooser will use its internal list. This includes\nany nominations and excluded maps (as per mapchoosers convars).","tags":[{"tag":"","text":"Initiates a MapChooser map vote\n\nNote: If no input array is specified mapchooser will use its internal list. This includes\nany nominations and excluded maps (as per mapchoosers convars)."},{"tag":"param:when","text":"MapChange consant of when the resulting mapchange should occur."},{"tag":"param:inputarray","text":"ADT array list of maps to add to the vote."}]},"kind":"native","returnType":"void","arguments":[{"type":"MapChange","name":"when","decl":"MapChange when","default":null},{"type":"ArrayList","name":"inputarray","decl":"ArrayList inputarray","default":"null"}]},{"name":"HasEndOfMapVoteFinished","docStart":4521,"docEnd":4651,"docs":{"brief":"Checks if MapChooser's end of map vote has completed.","tags":[{"tag":"","text":"Checks if MapChooser's end of map vote has completed."},{"tag":"return","text":"True if complete, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"EndOfMapVoteEnabled","docStart":4695,"docEnd":4825,"docs":{"brief":"Checks if MapChooser is set to run an end of map vote.","tags":[{"tag":"","text":"Checks if MapChooser is set to run an end of map vote."},{"tag":"return","text":"True if enabled, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"OnNominationRemoved","docStart":4865,"docEnd":5003,"docs":{"brief":"Called when mapchooser removes a nomination from its list.\nNominations cleared on map start will not trigger this forward","tags":[{"tag":"","text":"Called when mapchooser removes a nomination from its list.\nNominations cleared on map start will not trigger this forward"}]},"kind":"forward","returnType":"void","arguments":[{"type":"const char[]","name":"map","decl":"const char[] map","default":null},{"type":"int","name":"owner","decl":"int owner","default":null}]},{"name":"OnMapVoteStarted","docStart":5071,"docEnd":5125,"docs":{"brief":"Called when mapchooser starts a Map Vote.","tags":[{"tag":"","text":"Called when mapchooser starts a Map Vote."}]},"kind":"forward","returnType":"void","arguments":[]},{"name":"__pl_mapchooser_SetNTVOptional","docStart":0,"docEnd":0,"docs":null,"kind":"public","returnType":"void","arguments":[]}],"methodmaps":[],"constants":[],"enums":[{"name":"NominateResult","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"Nominate_Added","docStart":1694,"docEnd":1739,"docs":{"brief":"The map was added to the nominate list","tags":[{"tag":"","text":"The map was added to the nominate list"}]},"value":null},{"name":"Nominate_Replaced","docStart":1766,"docEnd":1815,"docs":{"brief":"A clients existing nomination was replaced","tags":[{"tag":"","text":"A clients existing nomination was replaced"}]},"value":null},{"name":"Nominate_AlreadyInVote","docStart":1842,"docEnd":1886,"docs":{"brief":"Specified map was already in the vote","tags":[{"tag":"","text":"Specified map was already in the vote"}]},"value":null},{"name":"Nominate_InvalidMap","docStart":1913,"docEnd":1956,"docs":{"brief":"Mapname specified wasn't a valid map","tags":[{"tag":"","text":"Mapname specified wasn't a valid map"}]},"value":null},{"name":"Nominate_VoteFull","docStart":1983,"docEnd":2036,"docs":{"brief":"This will only occur if force was set to false","tags":[{"tag":"","text":"This will only occur if force was set to false"}]},"value":null}]},{"name":"MapChange","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"MapChange_Instant","docStart":2088,"docEnd":2148,"docs":{"brief":"Change map as soon as the voting results have come in","tags":[{"tag":"","text":"Change map as soon as the voting results have come in"}]},"value":null},{"name":"MapChange_RoundEnd","docStart":2175,"docEnd":2216,"docs":{"brief":"Change map at the end of the round","tags":[{"tag":"","text":"Change map at the end of the round"}]},"value":null},{"name":"MapChange_MapEnd","docStart":2243,"docEnd":2276,"docs":{"brief":"Change the sm_nextmap cvar","tags":[{"tag":"","text":"Change the sm_nextmap cvar"}]},"value":null}]}],"typesets":[],"typedefs":[]}