{"functions":[{"name":"HookEntityOutput","docStart":2384,"docEnd":2655,"docs":{"brief":"Add an entity output hook on a entity classname","tags":[{"tag":"","text":"Add an entity output hook on a entity classname"},{"tag":"param:classname","text":"Add an entity output hook on a entity classname\nThe classname to hook."},{"tag":"param:output","text":"Add an entity output hook on a entity classname\nThe classname to hook.The output name to hook."},{"tag":"param:callback","text":"Add an entity output hook on a entity classname\nThe classname to hook.The output name to hook.An EntityOutput function pointer."},{"tag":"error","text":"Add an entity output hook on a entity classname\nThe classname to hook.The output name to hook.An EntityOutput function pointer.Entity Outputs disabled."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"classname","decl":"const char[] classname"},{"type":"const char[]","name":"output","decl":"const char[] output"},{"type":"EntityOutput","name":"callback","decl":"EntityOutput callback"}]},{"name":"UnhookEntityOutput","docStart":2758,"docEnd":3083,"docs":{"brief":"Remove an entity output hook.","tags":[{"tag":"","text":"Remove an entity output hook."},{"tag":"param:classname","text":"Remove an entity output hook.The classname to hook."},{"tag":"param:output","text":"Remove an entity output hook.The classname to hook.The output name to hook."},{"tag":"param:callback","text":"Remove an entity output hook.The classname to hook.The output name to hook.An EntityOutput function pointer."},{"tag":"return","text":"Remove an entity output hook.The classname to hook.The output name to hook.An EntityOutput function pointer.True on success, false if no valid hook was found."},{"tag":"error","text":"Remove an entity output hook.The classname to hook.The output name to hook.An EntityOutput function pointer.True on success, false if no valid hook was found.Entity Outputs disabled."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"classname","decl":"const char[] classname"},{"type":"const char[]","name":"output","decl":"const char[] output"},{"type":"EntityOutput","name":"callback","decl":"EntityOutput callback"}]},{"name":"HookSingleEntityOutput","docStart":3188,"docEnd":3575,"docs":{"brief":"Add an entity output hook on a single entity instance","tags":[{"tag":"","text":"Add an entity output hook on a single entity instance"},{"tag":"param:entity","text":"Add an entity output hook on a single entity instance\nThe entity on which to add a hook."},{"tag":"param:output","text":"Add an entity output hook on a single entity instance\nThe entity on which to add a hook.The output name to hook."},{"tag":"param:callback","text":"Add an entity output hook on a single entity instance\nThe entity on which to add a hook.The output name to hook.An EntityOutput function pointer."},{"tag":"param:once","text":"Add an entity output hook on a single entity instance\nThe entity on which to add a hook.The output name to hook.An EntityOutput function pointer.Only fire this hook once and then remove itself."},{"tag":"error","text":"Add an entity output hook on a single entity instance\nThe entity on which to add a hook.The output name to hook.An EntityOutput function pointer.Only fire this hook once and then remove itself.Entity Outputs disabled or Invalid Entity index."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"const char[]","name":"output","decl":"const char[] output"},{"type":"EntityOutput","name":"callback","decl":"EntityOutput callback"},{"type":"bool","name":"once","decl":"bool once"}]},{"name":"UnhookSingleEntityOutput","docStart":3689,"docEnd":4065,"docs":{"brief":"Remove a single entity output hook.","tags":[{"tag":"","text":"Remove a single entity output hook."},{"tag":"param:entity","text":"Remove a single entity output hook.\nThe entity on which to remove the hook."},{"tag":"param:output","text":"Remove a single entity output hook.\nThe entity on which to remove the hook.The output name to hook."},{"tag":"param:callback","text":"Remove a single entity output hook.\nThe entity on which to remove the hook.The output name to hook.An EntityOutput function pointer."},{"tag":"return","text":"Remove a single entity output hook.\nThe entity on which to remove the hook.The output name to hook.An EntityOutput function pointer.True on success, false if no valid hook was found."},{"tag":"error","text":"Remove a single entity output hook.\nThe entity on which to remove the hook.The output name to hook.An EntityOutput function pointer.True on success, false if no valid hook was found.Entity Outputs disabled or Invalid Entity index."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"const char[]","name":"output","decl":"const char[] output"},{"type":"EntityOutput","name":"callback","decl":"EntityOutput callback"}]},{"name":"FireEntityOutput","docStart":4164,"docEnd":4638,"docs":{"brief":"Fire a named output on an entity.\nAfter completion (successful or not), the current global variant is re-initialized.","tags":[{"tag":"","text":"Fire a named output on an entity.\nAfter completion (successful or not), the current global variant is re-initialized."},{"tag":"param:caller","text":"Fire a named output on an entity.\nAfter completion (successful or not), the current global variant is re-initialized.\nEntity index from where the output is fired."},{"tag":"param:output","text":"Fire a named output on an entity.\nAfter completion (successful or not), the current global variant is re-initialized.\nEntity index from where the output is fired.Output name."},{"tag":"param:activator","text":"Fire a named output on an entity.\nAfter completion (successful or not), the current global variant is re-initialized.\nEntity index from where the output is fired.Output name.Entity index which initiated the sequence of actions (-1 for a NULL entity)."},{"tag":"param:delay","text":"Fire a named output on an entity.\nAfter completion (successful or not), the current global variant is re-initialized.\nEntity index from where the output is fired.Output name.Entity index which initiated the sequence of actions (-1 for a NULL entity).Delay before firing the output."},{"tag":"error","text":"Fire a named output on an entity.\nAfter completion (successful or not), the current global variant is re-initialized.\nEntity index from where the output is fired.Output name.Entity index which initiated the sequence of actions (-1 for a NULL entity).Delay before firing the output.Invalid entity index or no mod support."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"caller","decl":"int caller"},{"type":"const char[]","name":"output","decl":"const char[] output"},{"type":"int","name":"activator","decl":"int activator"},{"type":"float","name":"delay","decl":"float delay"}]}],"methodmaps":[],"constants":[],"enums":[],"typesets":[{"name":"EntityOutput","docStart":1661,"docEnd":2191,"docs":{"brief":"Called when an entity output is fired.","tags":[{"tag":"","text":"Called when an entity output is fired."},{"tag":"param:output","text":"Called when an entity output is fired.\nName of the output that fired."},{"tag":"param:caller","text":"Called when an entity output is fired.\nName of the output that fired.Entity index of the caller."},{"tag":"param:activator","text":"Called when an entity output is fired.\nName of the output that fired.Entity index of the caller.Entity index of the activator."},{"tag":"param:delay","text":"Called when an entity output is fired.\nName of the output that fired.Entity index of the caller.Entity index of the activator.Delay in seconds? before the event gets fired."},{"tag":"return","text":"Called when an entity output is fired.\nName of the output that fired.Entity index of the caller.Entity index of the activator.Delay in seconds? before the event gets fired.Anything other than Plugin_Continue will supress this event,returning Plugin_Continue will allow it to propagate the resultsof this output to any entity inputs."}]},"types":[{"type":"function void(const char[] output, int caller, int activator, float delay)","docStart":0,"docEnd":0,"docs":null},{"type":"function Action(const char[] output, int caller, int activator, float delay)","docStart":0,"docEnd":0,"docs":null}]}],"typedefs":[]}