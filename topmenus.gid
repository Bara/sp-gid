¶ifunctionsãødnamemCreateTopMenuhdocStart%⁄fdocEnd&éddocs¢ebriefrCreates a TopMenu.dtagsÉ¢ctag`dtextrCreates a TopMenu.¢ctagmparam:handlerdtextx?Creates a TopMenu. 
 Handler to use for drawing the root title.¢ctagfreturndtextxsCreates a TopMenu. 
 Handler to use for drawing the root title. A new TopMenu Handle, or INVALID_HANDLE on failure.dkindfnativejreturnTypegTopMenuiargumentsÅ£dtypenTopMenuHandlerdnameghandlerddeclvTopMenuHandler handlerˇødnameqLoadTopMenuConfighdocStart&…fdocEnd+Çddocs¢ebriefyøRe-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items.dtagsá¢ctag`dtextyøRe-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items.¢ctagmparam:topmenudtexty—Re-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle.¢ctagjparam:filedtexty‹Re-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle. File path.¢ctagkparam:errordtextyÍRe-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle. File path. Error buffer.¢ctagoparam:maxlengthdtexty\Re-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle. File path. Error buffer. Maximum size of the error buffer. Error buffer will be filled with a zero-terminated string if false is returned.¢ctagfreturndtextyRe-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle. File path. Error buffer. Maximum size of the error buffer. Error buffer will be filled with a zero-terminated string if false is returned. True on success, false on failure.¢ctageerrordtextyóRe-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle. File path. Error buffer. Maximum size of the error buffer. Error buffer will be filled with a zero-terminated string if false is returned. True on success, false on failure. Invalid TopMenu Handle.dkindfnativejreturnTypedbooliargumentsÑ£dtypefHandlednamegtopmenuddeclnHandle topmenu£dtypelconst char[]dnamedfileddeclqconst char[] file£dtypefchar[]dnameeerrorddecllchar[] error£dtypecintdnameimaxlengthddeclmint maxlengthˇødnamelAddToTopMenuhdocStart+ÊfdocEnd.’ddocs¢ebriefxAdds an topobj to a TopMenu.dtagsã¢ctag`dtextxAdds an topobj to a TopMenu.¢ctagmparam:topmenudtextx.Adds an topobj to a TopMenu. 
 TopMenu Handle.¢ctagjparam:namedtextxLAdds an topobj to a TopMenu. 
 TopMenu Handle. Object name (MUST be unique).¢ctagjparam:typedtextxYAdds an topobj to a TopMenu. 
 TopMenu Handle. Object name (MUST be unique). Object type.¢ctagmparam:handlerdtextxmAdds an topobj to a TopMenu. 
 TopMenu Handle. Object name (MUST be unique). Object type. Handler for topobj.¢ctaglparam:parentdtextxËAdds an topobj to a TopMenu. 
 TopMenu Handle. Object name (MUST be unique). Object type. Handler for topobj. Parent topobj ID, or INVALID_TOPMENUOBJECT for none. Items must have a category parent. Categories must not have a parent.¢ctagmparam:cmdnamedtextyAdds an topobj to a TopMenu. 
 TopMenu Handle. Object name (MUST be unique). Object type. Handler for topobj. Parent topobj ID, or INVALID_TOPMENUOBJECT for none. Items must have a category parent. Categories must not have a parent. Command name (for access overrides).¢ctagkparam:flagsdtexty#Adds an topobj to a TopMenu. 
 TopMenu Handle. Object name (MUST be unique). Object type. Handler for topobj. Parent topobj ID, or INVALID_TOPMENUOBJECT for none. Items must have a category parent. Categories must not have a parent. Command name (for access overrides). Default access flags.¢ctagqparam:info_stringdtextyFAdds an topobj to a TopMenu. 
 TopMenu Handle. Object name (MUST be unique). Object type. Handler for topobj. Parent topobj ID, or INVALID_TOPMENUOBJECT for none. Items must have a category parent. Categories must not have a parent. Command name (for access overrides). Default access flags. Arbitrary storage (max 255 bytes).¢ctagfreturndtextyÉAdds an topobj to a TopMenu. 
 TopMenu Handle. Object name (MUST be unique). Object type. Handler for topobj. Parent topobj ID, or INVALID_TOPMENUOBJECT for none. Items must have a category parent. Categories must not have a parent. Command name (for access overrides). Default access flags. Arbitrary storage (max 255 bytes). A new TopMenuObject ID, or INVALID_TOPMENUOBJECT on failure.¢ctageerrordtextyõAdds an topobj to a TopMenu. 
 TopMenu Handle. Object name (MUST be unique). Object type. Handler for topobj. Parent topobj ID, or INVALID_TOPMENUOBJECT for none. Items must have a category parent. Categories must not have a parent. Command name (for access overrides). Default access flags. Arbitrary storage (max 255 bytes). A new TopMenuObject ID, or INVALID_TOPMENUOBJECT on failure. Invalid TopMenu Handle.dkindfnativejreturnTypemTopMenuObjectiargumentsà£dtypefHandlednamegtopmenuddeclnHandle topmenu£dtypelconst char[]dnamednameddeclqconst char[] name£dtypeqTopMenuObjectTypednamedtypeddeclvTopMenuObjectType type£dtypenTopMenuHandlerdnameghandlerddeclvTopMenuHandler handler£dtypemTopMenuObjectdnamefparentddecltTopMenuObject parent£dtypelconst char[]dnamegcmdnameddecltconst char[] cmdname£dtypecintdnameeflagsddecliint flags£dtypelconst char[]dnamekinfo_stringddeclxconst char[] info_stringˇødnametGetTopMenuInfoStringhdocStart/ˆfdocEnd1ßddocs¢ebriefx-Retrieves the info string of a top menu item.dtagsá¢ctag`dtextx-Retrieves the info string of a top menu item.¢ctagmparam:topmenudtextx?Retrieves the info string of a top menu item. 
 TopMenu Handle.¢ctaglparam:parentdtextxQRetrieves the info string of a top menu item. 
 TopMenu Handle. TopMenuObject ID.¢ctaglparam:bufferdtextxnRetrieves the info string of a top menu item. 
 TopMenu Handle. TopMenuObject ID. Buffer to store info string.¢ctagoparam:maxlengthdtextxãRetrieves the info string of a top menu item. 
 TopMenu Handle. TopMenuObject ID. Buffer to store info string. Maximum size of info string.¢ctagfreturndtextx«Retrieves the info string of a top menu item. 
 TopMenu Handle. TopMenuObject ID. Buffer to store info string. Maximum size of info string. Number of bytes written, not including the null terminator.¢ctageerrordtextxÛRetrieves the info string of a top menu item. 
 TopMenu Handle. TopMenuObject ID. Buffer to store info string. Maximum size of info string. Number of bytes written, not including the null terminator. Invalid TopMenu Handle or TopMenuObject ID.dkindfnativejreturnTypecintiargumentsÑ£dtypefHandlednamegtopmenuddeclnHandle topmenu£dtypemTopMenuObjectdnamefparentddecltTopMenuObject parent£dtypefchar[]dnamefbufferddeclmchar[] buffer£dtypecintdnameimaxlengthddeclmint maxlengthˇødnameqGetTopMenuObjNamehdocStart2fdocEnd3¬ddocs¢ebriefx-Retrieves the name string of a top menu item.dtagsá¢ctag`dtextx-Retrieves the name string of a top menu item.¢ctagmparam:topmenudtextx?Retrieves the name string of a top menu item. 
 TopMenu Handle.¢ctaglparam:topobjdtextxQRetrieves the name string of a top menu item. 
 TopMenu Handle. TopMenuObject ID.¢ctaglparam:bufferdtextxnRetrieves the name string of a top menu item. 
 TopMenu Handle. TopMenuObject ID. Buffer to store info string.¢ctagoparam:maxlengthdtextxãRetrieves the name string of a top menu item. 
 TopMenu Handle. TopMenuObject ID. Buffer to store info string. Maximum size of info string.¢ctagfreturndtextx«Retrieves the name string of a top menu item. 
 TopMenu Handle. TopMenuObject ID. Buffer to store info string. Maximum size of info string. Number of bytes written, not including the null terminator.¢ctageerrordtextxÛRetrieves the name string of a top menu item. 
 TopMenu Handle. TopMenuObject ID. Buffer to store info string. Maximum size of info string. Number of bytes written, not including the null terminator. Invalid TopMenu Handle or TopMenuObject ID.dkindfnativejreturnTypecintiargumentsÑ£dtypefHandlednamegtopmenuddeclnHandle topmenu£dtypemTopMenuObjectdnameftopobjddecltTopMenuObject topobj£dtypefchar[]dnamefbufferddeclmchar[] buffer£dtypecintdnameimaxlengthddeclmint maxlengthˇødnameqRemoveFromTopMenuhdocStart4)fdocEnd5Äddocs¢ebriefx∑Removes an topobj from a TopMenu. 
 Plugins' topobjs are automatically removed all TopMenus when the given plugin unloads or pauses.  In the case of unpausing, all items are restored.dtagsÑ¢ctag`dtextx∑Removes an topobj from a TopMenu. 
 Plugins' topobjs are automatically removed all TopMenus when the given plugin unloads or pauses.  In the case of unpausing, all items are restored.¢ctagmparam:topmenudtextx…Removes an topobj from a TopMenu. 
 Plugins' topobjs are automatically removed all TopMenus when the given plugin unloads or pauses.  In the case of unpausing, all items are restored. 
 TopMenu Handle.¢ctaglparam:topobjdtextx€Removes an topobj from a TopMenu. 
 Plugins' topobjs are automatically removed all TopMenus when the given plugin unloads or pauses.  In the case of unpausing, all items are restored. 
 TopMenu Handle. TopMenuObject ID.¢ctageerrordtextxÛRemoves an topobj from a TopMenu. 
 Plugins' topobjs are automatically removed all TopMenus when the given plugin unloads or pauses.  In the case of unpausing, all items are restored. 
 TopMenu Handle. TopMenuObject ID. Invalid TopMenu Handle.dkindfnativejreturnTypedvoidiargumentsÇ£dtypefHandlednamegtopmenuddeclnHandle topmenu£dtypemTopMenuObjectdnameftopobjddecltTopMenuObject topobjˇødnamenDisplayTopMenuhdocStart5 fdocEnd7 ddocs¢ebriefxDisplays a TopMenu to a client.dtagsÜ¢ctag`dtextxDisplays a TopMenu to a client.¢ctagmparam:topmenudtextx1Displays a TopMenu to a client. 
 TopMenu Handle.¢ctaglparam:clientdtextx?Displays a TopMenu to a client. 
 TopMenu Handle. Client index.¢ctagnparam:positiondtextxYDisplays a TopMenu to a client. 
 TopMenu Handle. Client index. Position to display from.¢ctagfreturndtextx|Displays a TopMenu to a client. 
 TopMenu Handle. Client index. Position to display from. True on success, false on failure.¢ctageerrordtextx™Displays a TopMenu to a client. 
 TopMenu Handle. Client index. Position to display from. True on success, false on failure. Invalid TopMenu Handle or client not in game.dkindfnativejreturnTypedbooliargumentsÉ£dtypefHandlednamegtopmenuddeclnHandle topmenu£dtypecintdnamefclientddecljint client£dtypeoTopMenuPositiondnamehpositionddeclxTopMenuPosition positionˇødnamevDisplayTopMenuCategoryhdocStart7WfdocEnd8êddocs¢ebriefx(Displays a TopMenu category to a client.dtagsÜ¢ctag`dtextx(Displays a TopMenu category to a client.¢ctagmparam:topmenudtextx:Displays a TopMenu category to a client. 
 TopMenu Handle.¢ctagnparam:categorydtextxNDisplays a TopMenu category to a client. 
 TopMenu Handle. Category topobj id.¢ctaglparam:clientdtextx\Displays a TopMenu category to a client. 
 TopMenu Handle. Category topobj id. Client index.¢ctagfreturndtextxDisplays a TopMenu category to a client. 
 TopMenu Handle. Category topobj id. Client index. True on success, false on failure.¢ctageerrordtextx≠Displays a TopMenu category to a client. 
 TopMenu Handle. Category topobj id. Client index. True on success, false on failure. Invalid TopMenu Handle or client not in game.dkindfnativejreturnTypedbooliargumentsÉ£dtypefHandlednamegtopmenuddeclnHandle topmenu£dtypemTopMenuObjectdnamehcategoryddeclvTopMenuObject category£dtypecintdnamefclientddecljint clientˇødnamesFindTopMenuCategoryhdocStart8ÌfdocEnd:%ddocs¢ebriefx*Finds a category's topobj ID in a TopMenu.dtagsÖ¢ctag`dtextx*Finds a category's topobj ID in a TopMenu.¢ctagmparam:topmenudtextx<Finds a category's topobj ID in a TopMenu. 
 TopMenu Handle.¢ctagjparam:namedtextxRFinds a category's topobj ID in a TopMenu. 
 TopMenu Handle. Object's unique name.¢ctagfreturndtextxîFinds a category's topobj ID in a TopMenu. 
 TopMenu Handle. Object's unique name. TopMenuObject ID on success, or INVALID_TOPMENUOBJECT on failure.¢ctageerrordtextx¨Finds a category's topobj ID in a TopMenu. 
 TopMenu Handle. Object's unique name. TopMenuObject ID on success, or INVALID_TOPMENUOBJECT on failure. Invalid TopMenu Handle.dkindfnativejreturnTypemTopMenuObjectiargumentsÇ£dtypefHandlednamegtopmenuddeclnHandle topmenu£dtypelconst char[]dnamednameddeclqconst char[] nameˇødnamevSetTopMenuTitleCachinghdocStart:wfdocEnd<dddocs¢ebriefx€Change the menu title caching behavior of the TopMenu. By default the titles are cached to reduce overhead. If you need dynamic menu titles, which can change everytime the menu is displayed to a user, set this to false.dtagsÑ¢ctag`dtextx€Change the menu title caching behavior of the TopMenu. By default the titles are cached to reduce overhead. If you need dynamic menu titles, which can change everytime the menu is displayed to a user, set this to false.¢ctagmparam:topmenudtextxÌChange the menu title caching behavior of the TopMenu. By default the titles are cached to reduce overhead. If you need dynamic menu titles, which can change everytime the menu is displayed to a user, set this to false. 
 TopMenu Handle.¢ctagrparam:cache_titlesdtexty[Change the menu title caching behavior of the TopMenu. By default the titles are cached to reduce overhead. If you need dynamic menu titles, which can change everytime the menu is displayed to a user, set this to false. 
 TopMenu Handle. Cache the menu titles and don't call the handler with TopMenuAction_DisplayTitle everytime the menu is drawn?¢ctageerrordtextyrChange the menu title caching behavior of the TopMenu. By default the titles are cached to reduce overhead. If you need dynamic menu titles, which can change everytime the menu is displayed to a user, set this to false. 
 TopMenu Handle. Cache the menu titles and don't call the handler with TopMenuAction_DisplayTitle everytime the menu is drawn? Invalid TopMenu HandledkindfnativejreturnTypedvoidiargumentsÇ£dtypefHandlednamegtopmenuddeclnHandle topmenu£dtypedbooldnamelcache_titlesddeclqbool cache_titlesˇødnamex__ext_topmenus_SetNTVOptionalhdocStart fdocEnd ddocsˆdkindestockjreturnTypedvoidiargumentsÄˇjmethodmapsÅødnamegTopMenuhdocStartœfdocEndpddocs¢ebriefxôTopMenu objects are used for constructing multi-layer menus. Currently, they support at most two levels. The first level of items are called "categories"dtagsÅ¢ctag`dtextxôTopMenu objects are used for constructing multi-layer menus. Currently, they support at most two levels. The first level of items are called "categories"gmethodsãødnamegTopMenuhdocStartífdocEndddocs¢ebriefvCreates a new TopMenu.dtagsÉ¢ctag`dtextvCreates a new TopMenu.¢ctagmparam:handlerdtextxCCreates a new TopMenu. 
 Handler to use for drawing the root title.¢ctagfreturndtextxQCreates a new TopMenu. 
 Handler to use for drawing the root title. A new TopMenudkindˆjreturnTypegTopMenuiargumentsÅ£dtypenTopMenuHandlerdnameghandlerddeclvTopMenuHandler handlerˇødnamejFromHandlehdocStartTfdocEndÛddocs¢ebriefxëReturns a TopMenu handle from a generic handle. If the given handle is a TopMenu, the handle is simply casted back. Otherwise, an error is raiseddtagsÅ¢ctag`dtextxëReturns a TopMenu handle from a generic handle. If the given handle is a TopMenu, the handle is simply casted back. Otherwise, an error is raiseddkindˆjreturnTypegTopMenuiargumentsÅ£dtypefHandlednamefhandleddeclmHandle handleˇødnamejLoadConfighdocStart2fdocEndßddocs¢ebriefyøRe-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items.dtagsÜ¢ctag`dtextyøRe-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items.¢ctagmparam:topmenudtexty—Re-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle.¢ctagjparam:filedtexty‹Re-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle. File path.¢ctagkparam:errordtextyÍRe-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle. File path. Error buffer.¢ctagoparam:maxlengthdtexty\Re-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle. File path. Error buffer. Maximum size of the error buffer. Error buffer will be filled with a zero-terminated string if false is returned.¢ctagfreturndtexty~Re-sorts the items in a TopMenu via a configuration file. 
 The format of the configuration file should be a Valve Key-Values formatted file that SourceMod can parse.  There should be one root section, and one sub-section for each category.  Each sub-section's name should match the category name. 
 Each sub-section may only contain key/value pairs in the form of: key: "item" value: Name of the item as passed to AddToTopMenu(). 
 The TopMenu will draw items in the order declared in the configuration file.  If items do not appear in the configuration file, they are sorted per-player based on how the handler function renders for that player. These items appear after the configuration sorted items. 
 TopMenu Handle. File path. Error buffer. Maximum size of the error buffer. Error buffer will be filled with a zero-terminated string if false is returned. True on success, false on failuredkindˆjreturnTypedbooliargumentsÉ£dtypelconst char[]dnamedfileddeclqconst char[] file£dtypefchar[]dnameeerrorddecllchar[] error£dtypecintdnameimaxlengthddeclmint maxlengthˇødnamekAddCategoryhdocStart˝fdocEndÜddocs¢ebriefxAdds a category to a TopMenu.dtagsá¢ctag`dtextxAdds a category to a TopMenu.¢ctagjparam:namedtextx=Adds a category to a TopMenu. 
 Object name (MUST be unique).¢ctagmparam:handlerdtextxQAdds a category to a TopMenu. 
 Object name (MUST be unique). Handler for topobj.¢ctagmparam:cmdnamedtextxvAdds a category to a TopMenu. 
 Object name (MUST be unique). Handler for topobj. Command name (for access overrides).¢ctagkparam:flagsdtextxåAdds a category to a TopMenu. 
 Object name (MUST be unique). Handler for topobj. Command name (for access overrides). Default access flags.¢ctagqparam:info_stringdtextxØAdds a category to a TopMenu. 
 Object name (MUST be unique). Handler for topobj. Command name (for access overrides). Default access flags. Arbitrary storage (max 255 bytes).¢ctagfreturndtextxÎAdds a category to a TopMenu. 
 Object name (MUST be unique). Handler for topobj. Command name (for access overrides). Default access flags. Arbitrary storage (max 255 bytes). A new TopMenuObject ID, or INVALID_TOPMENUOBJECT on failuredkindˆjreturnTypemTopMenuObjectiargumentsÖ£dtypelconst char[]dnamednameddeclqconst char[] name£dtypenTopMenuHandlerdnameghandlerddeclvTopMenuHandler handler£dtypelconst char[]dnamegcmdnameddecltconst char[] cmdname£dtypecintdnameeflagsddecliint flags£dtypelconst char[]dnamekinfo_stringddeclxconst char[] info_stringˇødnamegAddItemhdocStart~fdocEndVddocs¢ebriefx#Adds an item to a TopMenu category.dtagsà¢ctag`dtextx#Adds an item to a TopMenu category.¢ctagjparam:namedtextxCAdds an item to a TopMenu category. 
 Object name (MUST be unique).¢ctagmparam:handlerdtextxWAdds an item to a TopMenu category. 
 Object name (MUST be unique). Handler for topobj.¢ctagnparam:categorydtextxáAdds an item to a TopMenu category. 
 Object name (MUST be unique). Handler for topobj. The object of the parent category for the item.¢ctagmparam:cmdnamedtextx¨Adds an item to a TopMenu category. 
 Object name (MUST be unique). Handler for topobj. The object of the parent category for the item. Command name (for access overrides).¢ctagkparam:flagsdtextx¬Adds an item to a TopMenu category. 
 Object name (MUST be unique). Handler for topobj. The object of the parent category for the item. Command name (for access overrides). Default access flags.¢ctagqparam:info_stringdtextxÂAdds an item to a TopMenu category. 
 Object name (MUST be unique). Handler for topobj. The object of the parent category for the item. Command name (for access overrides). Default access flags. Arbitrary storage (max 255 bytes).¢ctagfreturndtexty!Adds an item to a TopMenu category. 
 Object name (MUST be unique). Handler for topobj. The object of the parent category for the item. Command name (for access overrides). Default access flags. Arbitrary storage (max 255 bytes). A new TopMenuObject ID, or INVALID_TOPMENUOBJECT on failuredkindˆjreturnTypemTopMenuObjectiargumentsÜ£dtypelconst char[]dnamednameddeclqconst char[] name£dtypenTopMenuHandlerdnameghandlerddeclvTopMenuHandler handler£dtypemTopMenuObjectdnamefparentddecltTopMenuObject parent£dtypelconst char[]dnamegcmdnameddecltconst char[] cmdname£dtypecintdnameeflagsddecliint flags£dtypelconst char[]dnamekinfo_stringddeclxconst char[] info_stringˇødnamemGetInfoStringhdocStartXfdocEnd{ddocs¢ebriefx-Retrieves the info string of a top menu item.dtagsÖ¢ctag`dtextx-Retrieves the info string of a top menu item.¢ctaglparam:parentdtextxARetrieves the info string of a top menu item. 
 TopMenuObject ID.¢ctaglparam:bufferdtextx^Retrieves the info string of a top menu item. 
 TopMenuObject ID. Buffer to store info string.¢ctagoparam:maxlengthdtextx{Retrieves the info string of a top menu item. 
 TopMenuObject ID. Buffer to store info string. Maximum size of info string.¢ctagfreturndtextx∑Retrieves the info string of a top menu item. 
 TopMenuObject ID. Buffer to store info string. Maximum size of info string. Number of bytes written, not including the  null terminatordkindˆjreturnTypecintiargumentsÉ£dtypemTopMenuObjectdnamefparentddecltTopMenuObject parent£dtypefchar[]dnamefbufferddeclmchar[] buffer£dtypecintdnameimaxlengthddeclmint maxlengthˇødnamejGetObjNamehdocStart◊fdocEnd˘ddocs¢ebriefx-Retrieves the name string of a top menu item.dtagsÖ¢ctag`dtextx-Retrieves the name string of a top menu item.¢ctaglparam:topobjdtextxARetrieves the name string of a top menu item. 
 TopMenuObject ID.¢ctaglparam:bufferdtextx^Retrieves the name string of a top menu item. 
 TopMenuObject ID. Buffer to store info string.¢ctagoparam:maxlengthdtextx{Retrieves the name string of a top menu item. 
 TopMenuObject ID. Buffer to store info string. Maximum size of info string.¢ctagfreturndtextx∂Retrieves the name string of a top menu item. 
 TopMenuObject ID. Buffer to store info string. Maximum size of info string. Number of bytes written, not including the null terminatordkindˆjreturnTypecintiargumentsÉ£dtypemTopMenuObjectdnameftopobjddecltTopMenuObject topobj£dtypefchar[]dnamefbufferddeclmchar[] buffer£dtypecintdnameimaxlengthddeclmint maxlengthˇødnamefRemovehdocStart RfdocEnd!Iddocs¢ebriefx∑Removes an topobj from a TopMenu. 
 Plugins' topobjs are automatically removed all TopMenus when the given plugin unloads or pauses.  In the case of unpausing, all items are restored.dtagsÇ¢ctag`dtextx∑Removes an topobj from a TopMenu. 
 Plugins' topobjs are automatically removed all TopMenus when the given plugin unloads or pauses.  In the case of unpausing, all items are restored.¢ctaglparam:topobjdtextx Removes an topobj from a TopMenu. 
 Plugins' topobjs are automatically removed all TopMenus when the given plugin unloads or pauses.  In the case of unpausing, all items are restored. 
 TopMenuObject IDdkindˆjreturnTypedvoidiargumentsÅ£dtypemTopMenuObjectdnameftopobjddecltTopMenuObject topobjˇødnamegDisplayhdocStart!ÅfdocEnd"?ddocs¢ebriefxDisplays a TopMenu to a client.dtagsÑ¢ctag`dtextxDisplays a TopMenu to a client.¢ctaglparam:clientdtextx/Displays a TopMenu to a client. 
 Client index.¢ctagnparam:positiondtextxIDisplays a TopMenu to a client. 
 Client index. Position to display from.¢ctagfreturndtextxkDisplays a TopMenu to a client. 
 Client index. Position to display from. True on success, false on failuredkindˆjreturnTypedbooliargumentsÇ£dtypecintdnamefclientddecljint client£dtypeoTopMenuPositiondnamehpositionddeclxTopMenuPosition positionˇødnameoDisplayCategoryhdocStart"àfdocEnd#Iddocs¢ebriefx(Displays a TopMenu category to a client.dtagsÑ¢ctag`dtextx(Displays a TopMenu category to a client.¢ctagnparam:categorydtextx>Displays a TopMenu category to a client. 
 Category topobj id.¢ctaglparam:clientdtextxLDisplays a TopMenu category to a client. 
 Category topobj id. Client index.¢ctagfreturndtextxnDisplays a TopMenu category to a client. 
 Category topobj id. Client index. True on success, false on failuredkindˆjreturnTypedbooliargumentsÇ£dtypemTopMenuObjectdnamehcategoryddeclvTopMenuObject category£dtypecintdnamefclientddecljint clientˇødnamelFindCategoryhdocStart#òfdocEnd$nddocs¢ebriefx*Finds a category's topobj ID in a TopMenu.dtagsÉ¢ctag`dtextx*Finds a category's topobj ID in a TopMenu.¢ctagjparam:namedtextxBFinds a category's topobj ID in a TopMenu. 
 Object's unique name.¢ctagfreturndtextxÉFinds a category's topobj ID in a TopMenu. 
 Object's unique name. TopMenuObject ID on success, or INVALID_TOPMENUOBJECT on failuredkindˆjreturnTypemTopMenuObjectiargumentsÅ£dtypelconst char[]dnamednameddeclqconst char[] nameˇjpropertiesÅødnamekCacheTitleshdocStart$≤fdocEnd%éddocs¢ebriefxŒSet the menu title caching behavior of the TopMenu. By default titles are cached to reduce overhead. If you need dynamic menu titles which change each time the menu is displayed to a user, set this to falsedtagsÅ¢ctag`dtextxŒSet the menu title caching behavior of the TopMenu. By default titles are cached to reduce overhead. If you need dynamic menu titles which change each time the menu is displayed to a user, set this to falsedtypedboolfgetterÙfsetterıˇˇiconstantsÄeenumsÑødnamemTopMenuActionhdocStartåfdocEnd√ddocs¢ebriefx*Actions a top menu will take on an topobj.dtagsÅ¢ctag`dtextx*Actions a top menu will take on an topobj.gentriesÖødnamexTopMenuAction_DisplayOptionhdocStart›fdocEndùddocsˆˇødnamexTopMenuAction_DisplayTitlehdocStart≈fdocEnd	ddocsˆˇødnamexTopMenuAction_SelectOptionhdocStart	)fdocEnd	‘ddocsˆˇødnamexTopMenuAction_DrawOptionhdocStart	˚fdocEnd<ddocsˆˇødnamexTopMenuAction_RemoveObjecthdocStartbfdocEndddocsˆˇˇødnameqTopMenuObjectTypehdocStart?fdocEndbddocs¢ebriefvTop menu topobj types.dtagsÅ¢ctag`dtextvTop menu topobj types.gentriesÇødnamevTopMenuObject_CategoryhdocStart§fdocEnd”ddocsˆˇødnamerTopMenuObject_ItemhdocStart˙fdocEndddocsˆˇˇødnameoTopMenuPositionhdocStartfdocEndQddocs¢ebriefx(Top menu starting positions for display.dtagsÅ¢ctag`dtextx(Top menu starting positions for display.gentriesÉødnameuTopMenuPosition_StarthdocStartëfdocEndØddocsˆˇødnamexTopMenuPosition_LastRoothdocStart÷fdocEnd¸ddocsˆˇødnamexTopMenuPosition_LastCategoryhdocStart#fdocEndOddocsˆˇˇødnamemTopMenuObjecthdocStartWfdocEndäddocs¢ebriefx&Top menu topobj tag for type checking.dtagsÅ¢ctag`dtextx&Top menu topobj tag for type checking.gentriesÅødnameuINVALID_TOPMENUOBJECThdocStart fdocEnd ddocsˆˇˇhtypesetsÄhtypedefsÅødnamenTopMenuHandlerhdocStart≈fdocEnd#ddocs¢ebriefxTopMenu callback prototype.dtagsá¢ctag`dtextxTopMenu callback prototype.¢ctagmparam:topmenudtextx4TopMenu callback prototype. 
 Handle to the TopMenu.¢ctaglparam:actiondtextxSTopMenu callback prototype. 
 Handle to the TopMenu. TopMenuAction being performed.¢ctagoparam:topobj_iddtextxlTopMenu callback prototype. 
 Handle to the TopMenu. TopMenuAction being performed. The topobj ID (if used).¢ctagkparam:paramdtextxáTopMenu callback prototype. 
 Handle to the TopMenu. TopMenuAction being performed. The topobj ID (if used). Extra parameter (if used).¢ctaglparam:bufferdtextx†TopMenu callback prototype. 
 Handle to the TopMenu. TopMenuAction being performed. The topobj ID (if used). Extra parameter (if used). Output buffer (if used).¢ctagoparam:maxlengthdtextxπTopMenu callback prototype. 
 Handle to the TopMenu. TopMenuAction being performed. The topobj ID (if used). Extra parameter (if used). Output buffer (if used). Output buffer (if used).dtypexvfunction void(TopMenu topmenu, TopMenuAction action, TopMenuObject topobj_id, int param, char[] buffer, int maxlength)ˇ