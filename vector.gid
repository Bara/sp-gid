¶ifunctionsçødnameoGetVectorLengthhdocStartefdocEnd9ddocs¢ebriefxCalculates a vector's length.dtagsÑ¢ctag`dtextxCalculates a vector's length.¢ctagiparam:vecdtextx'Calculates a vector's length. 
 Vector.¢ctagmparam:squareddtextx_Calculates a vector's length. 
 Vector. If true, the result will be squared (for optimization).¢ctagfreturndtextxzCalculates a vector's length. 
 Vector. If true, the result will be squared (for optimization). Vector length (magnitude).dkindfnativejreturnTypeefloatiargumentsÇ£dtypenconst float[3]dnamecvecddeclrconst float vec[3]£dtypedbooldnamegsquaredddecllbool squaredˇødnameqGetVectorDistancehdocStartÑfdocEndãddocs¢ebriefx,Calculates the distance between two vectors.dtagsÖ¢ctag`dtextx,Calculates the distance between two vectors.¢ctagjparam:vec1dtextx<Calculates the distance between two vectors. 
 First vector.¢ctagjparam:vec2dtextxKCalculates the distance between two vectors. 
 First vector. Second vector.¢ctagmparam:squareddtextxÉCalculates the distance between two vectors. 
 First vector. Second vector. If true, the result will be squared (for optimization).¢ctagfreturndtextxîCalculates the distance between two vectors. 
 First vector. Second vector. If true, the result will be squared (for optimization). Vector distance.dkindfnativejreturnTypeefloatiargumentsÉ£dtypenconst float[3]dnamedvec1ddeclsconst float vec1[3]£dtypenconst float[3]dnamedvec2ddeclsconst float vec2[3]£dtypedbooldnamegsquaredddecllbool squaredˇødnamesGetVectorDotProducthdocStartÓfdocEnd	±ddocs¢ebriefx*Calculates the dot product of two vectors.dtagsÑ¢ctag`dtextx*Calculates the dot product of two vectors.¢ctagjparam:vec1dtextx:Calculates the dot product of two vectors. 
 First vector.¢ctagjparam:vec2dtextxICalculates the dot product of two vectors. 
 First vector. Second vector.¢ctagfreturndtextxiCalculates the dot product of two vectors. 
 First vector. Second vector. Dot product of the two vectors.dkindfnativejreturnTypeefloatiargumentsÇ£dtypenconst float[3]dnamedvec1ddeclsconst float vec1[3]£dtypenconst float[3]dnamedvec2ddeclsconst float vec2[3]ˇødnameuGetVectorCrossProducthdocStart
fdocEnd
Òddocs¢ebriefx`Computes the cross product of two vectors.  Any input array can be the same as the output array.dtagsÑ¢ctag`dtextx`Computes the cross product of two vectors.  Any input array can be the same as the output array.¢ctagjparam:vec1dtextxpComputes the cross product of two vectors.  Any input array can be the same as the output array. 
 First vector.¢ctagjparam:vec2dtextxComputes the cross product of two vectors.  Any input array can be the same as the output array. 
 First vector. Second vector.¢ctaglparam:resultdtextxëComputes the cross product of two vectors.  Any input array can be the same as the output array. 
 First vector. Second vector. Resultant vector.dkindfnativejreturnTypedvoidiargumentsÉ£dtypenconst float[3]dnamedvec1ddeclsconst float vec1[3]£dtypenconst float[3]dnamedvec2ddeclsconst float vec2[3]£dtypehfloat[3]dnamefresultddeclofloat result[3]ˇødnameoNormalizeVectorhdocStartTfdocEnd#ddocs¢ebriefxJNormalizes a vector.  The input array can be the same as the output array.dtagsÑ¢ctag`dtextxJNormalizes a vector.  The input array can be the same as the output array.¢ctagiparam:vecdtextxTNormalizes a vector.  The input array can be the same as the output array. 
 Vector.¢ctaglparam:resultdtextxfNormalizes a vector.  The input array can be the same as the output array. 
 Vector. Resultant vector.¢ctagfreturndtextxuNormalizes a vector.  The input array can be the same as the output array. 
 Vector. Resultant vector. Vector length.dkindfnativejreturnTypeefloatiargumentsÇ£dtypenconst float[3]dnamecvecddeclrconst float vec[3]£dtypehfloat[3]dnamefresultddeclofloat result[3]ˇødnameoGetAngleVectorshdocStartkfdocEndddocs¢ebriefx-Returns vectors in the direction of an angle.dtagsÖ¢ctag`dtextx-Returns vectors in the direction of an angle.¢ctagkparam:angledtextx6Returns vectors in the direction of an angle. 
 Angle.¢ctagiparam:fwddtextx\Returns vectors in the direction of an angle. 
 Angle. Forward vector buffer or NULL_VECTOR.¢ctagkparam:rightdtextxÄReturns vectors in the direction of an angle. 
 Angle. Forward vector buffer or NULL_VECTOR. Right vector buffer or NULL_VECTOR.¢ctaghparam:updtextx°Returns vectors in the direction of an angle. 
 Angle. Forward vector buffer or NULL_VECTOR. Right vector buffer or NULL_VECTOR. Up vector buffer or NULL_VECTOR.dkindfnativejreturnTypedvoidiargumentsÑ£dtypenconst float[3]dnameeangleddecltconst float angle[3]£dtypehfloat[3]dnamecfwdddecllfloat fwd[3]£dtypehfloat[3]dnameerightddeclnfloat right[3]£dtypehfloat[3]dnamebupddeclkfloat up[3]ˇødnameoGetVectorAngleshdocStart‚fdocEndXddocs¢ebriefxReturns angles from a vector.dtagsÉ¢ctag`dtextxReturns angles from a vector.¢ctagiparam:vecdtextx'Returns angles from a vector. 
 Vector.¢ctagkparam:angledtextx5Returns angles from a vector. 
 Vector. Angle buffer.dkindfnativejreturnTypedvoidiargumentsÇ£dtypenconst float[3]dnamecvecddeclrconst float vec[3]£dtypehfloat[3]dnameeangleddeclnfloat angle[3]ˇødnamepGetVectorVectorshdocStartûfdocEndoddocs¢ebriefx(Returns direction vectors from a vector.dtagsÑ¢ctag`dtextx(Returns direction vectors from a vector.¢ctagiparam:vecdtextx2Returns direction vectors from a vector. 
 Vector.¢ctagkparam:rightdtextxVReturns direction vectors from a vector. 
 Vector. Right vector buffer or NULL_VECTOR.¢ctaghparam:updtextxwReturns direction vectors from a vector. 
 Vector. Right vector buffer or NULL_VECTOR. Up vector buffer or NULL_VECTOR.dkindfnativejreturnTypedvoidiargumentsÉ£dtypenconst float[3]dnamecvecddeclrconst float vec[3]£dtypehfloat[3]dnameerightddeclnfloat right[3]£dtypehfloat[3]dnamebupddeclkfloat up[3]ˇødnamejAddVectorshdocStart√fdocEndúddocs¢ebriefxMAdds two vectors.  It is safe to use either input buffer as an output buffer.dtagsÑ¢ctag`dtextxMAdds two vectors.  It is safe to use either input buffer as an output buffer.¢ctagjparam:vec1dtextx]Adds two vectors.  It is safe to use either input buffer as an output buffer. 
 First vector.¢ctagjparam:vec2dtextxlAdds two vectors.  It is safe to use either input buffer as an output buffer. 
 First vector. Second vector.¢ctaglparam:resultdtextx{Adds two vectors.  It is safe to use either input buffer as an output buffer. 
 First vector. Second vector. Result buffer.dkindestockjreturnTypedvoidiargumentsÉ£dtypenconst float[3]dnamedvec1ddeclsconst float vec1[3]£dtypenconst float[3]dnamedvec2ddeclsconst float vec2[3]£dtypehfloat[3]dnamefresultddeclofloat result[3]ˇødnameoSubtractVectorshdocStart[fdocEndaddocs¢ebriefxcSubtracts a vector from another vector.  It is safe to use either input buffer as an output buffer.dtagsÑ¢ctag`dtextxcSubtracts a vector from another vector.  It is safe to use either input buffer as an output buffer.¢ctagjparam:vec1dtextxsSubtracts a vector from another vector.  It is safe to use either input buffer as an output buffer. 
 First vector.¢ctagjparam:vec2dtextxôSubtracts a vector from another vector.  It is safe to use either input buffer as an output buffer. 
 First vector. Second vector to subtract from first.¢ctaglparam:resultdtextx®Subtracts a vector from another vector.  It is safe to use either input buffer as an output buffer. 
 First vector. Second vector to subtract from first. Result buffer.dkindestockjreturnTypedvoidiargumentsÉ£dtypenconst float[3]dnamedvec1ddeclsconst float vec1[3]£dtypenconst float[3]dnamedvec2ddeclsconst float vec2[3]£dtypehfloat[3]dnamefresultddeclofloat result[3]ˇødnamekScaleVectorhdocStart%fdocEndçddocs¢ebriefpScales a vector.dtagsÉ¢ctag`dtextpScales a vector.¢ctagiparam:vecdtextxScales a vector. 
 Vector.¢ctagkparam:scaledtextx'Scales a vector. 
 Vector. Scale value.dkindestockjreturnTypedvoidiargumentsÇ£dtypehfloat[3]dnamecvecddecllfloat vec[3]£dtypeefloatdnameescaleddeclkfloat scaleˇødnamelNegateVectorhdocStartfdocEndHddocs¢ebriefsNegatives a vector.dtagsÇ¢ctag`dtextsNegatives a vector.¢ctagiparam:vecdtextxNegatives a vector. 
 Vector.dkindestockjreturnTypedvoidiargumentsÅ£dtypehfloat[3]dnamecvecddecllfloat vec[3]ˇødnametMakeVectorFromPointshdocStartµfdocEndüddocs¢ebriefx:Builds a vector from two points by subtracting the points.dtagsÑ¢ctag`dtextx:Builds a vector from two points by subtracting the points.¢ctagiparam:pt1dtextxlBuilds a vector from two points by subtracting the points. 
 First point (to be subtracted from the second).¢ctagiparam:pt2dtextxzBuilds a vector from two points by subtracting the points. 
 First point (to be subtracted from the second). Second point.¢ctaglparam:outputdtextxêBuilds a vector from two points by subtracting the points. 
 First point (to be subtracted from the second). Second point. Output vector buffer.dkindestockjreturnTypedvoidiargumentsÉ£dtypenconst float[3]dnamecpt1ddeclrconst float pt1[3]£dtypenconst float[3]dnamecpt2ddeclrconst float pt2[3]£dtypehfloat[3]dnamefoutputddeclofloat output[3]ˇjmethodmapsÄiconstantsÄeenumsÄhtypesetsÄhtypedefsÄ