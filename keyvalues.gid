¶ifunctionsò"ødnameoCreateKeyValueshdocStart7 fdocEnd9-ddocs¢ebriefxECreates a new KeyValues structure.  The Handle must always be closed.dtagsÖ¢ctag`dtextxECreates a new KeyValues structure.  The Handle must always be closed.¢ctagjparam:namedtextxaCreates a new KeyValues structure.  The Handle must always be closed. 
 Name of the root section.¢ctagnparam:firstKeydtextxéCreates a new KeyValues structure.  The Handle must always be closed. 
 Name of the root section. If non-empty, specifies the first key value.¢ctagpparam:firstValuedtextx…Creates a new KeyValues structure.  The Handle must always be closed. 
 Name of the root section. If non-empty, specifies the first key value. If firstKey is non-empty, specifies the first key's value.¢ctagfreturndtextxCreates a new KeyValues structure.  The Handle must always be closed. 
 Name of the root section. If non-empty, specifies the first key value. If firstKey is non-empty, specifies the first key's value. A Handle to a new KeyValues structure.dkindfnativejreturnTypeiKeyValuesiargumentsÉ£dtypelconst char[]dnamednameddeclqconst char[] name£dtypelconst char[]dnamehfirstKeyddecluconst char[] firstKey£dtypelconst char[]dnamejfirstValueddeclwconst char[] firstValueˇødnamekKvSetStringhdocStart9ùfdocEnd:äddocs¢ebriefx'Sets a string value of a KeyValues key.dtagsÖ¢ctag`dtextx'Sets a string value of a KeyValues key.¢ctaghparam:kvdtextx;Sets a string value of a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextx\Sets a string value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxjSets a string value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. String value.¢ctageerrordtextxzSets a string value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. String value. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypelconst char[]dnameevalueddeclrconst char[] valueˇødnamehKvSetNumhdocStart:ŸfdocEnd;»ddocs¢ebriefx)Sets an integer value of a KeyValues key.dtagsÖ¢ctag`dtextx)Sets an integer value of a KeyValues key.¢ctaghparam:kvdtextx=Sets an integer value of a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextx^Sets an integer value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxlSets an integer value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Value number.¢ctageerrordtextx|Sets an integer value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Value number. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypecintdnameevalueddecliint valueˇødnamekKvSetUInt64hdocStart<fdocEnd=ddocs¢ebriefx.Sets a large integer value of a KeyValues key.dtagsÖ¢ctag`dtextx.Sets a large integer value of a KeyValues key.¢ctaghparam:kvdtextxBSets a large integer value of a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextxcSets a large integer value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxëSets a large integer value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Large integer value (0=High bits, 1=Low bits)¢ctageerrordtextx°Sets a large integer value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Large integer value (0=High bits, 1=Low bits) Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypelconst int[2]dnameevalueddeclrconst int value[2]ˇødnamejKvSetFloathdocStart=nfdocEnd>kddocs¢ebriefx/Sets a floating point value of a KeyValues key.dtagsÖ¢ctag`dtextx/Sets a floating point value of a KeyValues key.¢ctaghparam:kvdtextxCSets a floating point value of a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextxdSets a floating point value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxzSets a floating point value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Floating point value.¢ctageerrordtextxäSets a floating point value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Floating point value. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypeefloatdnameevalueddeclkfloat valueˇødnamejKvSetColorhdocStart>≤fdocEnd@ddocs¢ebriefx.Sets a set of color values of a KeyValues key.dtagsà¢ctag`dtextx.Sets a set of color values of a KeyValues key.¢ctaghparam:kvdtextxBSets a set of color values of a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextxcSets a set of color values of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctaggparam:rdtextxnSets a set of color values of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value.¢ctaggparam:gdtextx{Sets a set of color values of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value. Green value.¢ctaggparam:bdtextxáSets a set of color values of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value. Green value. Blue value.¢ctaggparam:adtextxîSets a set of color values of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value. Green value. Blue value. Alpha value.¢ctageerrordtextx§Sets a set of color values of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value. Green value. Blue value. Alpha value. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÜ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypecintdnamearddecleint r£dtypecintdnameagddecleint g£dtypecintdnameabddecleint b£dtypecintdnameaaddecleint aˇødnamekKvSetVectorhdocStart@lfdocEndAYddocs¢ebriefx'Sets a vector value of a KeyValues key.dtagsÖ¢ctag`dtextx'Sets a vector value of a KeyValues key.¢ctaghparam:kvdtextx;Sets a vector value of a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextx\Sets a vector value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagiparam:vecdtextxjSets a vector value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Vector value.¢ctageerrordtextxzSets a vector value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Vector value. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypenconst float[3]dnamecvecddeclrconst float vec[3]ˇødnamekKvGetStringhdocStartA®fdocEndC9ddocs¢ebriefx.Retrieves a string value from a KeyValues key.dtagsá¢ctag`dtextx.Retrieves a string value from a KeyValues key.¢ctaghparam:kvdtextxBRetrieves a string value from a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextxcRetrieves a string value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxÅRetrieves a string value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Buffer to store key value in.¢ctagoparam:maxlengthdtextx•Retrieves a string value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Buffer to store key value in. Maximum length of the value buffer.¢ctagnparam:defvaluedtextx‹Retrieves a string value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Buffer to store key value in. Maximum length of the value buffer. Optional default value to use if the key is not found.¢ctageerrordtextxÏRetrieves a string value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Buffer to store key value in. Maximum length of the value buffer. Optional default value to use if the key is not found. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÖ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypefchar[]dnameevalueddecllchar[] value£dtypecintdnameimaxlengthddeclmint maxlength£dtypelconst char[]dnamehdefvalueddecluconst char[] defvalueˇødnamehKvGetNumhdocStartC´fdocEndD˝ddocs¢ebriefx0Retrieves an integer value from a KeyValues key.dtagsÜ¢ctag`dtextx0Retrieves an integer value from a KeyValues key.¢ctaghparam:kvdtextxDRetrieves an integer value from a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextxeRetrieves an integer value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagnparam:defvaluedtextxúRetrieves an integer value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Optional default value to use if the key is not found.¢ctagfreturndtextx∂Retrieves an integer value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Optional default value to use if the key is not found. Integer value of the key.¢ctageerrordtextx∆Retrieves an integer value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Optional default value to use if the key is not found. Integer value of the key. Invalid Handle.dkindfnativejreturnTypecintiargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypecintdnamehdefvalueddecllint defvalueˇødnamejKvGetFloathdocStartEDfdocEndF£ddocs¢ebriefx6Retrieves a floating point value from a KeyValues key.dtagsÜ¢ctag`dtextx6Retrieves a floating point value from a KeyValues key.¢ctaghparam:kvdtextxJRetrieves a floating point value from a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextxkRetrieves a floating point value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagnparam:defvaluedtextx¢Retrieves a floating point value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Optional default value to use if the key is not found.¢ctagfreturndtextx√Retrieves a floating point value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Optional default value to use if the key is not found. Floating point value of the key.¢ctageerrordtextx”Retrieves a floating point value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Optional default value to use if the key is not found. Floating point value of the key. Invalid Handle.dkindfnativejreturnTypeefloatiargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypeefloatdnamehdefvalueddeclnfloat defvalueˇødnamejKvGetColorhdocStartFÚfdocEndH£ddocs¢ebriefx5Retrieves a set of color values from a KeyValues key.dtagsà¢ctag`dtextx5Retrieves a set of color values from a KeyValues key.¢ctaghparam:kvdtextxIRetrieves a set of color values from a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextxjRetrieves a set of color values from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctaggparam:rdtextxáRetrieves a set of color values from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value, set by reference.¢ctaggparam:gdtextx¶Retrieves a set of color values from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value, set by reference. Green value, set by reference.¢ctaggparam:bdtextxƒRetrieves a set of color values from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value, set by reference. Green value, set by reference. Blue value, set by reference.¢ctaggparam:adtextx„Retrieves a set of color values from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value, set by reference. Green value, set by reference. Blue value, set by reference. Alpha value, set by reference.¢ctageerrordtextxÛRetrieves a set of color values from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Red value, set by reference. Green value, set by reference. Blue value, set by reference. Alpha value, set by reference. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÜ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypedint&dnamearddeclfint& r£dtypedint&dnameagddeclfint& g£dtypedint&dnameabddeclfint& b£dtypedint&dnameaaddeclfint& aˇødnamekKvGetUInt64hdocStartH˝fdocEndJ`ddocs¢ebriefx5Retrieves a large integer value from a KeyValues key.dtagsÜ¢ctag`dtextx5Retrieves a large integer value from a KeyValues key.¢ctaghparam:kvdtextxIRetrieves a large integer value from a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextxjRetrieves a large integer value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxêRetrieves a large integer value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Array to represent the large integer.¢ctagnparam:defvaluedtextx«Retrieves a large integer value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Array to represent the large integer. Optional default value to use if the key is not found.¢ctageerrordtextx◊Retrieves a large integer value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Array to represent the large integer. Optional default value to use if the key is not found. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÑ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypefint[2]dnameevalueddecllint value[2]£dtypefint[2]dnamehdefvalueddecloint defvalue[2]ˇødnamekKvGetVectorhdocStartJ¿fdocEndL ddocs¢ebriefx.Retrieves a vector value from a KeyValues key.dtagsÜ¢ctag`dtextx.Retrieves a vector value from a KeyValues key.¢ctaghparam:kvdtextxBRetrieves a vector value from a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextxcRetrieves a vector value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagiparam:vecdtextxçRetrieves a vector value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Destination vector to store the value in.¢ctagnparam:defvaluedtextxƒRetrieves a vector value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Destination vector to store the value in. Optional default value to use if the key is not found.¢ctageerrordtextx‘Retrieves a vector value from a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. Destination vector to store the value in. Optional default value to use if the key is not found. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÑ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypehfloat[3]dnamecvecddecllfloat vec[3]£dtypenconst float[3]dnamehdefvalueddeclwconst float defvalue[3]ˇødnamekKvJumpToKeyhdocStartLífdocEndMÊddocs¢ebriefxASets the current position in the KeyValues tree to the given key.dtagsÖ¢ctag`dtextxASets the current position in the KeyValues tree to the given key.¢ctaghparam:kvdtextxUSets the current position in the KeyValues tree to the given key. 
 KeyValues Handle.¢ctagiparam:keydtextxfSets the current position in the KeyValues tree to the given key. 
 KeyValues Handle. Name of the key.¢ctaglparam:createdtextxüSets the current position in the KeyValues tree to the given key. 
 KeyValues Handle. Name of the key. If true, and the key does not exist, it will be created.¢ctagfreturndtextx·Sets the current position in the KeyValues tree to the given key. 
 KeyValues Handle. Name of the key. If true, and the key does not exist, it will be created. True if the key exists, false if it does not and was not created.dkindfnativejreturnTypedbooliargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypedbooldnamefcreateddeclkbool createˇødnameqKvJumpToKeySymbolhdocStartN4fdocEndOddocs¢ebriefxASets the current position in the KeyValues tree to the given key.dtagsÑ¢ctag`dtextxASets the current position in the KeyValues tree to the given key.¢ctaghparam:kvdtextxUSets the current position in the KeyValues tree to the given key. 
 KeyValues Handle.¢ctaghparam:iddtextxcSets the current position in the KeyValues tree to the given key. 
 KeyValues Handle. KeyValues id.¢ctagfreturndtextxëSets the current position in the KeyValues tree to the given key. 
 KeyValues Handle. KeyValues id. True if the key exists, false if it does not.dkindfnativejreturnTypedbooliargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypecintdnamebidddeclfint idˇødnameqKvGotoFirstSubKeyhdocStartOVfdocEndPÕddocs¢ebriefxwSets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack.dtagsÖ¢ctag`dtextxwSets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack.¢ctaghparam:kvdtextxãSets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack. 
 KeyValues Handle.¢ctagmparam:keyOnlydtextx∫Sets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack. 
 KeyValues Handle. If false, non-keys will be traversed (values).¢ctagfreturndtextxSets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack. 
 KeyValues Handle. If false, non-keys will be traversed (values). True on success, false if there was no first sub key.¢ctageerrordtexty Sets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack. 
 KeyValues Handle. If false, non-keys will be traversed (values). True on success, false if there was no first sub key. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypedbooldnamegkeyOnlyddecllbool keyOnlyˇødnamemKvGotoNextKeyhdocStartQfdocEndR›ddocs¢ebriefxÀSets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus KvGoBack() is not needed for each successive call to this function.dtagsÖ¢ctag`dtextxÀSets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus KvGoBack() is not needed for each successive call to this function.¢ctaghparam:kvdtextxﬂSets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus KvGoBack() is not needed for each successive call to this function. 
 KeyValues Handle.¢ctagmparam:keyOnlydtextySets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus KvGoBack() is not needed for each successive call to this function. 
 KeyValues Handle. If false, non-keys will be traversed (values).¢ctagfreturndtextyCSets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus KvGoBack() is not needed for each successive call to this function. 
 KeyValues Handle. If false, non-keys will be traversed (values). True on success, false if there was no next sub key.¢ctageerrordtextySSets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus KvGoBack() is not needed for each successive call to this function. 
 KeyValues Handle. If false, non-keys will be traversed (values). True on success, false if there was no next sub key. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypedbooldnamegkeyOnlyddecllbool keyOnlyˇødnamenKvSavePositionhdocStartSfdocEndTCddocs¢ebriefxªSaves the current position in the traversal stack onto the traversal stack.  This can be useful if you wish to use KvGotoNextKey() and have the previous key saved for backwards traversal.dtagsÉ¢ctag`dtextxªSaves the current position in the traversal stack onto the traversal stack.  This can be useful if you wish to use KvGotoNextKey() and have the previous key saved for backwards traversal.¢ctaghparam:kvdtextxœSaves the current position in the traversal stack onto the traversal stack.  This can be useful if you wish to use KvGotoNextKey() and have the previous key saved for backwards traversal. 
 KeyValues Handle.¢ctageerrordtextxﬂSaves the current position in the traversal stack onto the traversal stack.  This can be useful if you wish to use KvGotoNextKey() and have the previous key saved for backwards traversal. 
 KeyValues Handle. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÅ£dtypefHandlednamebkvddecliHandle kvˇødnamekKvDeleteKeyhdocStartTofdocEndUtddocs¢ebriefx0Removes the given key from the current position.dtagsÖ¢ctag`dtextx0Removes the given key from the current position.¢ctaghparam:kvdtextxDRemoves the given key from the current position. 
 KeyValues Handle.¢ctagiparam:keydtextxURemoves the given key from the current position. 
 KeyValues Handle. Name of the key.¢ctagfreturndtextxÇRemoves the given key from the current position. 
 KeyValues Handle. Name of the key. True on success, false if key did not exist.¢ctageerrordtextxíRemoves the given key from the current position. 
 KeyValues Handle. Name of the key. True on success, false if key did not exist. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] keyˇødnamelKvDeleteThishdocStartUØfdocEndXƒddocs¢ebriefy0Removes the current sub-key and attempts to set the position to the sub-key after the removed one.  If no such sub-key exists, the position will be the parent key in the traversal stack. Given the sub-key having position "N" in the traversal stack, the removal will always take place from position "N-1."dtagsÑ¢ctag`dtexty0Removes the current sub-key and attempts to set the position to the sub-key after the removed one.  If no such sub-key exists, the position will be the parent key in the traversal stack. Given the sub-key having position "N" in the traversal stack, the removal will always take place from position "N-1."¢ctaghparam:kvdtextyDRemoves the current sub-key and attempts to set the position to the sub-key after the removed one.  If no such sub-key exists, the position will be the parent key in the traversal stack. Given the sub-key having position "N" in the traversal stack, the removal will always take place from position "N-1." 
 KeyValues Handle.¢ctagfreturndtexty4Removes the current sub-key and attempts to set the position to the sub-key after the removed one.  If no such sub-key exists, the position will be the parent key in the traversal stack. Given the sub-key having position "N" in the traversal stack, the removal will always take place from position "N-1." 
 KeyValues Handle. 1 if removal succeeded and there was another key. 0 if the current node was not contained in the previous node, or no previous node exists. -1 if removal succeeded and there were no more keys, thus the state is as if KvGoBack() was called.¢ctageerrordtextyDRemoves the current sub-key and attempts to set the position to the sub-key after the removed one.  If no such sub-key exists, the position will be the parent key in the traversal stack. Given the sub-key having position "N" in the traversal stack, the removal will always take place from position "N-1." 
 KeyValues Handle. 1 if removal succeeded and there was another key. 0 if the current node was not contained in the previous node, or no previous node exists. -1 if removal succeeded and there were no more keys, thus the state is as if KvGoBack() was called. Invalid Handle.dkindfnativejreturnTypecintiargumentsÅ£dtypefHandlednamebkvddecliHandle kvˇødnamehKvGoBackhdocStartXÌfdocEndZ∑ddocs¢ebriefyJumps back to the previous position.  Returns false if there are no previous positions (i.e., at the root node).  This should be called once for each successful Jump call, in order to return to the top node. This function pops one node off the internal traversal stack.dtagsÑ¢ctag`dtextyJumps back to the previous position.  Returns false if there are no previous positions (i.e., at the root node).  This should be called once for each successful Jump call, in order to return to the top node. This function pops one node off the internal traversal stack.¢ctaghparam:kvdtexty!Jumps back to the previous position.  Returns false if there are no previous positions (i.e., at the root node).  This should be called once for each successful Jump call, in order to return to the top node. This function pops one node off the internal traversal stack. 
 KeyValues Handle.¢ctagfreturndtextyTJumps back to the previous position.  Returns false if there are no previous positions (i.e., at the root node).  This should be called once for each successful Jump call, in order to return to the top node. This function pops one node off the internal traversal stack. 
 KeyValues Handle. True on success, false if there is no higher node.¢ctageerrordtextydJumps back to the previous position.  Returns false if there are no previous positions (i.e., at the root node).  This should be called once for each successful Jump call, in order to return to the top node. This function pops one node off the internal traversal stack. 
 KeyValues Handle. True on success, false if there is no higher node. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÅ£dtypefHandlednamebkvddecliHandle kvˇødnamehKvRewindhdocStartZ›fdocEnd[ˆddocs¢ebriefx¨Sets the position back to the top node, emptying the entire node traversal history.  This can be used instead of looping KvGoBack() if recursive iteration is not important.dtagsÉ¢ctag`dtextx¨Sets the position back to the top node, emptying the entire node traversal history.  This can be used instead of looping KvGoBack() if recursive iteration is not important.¢ctaghparam:kvdtextx¿Sets the position back to the top node, emptying the entire node traversal history.  This can be used instead of looping KvGoBack() if recursive iteration is not important. 
 KeyValues Handle.¢ctageerrordtextx–Sets the position back to the top node, emptying the entire node traversal history.  This can be used instead of looping KvGoBack() if recursive iteration is not important. 
 KeyValues Handle. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÅ£dtypefHandlednamebkvddecliHandle kvˇødnamepKvGetSectionNamehdocStart\fdocEnd]Wddocs¢ebriefx#Retrieves the current section name.dtagsÜ¢ctag`dtextx#Retrieves the current section name.¢ctaghparam:kvdtextx7Retrieves the current section name. 
 KeyValues Handle.¢ctagmparam:sectiondtextxYRetrieves the current section name. 
 KeyValues Handle. Buffer to store the section name.¢ctagoparam:maxlengthdtextx|Retrieves the current section name. 
 KeyValues Handle. Buffer to store the section name. Maximum length of the name buffer.¢ctagfreturndtextxüRetrieves the current section name. 
 KeyValues Handle. Buffer to store the section name. Maximum length of the name buffer. True on success, false on failure.¢ctageerrordtextxØRetrieves the current section name. 
 KeyValues Handle. Buffer to store the section name. Maximum length of the name buffer. True on success, false on failure. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypefchar[]dnamegsectionddeclnchar[] section£dtypecintdnameimaxlengthddeclmint maxlengthˇødnamepKvSetSectionNamehdocStart]§fdocEnd^Nddocs¢ebriefxSets the current section name.dtagsÑ¢ctag`dtextxSets the current section name.¢ctaghparam:kvdtextx2Sets the current section name. 
 KeyValues Handle.¢ctagmparam:sectiondtextx@Sets the current section name. 
 KeyValues Handle. Section name.¢ctageerrordtextxPSets the current section name. 
 KeyValues Handle. Section name. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnamegsectionddecltconst char[] sectionˇødnamemKvGetDataTypehdocStart^ífdocEnd_oddocs¢ebriefxReturns the data type at a key.dtagsÖ¢ctag`dtextxReturns the data type at a key.¢ctaghparam:kvdtextx3Returns the data type at a key. 
 KeyValues Handle.¢ctagiparam:keydtextx=Returns the data type at a key. 
 KeyValues Handle. Key name.¢ctagfreturndtextxZReturns the data type at a key. 
 KeyValues Handle. Key name. KvDataType value of the key.¢ctageerrordtextxjReturns the data type at a key. 
 KeyValues Handle. Key name. KvDataType value of the key. Invalid Handle.dkindfnativejreturnTypekKvDataTypesiargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] keyˇødnameoKeyValuesToFilehdocStart_≥fdocEnd`⁄ddocs¢ebriefxSConverts a KeyValues tree to a file.  The tree is dumped from the current position.dtagsÖ¢ctag`dtextxSConverts a KeyValues tree to a file.  The tree is dumped from the current position.¢ctaghparam:kvdtextxgConverts a KeyValues tree to a file.  The tree is dumped from the current position. 
 KeyValues Handle.¢ctagjparam:filedtextx~Converts a KeyValues tree to a file.  The tree is dumped from the current position. 
 KeyValues Handle. File to dump write to.¢ctagfreturndtextx†Converts a KeyValues tree to a file.  The tree is dumped from the current position. 
 KeyValues Handle. File to dump write to. True on success, false otherwise.¢ctageerrordtextx∞Converts a KeyValues tree to a file.  The tree is dumped from the current position. 
 KeyValues Handle. File to dump write to. True on success, false otherwise. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnamedfileddeclqconst char[] fileˇødnameoFileToKeyValueshdocStartafdocEndbGddocs¢ebriefx]Converts a file to a KeyValues tree.  The file is read into the current position of the tree.dtagsÖ¢ctag`dtextx]Converts a file to a KeyValues tree.  The file is read into the current position of the tree.¢ctaghparam:kvdtextxqConverts a file to a KeyValues tree.  The file is read into the current position of the tree. 
 KeyValues Handle.¢ctagjparam:filedtextxÑConverts a file to a KeyValues tree.  The file is read into the current position of the tree. 
 KeyValues Handle. File to read from.¢ctagfreturndtextx¶Converts a file to a KeyValues tree.  The file is read into the current position of the tree. 
 KeyValues Handle. File to read from. True on success, false otherwise.¢ctageerrordtextx∂Converts a file to a KeyValues tree.  The file is read into the current position of the tree. 
 KeyValues Handle. File to read from. True on success, false otherwise. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnamedfileddeclqconst char[] fileˇødnameqStringToKeyValueshdocStartbáfdocEndd3ddocs¢ebriefxfConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree.dtagsÜ¢ctag`dtextxfConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree.¢ctaghparam:kvdtextxzConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree. 
 KeyValues Handle.¢ctaglparam:bufferdtextx§Converts a given string to a KeyValues tree.  The string is read into the current postion of the tree. 
 KeyValues Handle. String buffer to load into the KeyValues.¢ctagrparam:resourceNamedtextxÍConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree. 
 KeyValues Handle. String buffer to load into the KeyValues. The resource name of the KeyValues, used for error tracking purposes.¢ctagfreturndtextyConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree. 
 KeyValues Handle. String buffer to load into the KeyValues. The resource name of the KeyValues, used for error tracking purposes. True on success, false otherwise.¢ctageerrordtextyConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree. 
 KeyValues Handle. String buffer to load into the KeyValues. The resource name of the KeyValues, used for error tracking purposes. True on success, false otherwise. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnamefbufferddeclsconst char[] buffer£dtypelconst char[]dnamelresourceNameddeclxconst char[] resourceNameˇødnametKvSetEscapeSequenceshdocStartd¶fdocEndfddocs¢ebriefxÆSets whether or not the KeyValues parser will read escape sequences. For example, \n would be read as a literal newline.  This defaults to false for new KeyValues structures.dtagsÑ¢ctag`dtextxÆSets whether or not the KeyValues parser will read escape sequences. For example, \n would be read as a literal newline.  This defaults to false for new KeyValues structures.¢ctaghparam:kvdtextx¬Sets whether or not the KeyValues parser will read escape sequences. For example, \n would be read as a literal newline.  This defaults to false for new KeyValues structures. 
 KeyValues Handle.¢ctagpparam:useEscapesdtextxÎSets whether or not the KeyValues parser will read escape sequences. For example, \n would be read as a literal newline.  This defaults to false for new KeyValues structures. 
 KeyValues Handle. Whether or not to read escape sequences.¢ctageerrordtextx˚Sets whether or not the KeyValues parser will read escape sequences. For example, \n would be read as a literal newline.  This defaults to false for new KeyValues structures. 
 KeyValues Handle. Whether or not to read escape sequences. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypedbooldnamejuseEscapesddeclobool useEscapesˇødnamenKvNodesInStackhdocStartfFfdocEndgèddocs¢ebriefxóReturns the position in the jump stack; I.e. the number of calls required for KvGoBack to return to the root node.  If at the root node, 0 is returned.dtagsÑ¢ctag`dtextxóReturns the position in the jump stack; I.e. the number of calls required for KvGoBack to return to the root node.  If at the root node, 0 is returned.¢ctaghparam:kvdtextx´Returns the position in the jump stack; I.e. the number of calls required for KvGoBack to return to the root node.  If at the root node, 0 is returned. 
 KeyValues Handle.¢ctagfreturndtextx◊Returns the position in the jump stack; I.e. the number of calls required for KvGoBack to return to the root node.  If at the root node, 0 is returned. 
 KeyValues Handle. Number of non-root nodes in the jump stack.¢ctageerrordtextxÁReturns the position in the jump stack; I.e. the number of calls required for KvGoBack to return to the root node.  If at the root node, 0 is returned. 
 KeyValues Handle. Number of non-root nodes in the jump stack. Invalid Handle.dkindfnativejreturnTypecintiargumentsÅ£dtypefHandlednamebkvddecliHandle kvˇødnamemKvCopySubkeyshdocStartg∫fdocEndiddocs¢ebriefx£Makes a new copy of all subkeys in the origin KeyValues to the destination KeyValues. NOTE: All KeyValues are processed from the current location not the root one.dtagsÑ¢ctag`dtextx£Makes a new copy of all subkeys in the origin KeyValues to the destination KeyValues. NOTE: All KeyValues are processed from the current location not the root one.¢ctaglparam:origindtextxæMakes a new copy of all subkeys in the origin KeyValues to the destination KeyValues. NOTE: All KeyValues are processed from the current location not the root one. 
 Origin KeyValues Handle.¢ctagjparam:destdtextx‹Makes a new copy of all subkeys in the origin KeyValues to the destination KeyValues. NOTE: All KeyValues are processed from the current location not the root one. 
 Origin KeyValues Handle. Destination KeyValues Handle.¢ctageerrordtextxÏMakes a new copy of all subkeys in the origin KeyValues to the destination KeyValues. NOTE: All KeyValues are processed from the current location not the root one. 
 Origin KeyValues Handle. Destination KeyValues Handle. Invalid Handle.dkindfnativejreturnTypedvoidiargumentsÇ£dtypefHandlednameforiginddeclmHandle origin£dtypefHandlednameddestddeclkHandle destˇødnamemKvFindKeyByIdhdocStartiDfdocEndjûddocs¢ebriefxFinds a KeyValues name by id.dtagsá¢ctag`dtextxFinds a KeyValues name by id.¢ctaghparam:kvdtextx1Finds a KeyValues name by id. 
 KeyValues Handle.¢ctaghparam:iddtextx?Finds a KeyValues name by id. 
 KeyValues Handle. KeyValues id.¢ctagjparam:namedtextxYFinds a KeyValues name by id. 
 KeyValues Handle. KeyValues id. Buffer to store the name.¢ctagoparam:maxlengthdtextx}Finds a KeyValues name by id. 
 KeyValues Handle. KeyValues id. Buffer to store the name. Maximum length of the value buffer.¢ctagfreturndtextx•Finds a KeyValues name by id. 
 KeyValues Handle. KeyValues id. Buffer to store the name. Maximum length of the value buffer. True on success, false if id not found.¢ctageerrordtextxµFinds a KeyValues name by id. 
 KeyValues Handle. KeyValues id. Buffer to store the name. Maximum length of the value buffer. True on success, false if id not found. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÑ£dtypefHandlednamebkvddecliHandle kv£dtypecintdnamebidddeclfint id£dtypefchar[]dnamednameddeclkchar[] name£dtypecintdnameimaxlengthddeclmint maxlengthˇødnameoKvGetNameSymbolhdocStartjÌfdocEndlddocs¢ebriefx-Finds a KeyValues id inside a KeyValues tree.dtagsÜ¢ctag`dtextx-Finds a KeyValues id inside a KeyValues tree.¢ctaghparam:kvdtextxAFinds a KeyValues id inside a KeyValues tree. 
 KeyValues Handle.¢ctagiparam:keydtextxKFinds a KeyValues id inside a KeyValues tree. 
 KeyValues Handle. Key name.¢ctaghparam:iddtextxeFinds a KeyValues id inside a KeyValues tree. 
 KeyValues Handle. Key name. Id of the found KeyValue.¢ctagfreturndtextxéFinds a KeyValues id inside a KeyValues tree. 
 KeyValues Handle. Key name. Id of the found KeyValue. True on success, false if key not found.¢ctageerrordtextxûFinds a KeyValues id inside a KeyValues tree. 
 KeyValues Handle. Key name. Id of the found KeyValue. True on success, false if key not found. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÉ£dtypefHandlednamebkvddecliHandle kv£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypedint&dnamebidddeclgint& idˇødnamerKvGetSectionSymbolhdocStartl_fdocEndmUddocs¢ebriefx!Retrieves the current section id.dtagsÖ¢ctag`dtextx!Retrieves the current section id.¢ctaghparam:kvdtextx5Retrieves the current section id. 
 KeyValues Handle.¢ctaghparam:iddtextxPRetrieves the current section id. 
 KeyValues Handle. Id of the current section.¢ctagfreturndtextxsRetrieves the current section id. 
 KeyValues Handle. Id of the current section. True on success, false on failure.¢ctageerrordtextxÉRetrieves the current section id. 
 KeyValues Handle. Id of the current section. True on success, false on failure. Invalid Handle.dkindfnativejreturnTypedbooliargumentsÇ£dtypefHandlednamebkvddecliHandle kv£dtypedint&dnamebidddeclgint& idˇjmethodmapsÅødnameiKeyValueshdocStart fdocEnd ddocsˆgmethodsò%ødnameiKeyValueshdocStart°fdocEnd	Ÿddocs¢ebriefx[Creates a new KeyValues structure.  The Handle must be closed with CloseHandle() or delete.dtagsÑ¢ctag`dtextx[Creates a new KeyValues structure.  The Handle must be closed with CloseHandle() or delete.¢ctagjparam:namedtextxwCreates a new KeyValues structure.  The Handle must be closed with CloseHandle() or delete. 
 Name of the root section.¢ctagnparam:firstKeydtextx§Creates a new KeyValues structure.  The Handle must be closed with CloseHandle() or delete. 
 Name of the root section. If non-empty, specifies the first key value.¢ctagpparam:firstValuedtextxﬁCreates a new KeyValues structure.  The Handle must be closed with CloseHandle() or delete. 
 Name of the root section. If non-empty, specifies the first key value. If firstKey is non-empty, specifies the first key's valuedkindˆjreturnTypeiKeyValuesiargumentsÉ£dtypelconst char[]dnamednameddeclqconst char[] name£dtypelconst char[]dnamehfirstKeyddecluconst char[] firstKey£dtypelconst char[]dnamejfirstValueddeclwconst char[] firstValueˇødnamelExportToFilehdocStart
BfdocEndddocs¢ebriefxQExports a KeyValues tree to a file. The tree is dumped from the current position.dtagsÉ¢ctag`dtextxQExports a KeyValues tree to a file. The tree is dumped from the current position.¢ctagjparam:filedtextxjExports a KeyValues tree to a file. The tree is dumped from the current position. 
 File to dump write to.¢ctagfreturndtextxãExports a KeyValues tree to a file. The tree is dumped from the current position. 
 File to dump write to. True on success, false otherwisedkindˆjreturnTypedbooliargumentsÅ£dtypelconst char[]dnamedfileddeclqconst char[] fileˇødnamenExportToStringhdocStartCfdocEndGddocs¢ebriefxUExports a KeyValues tree to a string. The string is dumped from the current position.dtagsÑ¢ctag`dtextxUExports a KeyValues tree to a string. The string is dumped from the current position.¢ctaglparam:bufferdtextxkExports a KeyValues tree to a string. The string is dumped from the current position. 
 Buffer to write to.¢ctagoparam:maxlengthdtextxÅExports a KeyValues tree to a string. The string is dumped from the current position. 
 Buffer to write to. Max length of buffer.¢ctagfreturndtextxØExports a KeyValues tree to a string. The string is dumped from the current position. 
 Buffer to write to. Max length of buffer. Number of bytes that can be written to bufferdkindˆjreturnTypecintiargumentsÇ£dtypefchar[]dnamefbufferddeclmchar[] buffer£dtypecintdnameimaxlengthddeclmint maxlengthˇødnamenImportFromFilehdocStart	fdocEnd⁄ddocs¢ebriefx[Imports a file in KeyValues format. The file is read into the current position of the tree.dtagsÉ¢ctag`dtextx[Imports a file in KeyValues format. The file is read into the current position of the tree.¢ctagjparam:filedtextxpImports a file in KeyValues format. The file is read into the current position of the tree. 
 File to read from.¢ctagfreturndtextxëImports a file in KeyValues format. The file is read into the current position of the tree. 
 File to read from. True on success, false otherwisedkindˆjreturnTypedbooliargumentsÅ£dtypelconst char[]dnamedfileddeclqconst char[] fileˇødnamepImportFromStringhdocStartfdocEndjddocs¢ebriefxfConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree.dtagsÑ¢ctag`dtextxfConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree.¢ctaglparam:bufferdtextxíConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree. 
 String buffer to load into the KeyValues.¢ctagrparam:resourceNamedtextxÿConverts a given string to a KeyValues tree.  The string is read into the current postion of the tree. 
 String buffer to load into the KeyValues. The resource name of the KeyValues, used for error tracking purposes.¢ctagfreturndtextx˘Converts a given string to a KeyValues tree.  The string is read into the current postion of the tree. 
 String buffer to load into the KeyValues. The resource name of the KeyValues, used for error tracking purposes. True on success, false otherwisedkindˆjreturnTypedbooliargumentsÇ£dtypelconst char[]dnamefbufferddeclsconst char[] buffer£dtypelconst char[]dnamelresourceNameddeclxconst char[] resourceNameˇødnamefImporthdocStart⁄fdocEnd·ddocs¢ebriefx¬Imports subkeys in the given KeyValues, at the current position in that KeyValues, into the current position in this KeyValues. Note that this copies keys; it does not embed a reference to them.dtagsÇ¢ctag`dtextx¬Imports subkeys in the given KeyValues, at the current position in that KeyValues, into the current position in this KeyValues. Note that this copies keys; it does not embed a reference to them.¢ctagkparam:otherdtextx‹Imports subkeys in the given KeyValues, at the current position in that KeyValues, into the current position in this KeyValues. Note that this copies keys; it does not embed a reference to them. 
 Origin KeyValues HandledkindˆjreturnTypedvoidiargumentsÅ£dtypeiKeyValuesdnameeotherddecloKeyValues otherˇødnameiSetStringhdocStartfdocEnd“ddocs¢ebriefx'Sets a string value of a KeyValues key.dtagsÑ¢ctag`dtextx'Sets a string value of a KeyValues key.¢ctaghparam:kvdtextx;Sets a string value of a KeyValues key. 
 KeyValues Handle.¢ctagiparam:keydtextx\Sets a string value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxiSets a string value of a KeyValues key. 
 KeyValues Handle. Name of the key, or NULL_STRING. String valuedkindˆjreturnTypedvoidiargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypelconst char[]dnameevalueddeclrconst char[] valueˇødnamefSetNumhdocStartfdocEnd±ddocs¢ebriefx)Sets an integer value of a KeyValues key.dtagsÉ¢ctag`dtextx)Sets an integer value of a KeyValues key.¢ctagiparam:keydtextxLSets an integer value of a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxYSets an integer value of a KeyValues key. 
 Name of the key, or NULL_STRING. Value numberdkindˆjreturnTypedvoidiargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypecintdnameevalueddecliint valueˇødnameiSetUInt64hdocStartfdocEnd©ddocs¢ebriefx.Sets a large integer value of a KeyValues key.dtagsÉ¢ctag`dtextx.Sets a large integer value of a KeyValues key.¢ctagiparam:keydtextxQSets a large integer value of a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagkparam:valuedtextx~Sets a large integer value of a KeyValues key. 
 Name of the key, or NULL_STRING. Large integer value (0=High bits, 1=Low bitsdkindˆjreturnTypedvoidiargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypelconst int[2]dnameevalueddeclrconst int value[2]ˇødnamehSetFloathdocStartÙfdocEndñddocs¢ebriefx/Sets a floating point value of a KeyValues key.dtagsÉ¢ctag`dtextx/Sets a floating point value of a KeyValues key.¢ctagiparam:keydtextxRSets a floating point value of a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxgSets a floating point value of a KeyValues key. 
 Name of the key, or NULL_STRING. Floating point valuedkindˆjreturnTypedvoidiargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypeefloatdnameevalueddeclkfloat valueˇødnamehSetColorhdocStartŸfdocEnd„ddocs¢ebriefx.Sets a set of color values of a KeyValues key.dtagsÜ¢ctag`dtextx.Sets a set of color values of a KeyValues key.¢ctagiparam:keydtextxQSets a set of color values of a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctaggparam:rdtextx\Sets a set of color values of a KeyValues key. 
 Name of the key, or NULL_STRING. Red value.¢ctaggparam:gdtextxiSets a set of color values of a KeyValues key. 
 Name of the key, or NULL_STRING. Red value. Green value.¢ctaggparam:bdtextxuSets a set of color values of a KeyValues key. 
 Name of the key, or NULL_STRING. Red value. Green value. Blue value.¢ctaggparam:adtextxÅSets a set of color values of a KeyValues key. 
 Name of the key, or NULL_STRING. Red value. Green value. Blue value. Alpha valuedkindˆjreturnTypedvoidiargumentsÖ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypecintdnamearddecleint r£dtypecintdnameagddecleint g£dtypecintdnameabddecleint b£dtypecintdnameaaddecleint aˇødnameiSetColor4hdocStart7fdocEndÁddocs¢ebriefx.Sets a set of color values of a KeyValues key.dtagsÉ¢ctag`dtextx.Sets a set of color values of a KeyValues key.¢ctagiparam:keydtextxQSets a set of color values of a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagkparam:colordtextxuSets a set of color values of a KeyValues key. 
 Name of the key, or NULL_STRING. Red, green, blue and alpha channelsdkindˆjreturnTypedvoidiargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypelconst int[4]dnameecolorddeclrconst int color[4]ˇødnameiSetVectorhdocStartofdocEndddocs¢ebriefx'Sets a vector value of a KeyValues key.dtagsÉ¢ctag`dtextx'Sets a vector value of a KeyValues key.¢ctagiparam:keydtextxJSets a vector value of a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagiparam:vecdtextxWSets a vector value of a KeyValues key. 
 Name of the key, or NULL_STRING. Vector valuedkindˆjreturnTypedvoidiargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypenconst float[3]dnamecvecddeclrconst float vec[3]ˇødnameiGetStringhdocStartLfdocEndÑddocs¢ebriefx.Retrieves a string value from a KeyValues key.dtagsÖ¢ctag`dtextx.Retrieves a string value from a KeyValues key.¢ctagiparam:keydtextxQRetrieves a string value from a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagkparam:valuedtextxoRetrieves a string value from a KeyValues key. 
 Name of the key, or NULL_STRING. Buffer to store key value in.¢ctagoparam:maxlengthdtextxìRetrieves a string value from a KeyValues key. 
 Name of the key, or NULL_STRING. Buffer to store key value in. Maximum length of the value buffer.¢ctagnparam:defvaluedtextx…Retrieves a string value from a KeyValues key. 
 Name of the key, or NULL_STRING. Buffer to store key value in. Maximum length of the value buffer. Optional default value to use if the key is not founddkindˆjreturnTypedvoidiargumentsÑ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypefchar[]dnameevalueddecllchar[] value£dtypecintdnameimaxlengthddeclmint maxlength£dtypelconst char[]dnamehdefvalueddecluconst char[] defvalueˇødnamefGetNumhdocStartÚfdocEndÍddocs¢ebriefx0Retrieves an integer value from a KeyValues key.dtagsÑ¢ctag`dtextx0Retrieves an integer value from a KeyValues key.¢ctagiparam:keydtextxSRetrieves an integer value from a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagnparam:defvaluedtextxäRetrieves an integer value from a KeyValues key. 
 Name of the key, or NULL_STRING. Optional default value to use if the key is not found.¢ctagfreturndtextx£Retrieves an integer value from a KeyValues key. 
 Name of the key, or NULL_STRING. Optional default value to use if the key is not found. Integer value of the keydkindˆjreturnTypecintiargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypecintdnamehdefvalueddecllint defvalueˇødnamehGetFloathdocStart-fdocEnd2ddocs¢ebriefx6Retrieves a floating point value from a KeyValues key.dtagsÑ¢ctag`dtextx6Retrieves a floating point value from a KeyValues key.¢ctagiparam:keydtextxYRetrieves a floating point value from a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagnparam:defvaluedtextxêRetrieves a floating point value from a KeyValues key. 
 Name of the key, or NULL_STRING. Optional default value to use if the key is not found.¢ctagfreturndtextx∞Retrieves a floating point value from a KeyValues key. 
 Name of the key, or NULL_STRING. Optional default value to use if the key is not found. Floating point value of the keydkindˆjreturnTypeefloatiargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypeefloatdnamehdefvalueddeclnfloat defvalueˇødnamehGetColorhdocStart}fdocEnd÷ddocs¢ebriefx5Retrieves a set of color values from a KeyValues key.dtagsÜ¢ctag`dtextx5Retrieves a set of color values from a KeyValues key.¢ctagiparam:keydtextxXRetrieves a set of color values from a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctaggparam:rdtextxuRetrieves a set of color values from a KeyValues key. 
 Name of the key, or NULL_STRING. Red value, set by reference.¢ctaggparam:gdtextxîRetrieves a set of color values from a KeyValues key. 
 Name of the key, or NULL_STRING. Red value, set by reference. Green value, set by reference.¢ctaggparam:bdtextx≤Retrieves a set of color values from a KeyValues key. 
 Name of the key, or NULL_STRING. Red value, set by reference. Green value, set by reference. Blue value, set by reference.¢ctaggparam:adtextx–Retrieves a set of color values from a KeyValues key. 
 Name of the key, or NULL_STRING. Red value, set by reference. Green value, set by reference. Blue value, set by reference. Alpha value, set by referencedkindˆjreturnTypedvoidiargumentsÖ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypedint&dnamearddeclfint& r£dtypedint&dnameagddeclfint& g£dtypedint&dnameabddeclfint& b£dtypedint&dnameaaddeclfint& aˇødnameiGetColor4hdocStart,fdocEnd‰ddocs¢ebriefx5Retrieves a set of color values from a KeyValues key.dtagsÉ¢ctag`dtextx5Retrieves a set of color values from a KeyValues key.¢ctagiparam:keydtextxXRetrieves a set of color values from a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagkparam:colordtextx}Retrieves a set of color values from a KeyValues key. 
 Name of the key, or NULL_STRING. Red, green, blue, and alpha channelsdkindˆjreturnTypedvoidiargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypefint[4]dnameecolorddecllint color[4]ˇødnameiGetUInt64hdocStart°fdocEnd ™ddocs¢ebriefx5Retrieves a large integer value from a KeyValues key.dtagsÑ¢ctag`dtextx5Retrieves a large integer value from a KeyValues key.¢ctagiparam:keydtextxXRetrieves a large integer value from a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagkparam:valuedtextx~Retrieves a large integer value from a KeyValues key. 
 Name of the key, or NULL_STRING. Array to represent the large integer.¢ctagnparam:defvaluedtextx¥Retrieves a large integer value from a KeyValues key. 
 Name of the key, or NULL_STRING. Array to represent the large integer. Optional default value to use if the key is not founddkindˆjreturnTypedvoidiargumentsÉ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypefint[2]dnameevalueddecllint value[2]£dtypefint[2]dnamehdefvalueddecloint defvalue[2]ˇødnameiGetVectorhdocStart!fdocEnd"ddocs¢ebriefx.Retrieves a vector value from a KeyValues key.dtagsÑ¢ctag`dtextx.Retrieves a vector value from a KeyValues key.¢ctagiparam:keydtextxQRetrieves a vector value from a KeyValues key. 
 Name of the key, or NULL_STRING.¢ctagiparam:vecdtextx{Retrieves a vector value from a KeyValues key. 
 Name of the key, or NULL_STRING. Destination vector to store the value in.¢ctagnparam:defvaluedtextx±Retrieves a vector value from a KeyValues key. 
 Name of the key, or NULL_STRING. Destination vector to store the value in. Optional default value to use if the key is not founddkindˆjreturnTypedvoidiargumentsÉ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypehfloat[3]dnamecvecddecllfloat vec[3]£dtypenconst float[3]dnamehdefvalueddeclwconst float defvalue[3]ˇødnameiJumpToKeyhdocStart"zfdocEnd#ùddocs¢ebriefxASets the current position in the KeyValues tree to the given key.dtagsÑ¢ctag`dtextxASets the current position in the KeyValues tree to the given key.¢ctagiparam:keydtextxTSets the current position in the KeyValues tree to the given key. 
 Name of the key.¢ctaglparam:createdtextxçSets the current position in the KeyValues tree to the given key. 
 Name of the key. If true, and the key does not exist, it will be created.¢ctagfreturndtextxŒSets the current position in the KeyValues tree to the given key. 
 Name of the key. If true, and the key does not exist, it will be created. True if the key exists, false if it does not and was not createddkindˆjreturnTypedbooliargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypedbooldnamefcreateddeclkbool createˇødnameoJumpToKeySymbolhdocStart#ÁfdocEnd$†ddocs¢ebriefxASets the current position in the KeyValues tree to the given key.dtagsÉ¢ctag`dtextxASets the current position in the KeyValues tree to the given key.¢ctaghparam:iddtextxQSets the current position in the KeyValues tree to the given key. 
 KeyValues id.¢ctagfreturndtextx~Sets the current position in the KeyValues tree to the given key. 
 KeyValues id. True if the key exists, false if it does notdkindˆjreturnTypedbooliargumentsÅ£dtypecintdnamebidddeclfint idˇødnameoGotoFirstSubKeyhdocStart$”fdocEnd%ddocs¢ebriefxwSets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack.dtagsÉ¢ctag`dtextxwSets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack.¢ctagmparam:keyOnlydtextx®Sets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack. 
 If false, non-keys will be traversed (values).¢ctagfreturndtextx›Sets the current position in the KeyValues tree to the first sub key. This native adds to the internal traversal stack. 
 If false, non-keys will be traversed (values). True on success, false if there was no first sub keydkindˆjreturnTypedbooliargumentsÅ£dtypedbooldnamegkeyOnlyddecllbool keyOnlyˇødnamekGotoNextKeyhdocStart&.fdocEnd'°ddocs¢ebriefx…Sets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus GoBack() is not needed for each successive call to this function.dtagsÉ¢ctag`dtextx…Sets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus GoBack() is not needed for each successive call to this function.¢ctagmparam:keyOnlydtextx˙Sets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus GoBack() is not needed for each successive call to this function. 
 If false, non-keys will be traversed (values).¢ctagfreturndtexty.Sets the current position in the KeyValues tree to the next sub key. This native does NOT add to the internal traversal stack, and thus GoBack() is not needed for each successive call to this function. 
 If false, non-keys will be traversed (values). True on success, false if there was no next sub keydkindˆjreturnTypedbooliargumentsÅ£dtypedbooldnamegkeyOnlyddecllbool keyOnlyˇødnamelSavePositionhdocStart'€fdocEnd(‘ddocs¢ebriefxªSaves the current position in the traversal stack onto the traversal stack.  This can be useful if you wish to use KvGotoNextKey() and have the previous key saved for backwards traversal.dtagsÇ¢ctag`dtextxªSaves the current position in the traversal stack onto the traversal stack.  This can be useful if you wish to use KvGotoNextKey() and have the previous key saved for backwards traversal.¢ctaghparam:kvdtextxŒSaves the current position in the traversal stack onto the traversal stack.  This can be useful if you wish to use KvGotoNextKey() and have the previous key saved for backwards traversal. 
 KeyValues HandledkindˆjreturnTypedvoidiargumentsÄˇødnamefGoBackhdocStart(˛fdocEnd*oddocs¢ebriefyJumps back to the previous position.  Returns false if there are no previous positions (i.e., at the root node).  This should be called once for each successful Jump call, in order to return to the top node. This function pops one node off the internal traversal stack.dtagsÇ¢ctag`dtextyJumps back to the previous position.  Returns false if there are no previous positions (i.e., at the root node).  This should be called once for each successful Jump call, in order to return to the top node. This function pops one node off the internal traversal stack.¢ctagfreturndtextyAJumps back to the previous position.  Returns false if there are no previous positions (i.e., at the root node).  This should be called once for each successful Jump call, in order to return to the top node. This function pops one node off the internal traversal stack. 
 True on success, false if there is no higher nodedkindˆjreturnTypedbooliargumentsÄˇødnameiDeleteKeyhdocStart*ìfdocEnd+=ddocs¢ebriefx0Removes the given key from the current position.dtagsÉ¢ctag`dtextx0Removes the given key from the current position.¢ctagiparam:keydtextxCRemoves the given key from the current position. 
 Name of the key.¢ctagfreturndtextxoRemoves the given key from the current position. 
 Name of the key. True on success, false if key did not existdkindˆjreturnTypedbooliargumentsÅ£dtypelconst char[]dnameckeyddeclpconst char[] keyˇødnamejDeleteThishdocStart+tfdocEnd.bddocs¢ebriefy0Removes the current sub-key and attempts to set the position to the sub-key after the removed one.  If no such sub-key exists, the position will be the parent key in the traversal stack. Given the sub-key having position "N" in the traversal stack, the removal will always take place from position "N-1."dtagsÉ¢ctag`dtexty0Removes the current sub-key and attempts to set the position to the sub-key after the removed one.  If no such sub-key exists, the position will be the parent key in the traversal stack. Given the sub-key having position "N" in the traversal stack, the removal will always take place from position "N-1."¢ctaghparam:kvdtextyDRemoves the current sub-key and attempts to set the position to the sub-key after the removed one.  If no such sub-key exists, the position will be the parent key in the traversal stack. Given the sub-key having position "N" in the traversal stack, the removal will always take place from position "N-1." 
 KeyValues Handle.¢ctagfreturndtexty3Removes the current sub-key and attempts to set the position to the sub-key after the removed one.  If no such sub-key exists, the position will be the parent key in the traversal stack. Given the sub-key having position "N" in the traversal stack, the removal will always take place from position "N-1." 
 KeyValues Handle. 1 if removal succeeded and there was another key. 0 if the current node was not contained in the previous node, or no previous node exists. -1 if removal succeeded and there were no more keys, thus the state is as if KvGoBack() was calleddkindˆjreturnTypecintiargumentsÄˇødnamefRewindhdocStart.âfdocEnd/sddocs¢ebriefx¨Sets the position back to the top node, emptying the entire node traversal history.  This can be used instead of looping KvGoBack() if recursive iteration is not important.dtagsÇ¢ctag`dtextx¨Sets the position back to the top node, emptying the entire node traversal history.  This can be used instead of looping KvGoBack() if recursive iteration is not important.¢ctaghparam:kvdtextxøSets the position back to the top node, emptying the entire node traversal history.  This can be used instead of looping KvGoBack() if recursive iteration is not important. 
 KeyValues HandledkindˆjreturnTypedvoidiargumentsÄˇødnamenGetSectionNamehdocStart/ófdocEnd0xddocs¢ebriefx#Retrieves the current section name.dtagsÑ¢ctag`dtextx#Retrieves the current section name.¢ctagmparam:sectiondtextxGRetrieves the current section name. 
 Buffer to store the section name.¢ctagoparam:maxlengthdtextxjRetrieves the current section name. 
 Buffer to store the section name. Maximum length of the name buffer.¢ctagfreturndtextxåRetrieves the current section name. 
 Buffer to store the section name. Maximum length of the name buffer. True on success, false on failuredkindˆjreturnTypedbooliargumentsÇ£dtypefchar[]dnamegsectionddeclnchar[] section£dtypecintdnameimaxlengthddeclmint maxlengthˇødnamenSetSectionNamehdocStart0¡fdocEnd1ddocs¢ebriefxSets the current section name.dtagsÇ¢ctag`dtextxSets the current section name.¢ctagmparam:sectiondtextx-Sets the current section name. 
 Section namedkindˆjreturnTypedvoidiargumentsÅ£dtypelconst char[]dnamegsectionddecltconst char[] sectionˇødnamekGetDataTypehdocStart1OfdocEnd1—ddocs¢ebriefxReturns the data type at a key.dtagsÉ¢ctag`dtextxReturns the data type at a key.¢ctagiparam:keydtextx+Returns the data type at a key. 
 Key name.¢ctagfreturndtextxGReturns the data type at a key. 
 Key name. KvDataType value of the keydkindˆjreturnTypekKvDataTypesiargumentsÅ£dtypelconst char[]dnameckeyddeclpconst char[] keyˇødnamerSetEscapeSequenceshdocStart2fdocEnd3ddocs¢ebriefxÆSets whether or not the KeyValues parser will read escape sequences. For example, \n would be read as a literal newline.  This defaults to false for new KeyValues structures.dtagsÇ¢ctag`dtextxÆSets whether or not the KeyValues parser will read escape sequences. For example, \n would be read as a literal newline.  This defaults to false for new KeyValues structures.¢ctagpparam:useEscapesdtextxÿSets whether or not the KeyValues parser will read escape sequences. For example, \n would be read as a literal newline.  This defaults to false for new KeyValues structures. 
 Whether or not to read escape sequencesdkindˆjreturnTypedvoidiargumentsÅ£dtypedbooldnamejuseEscapesddeclobool useEscapesˇødnamelNodesInStackhdocStart3SfdocEnd4Bddocs¢ebriefxóReturns the position in the jump stack; I.e. the number of calls required for KvGoBack to return to the root node.  If at the root node, 0 is returned.dtagsÇ¢ctag`dtextxóReturns the position in the jump stack; I.e. the number of calls required for KvGoBack to return to the root node.  If at the root node, 0 is returned.¢ctagfreturndtextxƒReturns the position in the jump stack; I.e. the number of calls required for KvGoBack to return to the root node.  If at the root node, 0 is returned. 
 Number of non-root nodes in the jump stackdkindˆjreturnTypecintiargumentsÄˇødnamekFindKeyByIdhdocStart4kfdocEnd5lddocs¢ebriefxFinds a KeyValues name by id.dtagsÖ¢ctag`dtextxFinds a KeyValues name by id.¢ctaghparam:iddtextx-Finds a KeyValues name by id. 
 KeyValues id.¢ctagjparam:namedtextxGFinds a KeyValues name by id. 
 KeyValues id. Buffer to store the name.¢ctagoparam:maxlengthdtextxkFinds a KeyValues name by id. 
 KeyValues id. Buffer to store the name. Maximum length of the value buffer.¢ctagfreturndtextxíFinds a KeyValues name by id. 
 KeyValues id. Buffer to store the name. Maximum length of the value buffer. True on success, false if id not founddkindˆjreturnTypedbooliargumentsÉ£dtypecintdnamebidddeclfint id£dtypefchar[]dnamednameddeclkchar[] name£dtypecintdnameimaxlengthddeclmint maxlengthˇødnamemGetNameSymbolhdocStart5∑fdocEnd6áddocs¢ebriefx-Finds a KeyValues id inside a KeyValues tree.dtagsÑ¢ctag`dtextx-Finds a KeyValues id inside a KeyValues tree.¢ctagiparam:keydtextx9Finds a KeyValues id inside a KeyValues tree. 
 Key name.¢ctaghparam:iddtextxSFinds a KeyValues id inside a KeyValues tree. 
 Key name. Id of the found KeyValue.¢ctagfreturndtextx{Finds a KeyValues id inside a KeyValues tree. 
 Key name. Id of the found KeyValue. True on success, false if key not founddkindˆjreturnTypedbooliargumentsÇ£dtypelconst char[]dnameckeyddeclpconst char[] key£dtypedint&dnamebidddeclgint& idˇødnamepGetSectionSymbolhdocStart6ÀfdocEnd7íddocs¢ebriefx!Retrieves the current section id.dtagsÑ¢ctag`dtextx!Retrieves the current section id.¢ctaghparam:kvdtextx5Retrieves the current section id. 
 KeyValues Handle.¢ctaghparam:iddtextxPRetrieves the current section id. 
 KeyValues Handle. Id of the current section.¢ctagfreturndtextxrRetrieves the current section id. 
 KeyValues Handle. Id of the current section. True on success, false on failuredkindˆjreturnTypedbooliargumentsÅ£dtypedint&dnamebidddeclgint& idˇjpropertiesÅødnamelExportLengthhdocStartéfdocEnd ddocs¢ebriefx8Amount of bytes written by ExportToFile & ExportToStringdtagsÅ¢ctag`dtextx8Amount of bytes written by ExportToFile & ExportToStringdtypecintfgetterıfsetterÙˇˇiconstantsÄeenumsÅødnamekKvDataTypeshdocStart{fdocEnd°ddocs¢ebriefxKeyValue data value typesdtagsÅ¢ctag`dtextxKeyValue data value typesgentriesâødnamekKvData_NonehdocStartÕfdocEnd˝ddocsˆˇødnamemKvData_StringhdocStartfdocEnd(ddocsˆˇødnamejKvData_InthdocStart?fdocEndTddocsˆˇødnamelKvData_FloathdocStartkfdocEndáddocsˆˇødnamejKvData_PtrhdocStartûfdocEndÕddocsˆˇødnamenKvData_WStringhdocStart‰fdocEnd˝ddocsˆˇødnamelKvData_ColorhdocStartfdocEnd'ddocsˆˇødnamemKvData_UInt64hdocStart>fdocEndeddocsˆˇødnameoKvData_NUMTYPEShdocStart fdocEnd ddocsˆˇˇhtypesetsÄhtypedefsÄ