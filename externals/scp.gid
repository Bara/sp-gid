{"functions":[{"name":"OnChatMessage","docStart":2041,"docEnd":2815,"docs":{"brief":"When a player types a chat message\n\nNOTES:\nUse MAXLENGTH_  constants above for formating the strings\nDo not rely on the recipients handle to exist beyond the forward\nDo not start another usermessage (PrintToChat) within this forward","tags":[{"tag":"","text":"When a player types a chat message\n\nNOTES:\nUse MAXLENGTH_  constants above for formating the strings\nDo not rely on the recipients handle to exist beyond the forward\nDo not start another usermessage (PrintToChat) within this forward"},{"tag":"param:author","text":"The client index of the player who sent the chat message (Byref)"},{"tag":"param:recipients","text":"The handle to the client index adt array of the players who should recieve the chat message"},{"tag":"param:name","text":"The client's name of the player who sent the chat message (Byref)"},{"tag":"param:message","text":"The contents of the chat message (Byref)"}]},"kind":"forward","returnType":"Action","arguments":[{"type":"int&","name":"author","decl":"int& author"},{"type":"ArrayList","name":"recipients","decl":"ArrayList recipients"},{"type":"char[]","name":"name","decl":"char[] name"},{"type":"char[]","name":"message","decl":"char[] message"}]},{"name":"OnChatMessage_Post","docStart":2912,"docEnd":3698,"docs":{"brief":"Called after all OnChatMessage forwards have been fired and the message is being broadcast.\n\nNOTES:\nUse MAXLENGTH_  constants above for formating the strings\nDo not rely on the recipients handle to exist beyond the forward","tags":[{"tag":"","text":"Called after all OnChatMessage forwards have been fired and the message is being broadcast.\n\nNOTES:\nUse MAXLENGTH_  constants above for formating the strings\nDo not rely on the recipients handle to exist beyond the forward"},{"tag":"param:author","text":"The client index of the player who sent the chat message"},{"tag":"param:recipients","text":"The handle to the client index adt array of the players who are receiting the chat message"},{"tag":"param:name","text":"The client's name of the player who sent the chat message (after any replacements)"},{"tag":"param:message","text":"The contents of the chat message (after any replacements)"}]},"kind":"forward","returnType":"void","arguments":[{"type":"int","name":"author","decl":"int author"},{"type":"ArrayList","name":"recipients","decl":"ArrayList recipients"},{"type":"const char[]","name":"name","decl":"const char[] name"},{"type":"const char[]","name":"message","decl":"const char[] message"}]},{"name":"GetMessageFlags","docStart":3809,"docEnd":4137,"docs":{"brief":"Gets the current flags for the chat message\nShould only be called within OnChatMessage() or OnChatMessage_Post()","tags":[{"tag":"","text":"Gets the current flags for the chat message\nShould only be called within OnChatMessage() or OnChatMessage_Post()"},{"tag":"return","text":"The current type of chat message (see constants)"}]},"kind":"native","returnType":"int","arguments":[]},{"name":"__pl_scp_SetNTVOptional","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"void","arguments":[]}],"methodmaps":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}