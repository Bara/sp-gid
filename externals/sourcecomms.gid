{"functions":[{"name":"SourceComms_SetClientMute","docStart":2055,"docEnd":2779,"docs":{"brief":"Sets a client's mute state.","tags":[{"tag":"","text":"Sets a client's mute state."},{"tag":"param:client","text":"Client index."},{"tag":"param:muteState","text":"True to mute client, false to unmute.\n-------------------------------------Parameters below this line are used only for muteState=true-------------------------------------\n----------------------------------for muteState=false these parameters are ignored (saveToDB=false)----------------------------------"},{"tag":"param:muteLength","text":"Length of punishment in minutes. Value < 0 muting client for session. Permanent (0) is not allowed at this time."},{"tag":"param:saveToDB","text":"If true, punishment will be saved in database."},{"tag":"param:reason","text":"Reason for punishment."},{"tag":"return","text":"True if this caused a change in mute state, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"bool","name":"muteState","decl":"bool muteState"},{"type":"int","name":"muteLength","decl":"int muteLength"},{"type":"bool","name":"saveToDB","decl":"bool saveToDB"},{"type":"const char[]","name":"reason","decl":"const char[] reason"}]},{"name":"SourceComms_SetClientGag","docStart":2939,"docEnd":3660,"docs":{"brief":"Sets a client's gag state.","tags":[{"tag":"","text":"Sets a client's gag state."},{"tag":"param:client","text":"Client index."},{"tag":"param:gagState","text":"True to gag client, false to ungag.\n--------------------------------------Parameters below this line are used only for gagState=true--------------------------------------\n-----------------------------------for gagState=false these parameters are ignored (saveToDB=false)-----------------------------------"},{"tag":"param:gagLength","text":"Length of punishment in minutes. Value < 0 gagging client for session. Permanent (0) is not allowed at this time."},{"tag":"param:saveToDB","text":"If true, punishment will be saved in database."},{"tag":"param:reason","text":"Reason for punishment."},{"tag":"return","text":"True if this caused a change in gag state, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"bool","name":"gagState","decl":"bool gagState"},{"type":"int","name":"gagLength","decl":"int gagLength"},{"type":"bool","name":"saveToDB","decl":"bool saveToDB"},{"type":"const char[]","name":"reason","decl":"const char[] reason"}]},{"name":"SourceComms_GetClientMuteType","docStart":3818,"docEnd":4019,"docs":{"brief":"Returns the client's mute type","tags":[{"tag":"","text":"Returns the client's mute type"},{"tag":"param:client","text":"The client index of the player to check mute status"},{"tag":"return","text":"The client's current mute type index (see enum bType in the begin)."}]},"kind":"native","returnType":"bType","arguments":[{"type":"int","name":"client","decl":"int client"}]},{"name":"SourceComms_GetClientGagType","docStart":4078,"docEnd":4276,"docs":{"brief":"Returns the client's gag type","tags":[{"tag":"","text":"Returns the client's gag type"},{"tag":"param:client","text":"The client index of the player to check gag status"},{"tag":"return","text":"The client's current gag type index (see enum bType in the begin)."}]},"kind":"native","returnType":"bType","arguments":[{"type":"int","name":"client","decl":"int client"}]},{"name":"SourceComms_OnBlockAdded","docStart":4333,"docEnd":4748,"docs":{"brief":"Called when added communication block for player.","tags":[{"tag":"","text":"Called when added communication block for player."},{"tag":"param:client","text":"The client index of the admin who is blocking the client."},{"tag":"param:target","text":"The client index of the player to blocked."},{"tag":"param:time","text":"The time to blocked the player for (in minutes, 0 = permanent)."},{"tag":"param:type","text":"The type of block. See section \"Int definitions for punishments types\"."},{"tag":"param:reason","text":"The reason to block the player."}]},"kind":"forward","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"int","name":"target","decl":"int target"},{"type":"int","name":"time","decl":"int time"},{"type":"int","name":"type","decl":"int type"},{"type":"char[]","name":"reason","decl":"char[] reason"}]},{"name":"__pl_sourcecomms_SetNTVOptional","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"void","arguments":[]}],"methodmaps":[],"constants":[],"enums":[{"name":"bType","docStart":1831,"docEnd":1854,"docs":{"brief":"Punishments types","tags":[{"tag":"","text":"Punishments types"}]},"entries":[{"name":"bNot","docStart":1880,"docEnd":1918,"docs":{"brief":"Player chat or voice is not blocke","tags":[{"tag":"","text":"Player chat or voice is not blocke"}]}},{"name":"bSess","docStart":1928,"docEnd":1979,"docs":{"brief":"... blocked for player session (until reconnect","tags":[{"tag":"","text":"... blocked for player session (until reconnect"}]}},{"name":"bTime","docStart":1989,"docEnd":2017,"docs":{"brief":"... blocked for some tim","tags":[{"tag":"","text":"... blocked for some tim"}]}},{"name":"bPerm","docStart":2025,"docEnd":2051,"docs":{"brief":"... permanently blocke","tags":[{"tag":"","text":"... permanently blocke"}]}}]}],"typesets":[],"typedefs":[]}