{"functions":[{"name":"Updater_AddPlugin","docStart":76,"docEnd":249,"docs":{"brief":"Adds your plugin to the updater. The URL will be updated if\nyour plugin was previously added.","tags":[{"tag":"","text":"Adds your plugin to the updater. The URL will be updated if\nyour plugin was previously added."},{"tag":"param:url","text":"URL to your plugin's update file."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"url","decl":"const char[] url"}]},{"name":"Updater_RemovePlugin","docStart":300,"docEnd":420,"docs":{"brief":"Removes your plugin from the updater. This does not need to\nbe called during OnPluginEnd.\n","tags":[{"tag":"","text":"Removes your plugin from the updater. This does not need to\nbe called during OnPluginEnd.\n"}]},"kind":"native","returnType":"void","arguments":[]},{"name":"Updater_ForceUpdate","docStart":458,"docEnd":695,"docs":{"brief":"Forces your plugin to be checked for updates. The behaviour\nof the update is dependant on the server's configuration.","tags":[{"tag":"","text":"Forces your plugin to be checked for updates. The behaviour\nof the update is dependant on the server's configuration."},{"tag":"return","text":"True if an update was triggered. False otherwise."},{"tag":"error","text":"Plugin not found in updater."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"Updater_OnPluginChecking","docStart":732,"docEnd":882,"docs":{"brief":"Called when your plugin is about to be checked for updates.","tags":[{"tag":"","text":"Called when your plugin is about to be checked for updates."},{"tag":"return","text":"Plugin_Handled to prevent checking, Plugin_Continue to allow it."}]},"kind":"forward","returnType":"Action","arguments":[]},{"name":"Updater_OnPluginDownloading","docStart":927,"docEnd":1095,"docs":{"brief":"Called when your plugin is about to begin downloading an available update.","tags":[{"tag":"","text":"Called when your plugin is about to begin downloading an available update."},{"tag":"return","text":"Plugin_Handled to prevent downloading, Plugin_Continue to allow it."}]},"kind":"forward","returnType":"Action","arguments":[]},{"name":"Updater_OnPluginUpdating","docStart":1143,"docEnd":1455,"docs":{"brief":"Called when your plugin's update files have been fully downloaded\nand are about to write to their proper location. This should be used\nto free read-only resources that require write access for your update.","tags":[{"tag":"","text":"Called when your plugin's update files have been fully downloaded\nand are about to write to their proper location. This should be used\nto free read-only resources that require write access for your update."},{"tag":"note","text":"OnPluginUpdated will be called later during the same frame.\n"}]},"kind":"forward","returnType":"void","arguments":[]},{"name":"Updater_OnPluginUpdated","docStart":1498,"docEnd":1627,"docs":{"brief":"Called when your plugin's update has been completed. It is safe\nto reload your plugin at this time.\n","tags":[{"tag":"","text":"Called when your plugin's update has been completed. It is safe\nto reload your plugin at this time.\n"}]},"kind":"forward","returnType":"void","arguments":[]},{"name":"ReloadPlugin","docStart":1669,"docEnd":1793,"docs":{"brief":"Reloads a plugin.","tags":[{"tag":"","text":""},{"tag":"brief","text":"Reloads a plugin."},{"tag":"param:plugin","text":"Plugin Handle (INVALID_HANDLE uses the calling plugin)."}]},"kind":"stock","returnType":"void","arguments":[{"type":"Handle","name":"plugin","decl":"Handle plugin"}]},{"name":"__pl_updater_SetNTVOptional","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"void","arguments":[]}],"methodmaps":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}