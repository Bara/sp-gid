{"functions":[{"name":"FormatUserLogText","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"char[]","name":"buffer","decl":"char[] buffer"},{"type":"int","name":"maxlength","decl":"int maxlength"}]},{"name":"FindPluginByFile","docStart":2147,"docEnd":2348,"docs":{"brief":"Returns plugin handle from plugin filename.","tags":[{"tag":"","text":"Returns plugin handle from plugin filename."},{"tag":"param:filename","text":"Returns plugin handle from plugin filename. \n Filename of the plugin to search for."},{"tag":"return","text":"Returns plugin handle from plugin filename. \n Filename of the plugin to search for. Handle to plugin if found, INVALID_HANDLE otherwise."}]},"kind":"stock","returnType":"Handle","arguments":[{"type":"const char[]","name":"filename","decl":"const char[] filename"}]},{"name":"SearchForClients","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"pattern","decl":"const char[] pattern"},{"type":"int[]","name":"clients","decl":"int[] clients"},{"type":"int","name":"maxClients","decl":"int maxClients"}]},{"name":"FindTarget","docStart":3877,"docEnd":4299,"docs":{"brief":"Wraps ProcessTargetString() and handles producing error messages for bad targets.","tags":[{"tag":"","text":"Wraps ProcessTargetString() and handles producing error messages for bad targets."},{"tag":"param:client","text":"Wraps ProcessTargetString() and handles producing error messages for bad targets. \n Client who issued command"},{"tag":"param:target","text":"Wraps ProcessTargetString() and handles producing error messages for bad targets. \n Client who issued command Client's target argument"},{"tag":"param:nobots","text":"Wraps ProcessTargetString() and handles producing error messages for bad targets. \n Client who issued command Client's target argument Optional. Set to true if bots should NOT be targetted"},{"tag":"param:immunity","text":"Wraps ProcessTargetString() and handles producing error messages for bad targets. \n Client who issued command Client's target argument Optional. Set to true if bots should NOT be targetted Optional. Set to false to ignore target immunity."},{"tag":"return","text":"Wraps ProcessTargetString() and handles producing error messages for bad targets. \n Client who issued command Client's target argument Optional. Set to true if bots should NOT be targetted Optional. Set to false to ignore target immunity. Index of target client, or -1 on error."}]},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"const char[]","name":"target","decl":"const char[] target"},{"type":"bool","name":"nobots","decl":"bool nobots"},{"type":"bool","name":"immunity","decl":"bool immunity"}]},{"name":"LoadMaps","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"int","arguments":[{"type":"Handle","name":"array","decl":"Handle array"},{"type":"int&","name":"fileTime","decl":"int& fileTime"},{"type":"Handle","name":"fileCvar","decl":"Handle fileCvar"}]}],"methodmaps":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}