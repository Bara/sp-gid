{"functions":[{"name":"GeoipCode2","docStart":1744,"docEnd":2028,"docs":{"brief":"Gets the two character country code from an IP address. (US, CA, etc)","tags":[{"tag":"","text":"Gets the two character country code from an IP address. (US, CA, etc)"},{"tag":"param:ip","text":"Gets the two character country code from an IP address. (US, CA, etc)\nIp to determine the country code."},{"tag":"param:ccode","text":"Gets the two character country code from an IP address. (US, CA, etc)\nIp to determine the country code.Destination string buffer to store the code."},{"tag":"return","text":"Gets the two character country code from an IP address. (US, CA, etc)\nIp to determine the country code.Destination string buffer to store the code.True on success, false if no country found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"ip","decl":"const char[] ip"},{"type":"char[3]","name":"ccode","decl":"char ccode[3]"}]},{"name":"GeoipCode3","docStart":2089,"docEnd":2377,"docs":{"brief":"Gets the three character country code from an IP address. (USA, CAN, etc)","tags":[{"tag":"","text":"Gets the three character country code from an IP address. (USA, CAN, etc)"},{"tag":"param:ip","text":"Gets the three character country code from an IP address. (USA, CAN, etc)\nIp to determine the country code."},{"tag":"param:ccode","text":"Gets the three character country code from an IP address. (USA, CAN, etc)\nIp to determine the country code.Destination string buffer to store the code."},{"tag":"return","text":"Gets the three character country code from an IP address. (USA, CAN, etc)\nIp to determine the country code.Destination string buffer to store the code.True on success, false if no country found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"ip","decl":"const char[] ip"},{"type":"char[4]","name":"ccode","decl":"char ccode[4]"}]},{"name":"GeoipCountry","docStart":2438,"docEnd":2789,"docs":{"brief":"Gets the full country name. (max length of output string is 45)","tags":[{"tag":"","text":"Gets the full country name. (max length of output string is 45)"},{"tag":"param:ip","text":"Gets the full country name. (max length of output string is 45)\nIp to determine the country code."},{"tag":"param:name","text":"Gets the full country name. (max length of output string is 45)\nIp to determine the country code.Destination string buffer to store the country name."},{"tag":"param:maxlength","text":"Gets the full country name. (max length of output string is 45)\nIp to determine the country code.Destination string buffer to store the country name.Maximum length of output string buffer."},{"tag":"return","text":"Gets the full country name. (max length of output string is 45)\nIp to determine the country code.Destination string buffer to store the country name.Maximum length of output string buffer.True on success, false if no country found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"ip","decl":"const char[] ip"},{"type":"char[]","name":"name","decl":"char[] name"},{"type":"int","name":"maxlength","decl":"int maxlength"}]},{"name":"__ext_geoip_SetNTVOptional","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"void","arguments":[]}],"methodmaps":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}