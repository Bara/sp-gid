{"functions":[{"name":"NominateMap","docStart":2284,"docEnd":2720,"docs":{"brief":"Attempt to add a map to the mapchooser map list.","tags":[{"tag":"","text":"Attempt to add a map to the mapchooser map list."},{"tag":"param:map","text":"Attempt to add a map to the mapchooser map list.\nMap to add."},{"tag":"param:force","text":"Attempt to add a map to the mapchooser map list.\nMap to add.Should we force the map in even if it requires overwriting an existing nomination?"},{"tag":"param:owner","text":"Attempt to add a map to the mapchooser map list.\nMap to add.Should we force the map in even if it requires overwriting an existing nomination?Client index of the nominator. If the client disconnects the nomination will be removed.Use 0 for constant nominations"},{"tag":"return","text":"Attempt to add a map to the mapchooser map list.\nMap to add.Should we force the map in even if it requires overwriting an existing nomination?Client index of the nominator. If the client disconnects the nomination will be removed.Use 0 for constant nominationsNominate Result of the outcome"}]},"kind":"native","returnType":"NominateResult","arguments":[{"type":"const char[]","name":"map","decl":"const char[] map"},{"type":"bool","name":"force","decl":"bool force"},{"type":"int","name":"owner","decl":"int owner"}]},{"name":"RemoveNominationByMap","docStart":2801,"docEnd":3024,"docs":{"brief":"Attempt to remove a map from the mapchooser map list.","tags":[{"tag":"","text":"Attempt to remove a map from the mapchooser map list."},{"tag":"param:map","text":"Attempt to remove a map from the mapchooser map list.\nMap to remove."},{"tag":"return","text":"Attempt to remove a map from the mapchooser map list.\nMap to remove.True if the nomination was found and removed, or false if the nomination was not found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"map","decl":"const char[] map"}]},{"name":"RemoveNominationByOwner","docStart":3082,"docEnd":3321,"docs":{"brief":"Attempt to remove a map from the mapchooser map list.","tags":[{"tag":"","text":"Attempt to remove a map from the mapchooser map list."},{"tag":"param:owner","text":"Attempt to remove a map from the mapchooser map list.\nClient index of the nominator."},{"tag":"return","text":"Attempt to remove a map from the mapchooser map list.\nClient index of the nominator.True if the nomination was found and removed, or false if the nomination was not found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"owner","decl":"int owner"}]},{"name":"GetExcludeMapList","docStart":3374,"docEnd":3502,"docs":{"brief":"Gets the current list of excluded maps.","tags":[{"tag":"","text":"Gets the current list of excluded maps."},{"tag":"param:array","text":"Gets the current list of excluded maps.\nAn ADT array handle to add the map strings to."}]},"kind":"native","returnType":"void","arguments":[{"type":"ArrayList","name":"array","decl":"ArrayList array"}]},{"name":"GetNominatedMapList","docStart":3555,"docEnd":3778,"docs":{"brief":"Gets the current list of nominated maps.","tags":[{"tag":"","text":"Gets the current list of nominated maps."},{"tag":"param:maparray","text":"Gets the current list of nominated maps.\nAn ADT array handle to add the map strings to."},{"tag":"param:ownerarray","text":"Gets the current list of nominated maps.\nAn ADT array handle to add the map strings to.An optional ADT array handle to add the nominator client indexes to."}]},"kind":"native","returnType":"void","arguments":[{"type":"ArrayList","name":"maparray","decl":"ArrayList maparray"},{"type":"ArrayList","name":"ownerarray","decl":"ArrayList ownerarray"}]},{"name":"CanMapChooserStartVote","docStart":3865,"docEnd":4023,"docs":{"brief":"Checks if MapChooser will allow a vote","tags":[{"tag":"","text":"Checks if MapChooser will allow a vote"},{"tag":"return","text":"Checks if MapChooser will allow a vote\nTrue if a vote can be held, or false if mapchooser is already holding a vote."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"InitiateMapChooserVote","docStart":4066,"docEnd":4437,"docs":{"brief":"Initiates a MapChooser map vote\nNote: If no input array is specified mapchooser will use its internal list. This includesany nominations and excluded maps (as per mapchoosers convars).","tags":[{"tag":"","text":"Initiates a MapChooser map vote\nNote: If no input array is specified mapchooser will use its internal list. This includesany nominations and excluded maps (as per mapchoosers convars)."},{"tag":"param:when","text":"Initiates a MapChooser map vote\nNote: If no input array is specified mapchooser will use its internal list. This includesany nominations and excluded maps (as per mapchoosers convars).\nMapChange consant of when the resulting mapchange should occur."},{"tag":"param:inputarray","text":"Initiates a MapChooser map vote\nNote: If no input array is specified mapchooser will use its internal list. This includesany nominations and excluded maps (as per mapchoosers convars).\nMapChange consant of when the resulting mapchange should occur.ADT array list of maps to add to the vote."}]},"kind":"native","returnType":"void","arguments":[{"type":"MapChange","name":"when","decl":"MapChange when"},{"type":"ArrayList","name":"inputarray","decl":"ArrayList inputarray"}]},{"name":"HasEndOfMapVoteFinished","docStart":4521,"docEnd":4651,"docs":{"brief":"Checks if MapChooser's end of map vote has completed.","tags":[{"tag":"","text":"Checks if MapChooser's end of map vote has completed."},{"tag":"return","text":"Checks if MapChooser's end of map vote has completed.\nTrue if complete, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"EndOfMapVoteEnabled","docStart":4695,"docEnd":4825,"docs":{"brief":"Checks if MapChooser is set to run an end of map vote.","tags":[{"tag":"","text":"Checks if MapChooser is set to run an end of map vote."},{"tag":"return","text":"Checks if MapChooser is set to run an end of map vote.\nTrue if enabled, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"OnNominationRemoved","docStart":4865,"docEnd":5003,"docs":{"brief":"Called when mapchooser removes a nomination from its list.Nominations cleared on map start will not trigger this forward","tags":[{"tag":"","text":"Called when mapchooser removes a nomination from its list.Nominations cleared on map start will not trigger this forward"}]},"kind":"forward","returnType":"void","arguments":[{"type":"const char[]","name":"map","decl":"const char[] map"},{"type":"int","name":"owner","decl":"int owner"}]},{"name":"OnMapVoteStarted","docStart":5071,"docEnd":5125,"docs":{"brief":"Called when mapchooser starts a Map Vote.","tags":[{"tag":"","text":"Called when mapchooser starts a Map Vote."}]},"kind":"forward","returnType":"void","arguments":[]},{"name":"__pl_mapchooser_SetNTVOptional","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"void","arguments":[]}],"methodmaps":[],"constants":[],"enums":[{"name":"NominateResult","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"Nominate_Added","docStart":1694,"docEnd":1739,"docs":null},{"name":"Nominate_Replaced","docStart":1766,"docEnd":1815,"docs":null},{"name":"Nominate_AlreadyInVote","docStart":1842,"docEnd":1886,"docs":null},{"name":"Nominate_InvalidMap","docStart":1913,"docEnd":1956,"docs":null},{"name":"Nominate_VoteFull","docStart":1983,"docEnd":2036,"docs":null}]},{"name":"MapChange","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"MapChange_Instant","docStart":2088,"docEnd":2148,"docs":null},{"name":"MapChange_RoundEnd","docStart":2175,"docEnd":2216,"docs":null},{"name":"MapChange_MapEnd","docStart":2243,"docEnd":2276,"docs":null}]}],"typesets":[],"typedefs":[]}