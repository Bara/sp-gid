{"functions":[{"name":"OnEntityCreated","docStart":11037,"docEnd":11148,"docs":{"brief":"When an entity is created","tags":[{"tag":"","text":"When an entity is created"},{"tag":"param:entity","text":"When an entity is created\nEntity index"},{"tag":"param:classname","text":"When an entity is created\nEntity indexClass name"}]},"kind":"forward","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"const char[]","name":"classname","decl":"const char[] classname"}]},{"name":"OnEntityDestroyed","docStart":11216,"docEnd":11294,"docs":{"brief":"When an entity is destroyed","tags":[{"tag":"","text":"When an entity is destroyed"},{"tag":"param:entity","text":"When an entity is destroyed\nEntity index"}]},"kind":"forward","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"}]},{"name":"OnGetGameDescription","docStart":11340,"docEnd":11552,"docs":{"brief":"When the game description is retrieved","tags":[{"tag":"","text":"When the game description is retrieved"},{"tag":"note","text":"When the game description is retrieved\nNot supported on ep2v."},{"tag":"param:gameDesc","text":"When the game description is retrieved\nNot supported on ep2v.\nGame description"},{"tag":"return","text":"When the game description is retrieved\nNot supported on ep2v.\nGame descriptionPlugin_Changed if gameDesc has been edited, else no change."}]},"kind":"forward","returnType":"Action","arguments":[{"type":"char[64]","name":"gameDesc","decl":"char gameDesc[64]"}]},{"name":"OnLevelInit","docStart":11610,"docEnd":11824,"docs":{"brief":"When the level is initialized","tags":[{"tag":"","text":"When the level is initialized"},{"tag":"param:mapName","text":"When the level is initialized\nName of the map"},{"tag":"param:mapEntities","text":"When the level is initialized\nName of the mapEntities of the map"},{"tag":"return","text":"When the level is initialized\nName of the mapEntities of the mapPlugin_Changed if mapEntities has been edited, else no change."}]},"kind":"forward","returnType":"Action","arguments":[{"type":"const char[]","name":"mapName","decl":"const char[] mapName"},{"type":"char[2097152]","name":"mapEntities","decl":"char mapEntities[2097152]"}]},{"name":"SDKHook","docStart":11903,"docEnd":12079,"docs":{"brief":"Hooks an entity","tags":[{"tag":"","text":"Hooks an entity"},{"tag":"param:entity","text":"Hooks an entity\nEntity index"},{"tag":"param:type","text":"Hooks an entity\nEntity indexType of function to hook"},{"tag":"param:callback","text":"Hooks an entity\nEntity indexType of function to hookFunction to call when hook is called"}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"SDKHookType","name":"type","decl":"SDKHookType type"},{"type":"SDKHookCB","name":"callback","decl":"SDKHookCB callback"}]},{"name":"SDKHookEx","docStart":12152,"docEnd":12368,"docs":{"brief":"Hooks an entity","tags":[{"tag":"","text":"Hooks an entity"},{"tag":"param:entity","text":"Hooks an entity\nEntity index"},{"tag":"param:type","text":"Hooks an entity\nEntity indexType of function to hook"},{"tag":"param:callback","text":"Hooks an entity\nEntity indexType of function to hookFunction to call when hook is called"},{"tag":"return","text":"Hooks an entity\nEntity indexType of function to hookFunction to call when hook is calledHook Successful"}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"SDKHookType","name":"type","decl":"SDKHookType type"},{"type":"SDKHookCB","name":"callback","decl":"SDKHookCB callback"}]},{"name":"SDKUnhook","docStart":12443,"docEnd":12599,"docs":{"brief":"Unhooks an entity","tags":[{"tag":"","text":"Unhooks an entity"},{"tag":"param:entity","text":"Unhooks an entity\nEntity index"},{"tag":"param:type","text":"Unhooks an entity\nEntity indexType of function to unhook"},{"tag":"param:callback","text":"Unhooks an entity\nEntity indexType of function to unhookCallback function to unhook"}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"SDKHookType","name":"type","decl":"SDKHookType type"},{"type":"SDKHookCB","name":"callback","decl":"SDKHookCB callback"}]},{"name":"SDKHooks_TakeDamage","docStart":12674,"docEnd":13198,"docs":{"brief":"Applies damage to an entity","tags":[{"tag":"","text":"Applies damage to an entity"},{"tag":"note","text":"Applies damage to an entity\nForce application is dependent on game and damage type(s)"},{"tag":"param:entity","text":"Applies damage to an entity\nForce application is dependent on game and damage type(s)\nEntity index taking damage"},{"tag":"param:inflictor","text":"Applies damage to an entity\nForce application is dependent on game and damage type(s)\nEntity index taking damageInflictor entity index"},{"tag":"param:attacker","text":"Applies damage to an entity\nForce application is dependent on game and damage type(s)\nEntity index taking damageInflictor entity indexAttacker entity index"},{"tag":"param:damage","text":"Applies damage to an entity\nForce application is dependent on game and damage type(s)\nEntity index taking damageInflictor entity indexAttacker entity indexAmount of damage"},{"tag":"param:damageType","text":"Applies damage to an entity\nForce application is dependent on game and damage type(s)\nEntity index taking damageInflictor entity indexAttacker entity indexAmount of damageBitfield of damage types"},{"tag":"param:weapon","text":"Applies damage to an entity\nForce application is dependent on game and damage type(s)\nEntity index taking damageInflictor entity indexAttacker entity indexAmount of damageBitfield of damage typesWeapon index (orangebox and later) or -1 for unspecified"},{"tag":"param:damageForce","text":"Applies damage to an entity\nForce application is dependent on game and damage type(s)\nEntity index taking damageInflictor entity indexAttacker entity indexAmount of damageBitfield of damage typesWeapon index (orangebox and later) or -1 for unspecifiedVelocity of damage force"},{"tag":"param:damagePosition","text":"Applies damage to an entity\nForce application is dependent on game and damage type(s)\nEntity index taking damageInflictor entity indexAttacker entity indexAmount of damageBitfield of damage typesWeapon index (orangebox and later) or -1 for unspecifiedVelocity of damage forceOrigin of damage"}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"entity","decl":"int entity"},{"type":"int","name":"inflictor","decl":"int inflictor"},{"type":"int","name":"attacker","decl":"int attacker"},{"type":"float","name":"damage","decl":"float damage"},{"type":"int","name":"damageType","decl":"int damageType"},{"type":"int","name":"weapon","decl":"int weapon"},{"type":"const float[3]","name":"damageForce","decl":"const float damageForce[3]"},{"type":"const float[3]","name":"damagePosition","decl":"const float damagePosition[3]"}]},{"name":"SDKHooks_DropWeapon","docStart":13418,"docEnd":13810,"docs":{"brief":"Forces a client to drop the specified weapon","tags":[{"tag":"","text":"Forces a client to drop the specified weapon"},{"tag":"param:client","text":"Forces a client to drop the specified weapon\nClient index."},{"tag":"param:weapon","text":"Forces a client to drop the specified weapon\nClient index.Weapon entity index."},{"tag":"param:vecTarget","text":"Forces a client to drop the specified weapon\nClient index.Weapon entity index.Location to toss weapon to, or NULL_VECTOR for default."},{"tag":"param:vecVelocity","text":"Forces a client to drop the specified weapon\nClient index.Weapon entity index.Location to toss weapon to, or NULL_VECTOR for default.Velocity at which to toss weapon, or NULL_VECTOR for default."},{"tag":"error","text":"Forces a client to drop the specified weapon\nClient index.Weapon entity index.Location to toss weapon to, or NULL_VECTOR for default.Velocity at which to toss weapon, or NULL_VECTOR for default.Invalid client or weapon entity, weapon not owned by client."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"int","name":"weapon","decl":"int weapon"},{"type":"const float[3]","name":"vecTarget","decl":"const float vecTarget[3]"},{"type":"const float[3]","name":"vecVelocity","decl":"const float vecVelocity[3]"}]}],"methodmaps":[],"constants":[],"enums":[{"name":"SDKHookType","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"SDKHook_EndTouch","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_FireBulletsPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_OnTakeDamage","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_OnTakeDamagePost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_PreThink","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_PostThink","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_SetTransmit","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_Spawn","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_StartTouch","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_Think","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_Touch","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_TraceAttack","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_TraceAttackPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponCanSwitchTo","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponCanUse","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponDrop","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponEquip","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponSwitch","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_ShouldCollide","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_PreThinkPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_PostThinkPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_ThinkPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_EndTouchPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_GroundEntChangedPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_SpawnPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_StartTouchPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_TouchPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_VPhysicsUpdate","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_VPhysicsUpdatePost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponCanSwitchToPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponCanUsePost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponDropPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponEquipPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_WeaponSwitchPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_Use","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_UsePost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_Reload","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_ReloadPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_GetMaxHealth","docStart":6719,"docEnd":6741,"docs":null},{"name":"SDKHook_Blocked","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_BlockedPost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_OnTakeDamageAlive","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_OnTakeDamageAlivePost","docStart":0,"docEnd":0,"docs":null},{"name":"SDKHook_CanBeAutobalanced","docStart":0,"docEnd":0,"docs":null}]},{"name":"UseType","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"Use_Off","docStart":0,"docEnd":0,"docs":null},{"name":"Use_On","docStart":0,"docEnd":0,"docs":null},{"name":"Use_Set","docStart":0,"docEnd":0,"docs":null},{"name":"Use_Toggle","docStart":0,"docEnd":0,"docs":null}]}],"typesets":[{"name":"SDKHookCB","docStart":0,"docEnd":0,"docs":null,"types":[{"type":"function void(int client)","docStart":8050,"docEnd":8085,"docs":{"brief":"PreThink/PostPostThink/Pos","tags":[{"tag":"","text":"PreThink/PostPostThink/Pos"}]}},{"type":"function Action(int entity)","docStart":8117,"docEnd":8125,"docs":{"brief":"Spaw","tags":[{"tag":"","text":"Spaw"}]}},{"type":"function void(int entity)","docStart":8159,"docEnd":8231,"docs":{"brief":"GroundEntChangedSpawnPostThink/PostVPhysicsUpdate/Pos","tags":[{"tag":"","text":"GroundEntChangedSpawnPostThink/PostVPhysicsUpdate/Pos"}]}},{"type":"function Action(int entity, int other)","docStart":8263,"docEnd":8311,"docs":{"brief":"EndTouchStartTouchTouchBlocke","tags":[{"tag":"","text":"EndTouchStartTouchTouchBlocke"}]}},{"type":"function void(int entity, int other)","docStart":8356,"docEnd":8404,"docs":{"brief":"EndTouchPostStartTouchPostTouchPos","tags":[{"tag":"","text":"EndTouchPostStartTouchPostTouchPos"}]}},{"type":"function Action(int entity, int client)","docStart":8447,"docEnd":8461,"docs":{"brief":"SetTransmi","tags":[{"tag":"","text":"SetTransmi"}]}},{"type":"function Action(int client, int weapon)","docStart":8507,"docEnd":8592,"docs":{"brief":"WeaponCanSwitchToWeaponCanUseWeaponDropWeaponEquipWeaponSwitc","tags":[{"tag":"","text":"WeaponCanSwitchToWeaponCanUseWeaponDropWeaponEquipWeaponSwitc"}]}},{"type":"function void(int client, int weapon)","docStart":8638,"docEnd":8743,"docs":{"brief":"WeaponCanSwitchToPostWeaponCanUsePostWeaponDropPostWeaponEquipPostWeaponSwitchPos","tags":[{"tag":"","text":"WeaponCanSwitchToPostWeaponCanUsePostWeaponDropPostWeaponEquipPostWeaponSwitchPos"}]}},{"type":"function Action(int entity, int& maxhealth)","docStart":8787,"docEnd":8819,"docs":{"brief":"GetMaxHealth (ep2v and later","tags":[{"tag":"","text":"GetMaxHealth (ep2v and later"}]}},{"type":"function Action(int victim, int& attacker, int& inflictor, float& damage, int& damagetype)","docStart":8869,"docEnd":9068,"docs":{"brief":"OnTakeDamageOnTakeDamageAliveNote: The weapon parameter is not used by all games and damage sources.Note: Force application is dependent on game and damage type(s)SDKHooks 1.0","tags":[{"tag":"","text":"OnTakeDamageOnTakeDamageAliveNote: The weapon parameter is not used by all games and damage sources.Note: Force application is dependent on game and damage type(s)SDKHooks 1.0"}]}},{"type":"function Action(int victim, int& attacker, int& inflictor, float& damage, int& damagetype, int& weapon, float damageForce[3], float damagePosition[3])","docStart":9164,"docEnd":9180,"docs":{"brief":"SDKHooks 2.0","tags":[{"tag":"","text":"SDKHooks 2.0"}]}},{"type":"function Action(int victim, int& attacker, int& inflictor, float& damage, int& damagetype, int& weapon, float damageForce[3], float damagePosition[3], int damagecustom)","docStart":9336,"docEnd":9526,"docs":{"brief":"SDKHooks 2.1+  (can check for support at runtime using GetFeatureStatus on SDKHook_DmgCustomInOTD capability.DON'T attempt to access 'damagecustom' var if feature status != availabl","tags":[{"tag":"","text":"SDKHooks 2.1+  (can check for support at runtime using GetFeatureStatus on SDKHook_DmgCustomInOTD capability.DON'T attempt to access 'damagecustom' var if feature status != availabl"}]}},{"type":"function void(int victim, int attacker, int inflictor, float damage, int damagetype)","docStart":9703,"docEnd":9748,"docs":{"brief":"OnTakeDamagePostOnTakeDamageAlivePos","tags":[{"tag":"","text":"OnTakeDamagePostOnTakeDamageAlivePos"}]}},{"type":"function void(int victim, int attacker, int inflictor, float damage, int damagetype, int weapon, const float damageForce[3], const float damagePosition[3])","docStart":0,"docEnd":0,"docs":null},{"type":"function void(int victim, int attacker, int inflictor, float damage, int damagetype, int weapon, const float damageForce[3], const float damagePosition[3], int damagecustom)","docStart":0,"docEnd":0,"docs":null},{"type":"function void(int client, int shots, const char[] weaponname)","docStart":10177,"docEnd":10195,"docs":{"brief":"FireBulletsPos","tags":[{"tag":"","text":"FireBulletsPos"}]}},{"type":"function Action(int victim, int& attacker, int& inflictor, float& damage, int& damagetype, int& ammotype, int hitbox, int hitgroup)","docStart":10263,"docEnd":10277,"docs":{"brief":"TraceAttac","tags":[{"tag":"","text":"TraceAttac"}]}},{"type":"function void(int victim, int attacker, int inflictor, float damage, int damagetype, int ammotype, int hitbox, int hitgroup)","docStart":10415,"docEnd":10433,"docs":{"brief":"TraceAttackPos","tags":[{"tag":"","text":"TraceAttackPos"}]}},{"type":"function bool(int entity, int collisiongroup, int contentsmask, bool originalResult)","docStart":10564,"docEnd":10580,"docs":{"brief":"ShouldCollid","tags":[{"tag":"","text":"ShouldCollid"}]}},{"type":"function Action(int entity, int activator, int caller, UseType type, float value)","docStart":10671,"docEnd":10677,"docs":{"brief":"Us","tags":[{"tag":"","text":"Us"}]}},{"type":"function void(int entity, int activator, int caller, UseType type, float value)","docStart":10765,"docEnd":10775,"docs":{"brief":"UsePos","tags":[{"tag":"","text":"UsePos"}]}},{"type":"function Action(int weapon)","docStart":10861,"docEnd":10870,"docs":{"brief":"Reloa","tags":[{"tag":"","text":"Reloa"}]}},{"type":"function void(int weapon, bool bSuccessful)","docStart":10904,"docEnd":10918,"docs":{"brief":"Reload pos","tags":[{"tag":"","text":"Reload pos"}]}},{"type":"function bool(int client, bool origRet)","docStart":10968,"docEnd":10988,"docs":{"brief":"CanBeAutobalance","tags":[{"tag":"","text":"CanBeAutobalance"}]}}]}],"typedefs":[]}