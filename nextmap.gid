{"functions":[{"name":"SetNextMap","docStart":1641,"docEnd":1886,"docs":{"brief":"Sets SourceMod's internal nextmap. Equivalent to changing sm_nextmap but with an added validity check.","tags":[{"tag":"","text":"Sets SourceMod's internal nextmap. Equivalent to changing sm_nextmap but with an added validity check."},{"tag":"param:map","text":"Sets SourceMod's internal nextmap. Equivalent to changing sm_nextmap but with an added validity check. \n Next map to set."},{"tag":"return","text":"Sets SourceMod's internal nextmap. Equivalent to changing sm_nextmap but with an added validity check. \n Next map to set. True if the nextmap was set, false if map was invalid."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"map","decl":"const char[] map"}]},{"name":"GetNextMap","docStart":1933,"docEnd":2218,"docs":{"brief":"Returns SourceMod's internal nextmap.","tags":[{"tag":"","text":"Returns SourceMod's internal nextmap."},{"tag":"param:map","text":"Returns SourceMod's internal nextmap. \n Buffer to store the nextmap name."},{"tag":"param:maxlen","text":"Returns SourceMod's internal nextmap. \n Buffer to store the nextmap name. Maximum length of the map buffer."},{"tag":"return","text":"Returns SourceMod's internal nextmap. \n Buffer to store the nextmap name. Maximum length of the map buffer. True if a Map was found and copied, false if no nextmap is set (map will be unchanged)."}]},"kind":"native","returnType":"bool","arguments":[{"type":"char[]","name":"map","decl":"char[] map"},{"type":"int","name":"maxlen","decl":"int maxlen"}]},{"name":"ForceChangeLevel","docStart":2271,"docEnd":2452,"docs":{"brief":"Changes the current map and records the reason for the change with maphistory","tags":[{"tag":"","text":"Changes the current map and records the reason for the change with maphistory"},{"tag":"param:map","text":"Changes the current map and records the reason for the change with maphistory \n Map to change to."},{"tag":"param:reason","text":"Changes the current map and records the reason for the change with maphistory \n Map to change to. Reason for change."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"map","decl":"const char[] map"},{"type":"const char[]","name":"reason","decl":"const char[] reason"}]},{"name":"GetMapHistorySize","docStart":2526,"docEnd":2634,"docs":{"brief":"Gets the current number of maps in the map history","tags":[{"tag":"","text":"Gets the current number of maps in the map history"},{"tag":"return","text":"Gets the current number of maps in the map history \n Number of maps."}]},"kind":"native","returnType":"int","arguments":[]},{"name":"GetMapHistory","docStart":2671,"docEnd":3133,"docs":{"brief":"Retrieves a map from the map history list.","tags":[{"tag":"","text":"Retrieves a map from the map history list."},{"tag":"param:item","text":"Retrieves a map from the map history list. \n Item number. Must be 0 or greater and less than GetMapHistorySize()."},{"tag":"param:map","text":"Retrieves a map from the map history list. \n Item number. Must be 0 or greater and less than GetMapHistorySize(). Buffer to store the map name."},{"tag":"param:mapLen","text":"Retrieves a map from the map history list. \n Item number. Must be 0 or greater and less than GetMapHistorySize(). Buffer to store the map name. Length of map buffer."},{"tag":"param:reason","text":"Retrieves a map from the map history list. \n Item number. Must be 0 or greater and less than GetMapHistorySize(). Buffer to store the map name. Length of map buffer. Buffer to store the change reason."},{"tag":"param:reasonLen","text":"Retrieves a map from the map history list. \n Item number. Must be 0 or greater and less than GetMapHistorySize(). Buffer to store the map name. Length of map buffer. Buffer to store the change reason. Length of the reason buffer."},{"tag":"param:startTime","text":"Retrieves a map from the map history list. \n Item number. Must be 0 or greater and less than GetMapHistorySize(). Buffer to store the map name. Length of map buffer. Buffer to store the change reason. Length of the reason buffer. Time the map started."},{"tag":"error","text":"Retrieves a map from the map history list. \n Item number. Must be 0 or greater and less than GetMapHistorySize(). Buffer to store the map name. Length of map buffer. Buffer to store the change reason. Length of the reason buffer. Time the map started. Invalid item number."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"item","decl":"int item"},{"type":"char[]","name":"map","decl":"char[] map"},{"type":"int","name":"mapLen","decl":"int mapLen"},{"type":"char[]","name":"reason","decl":"char[] reason"},{"type":"int","name":"reasonLen","decl":"int reasonLen"},{"type":"int&","name":"startTime","decl":"int& startTime"}]}],"methodmaps":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}