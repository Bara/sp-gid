¶ifunctionsèødnameoRegClientCookiehdocStartDfdocEnd~ddocs¢ebriefxÑCreates a new Client preference cookie. 
 Handles returned by RegClientCookie can be closed via CloseHandle() when no longer needed.dtagsÜ¢ctag`dtextxÑCreates a new Client preference cookie. 
 Handles returned by RegClientCookie can be closed via CloseHandle() when no longer needed.¢ctagjparam:namedtextx©Creates a new Client preference cookie. 
 Handles returned by RegClientCookie can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie.¢ctagqparam:descriptiondtextxÿCreates a new Client preference cookie. 
 Handles returned by RegClientCookie can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie. Optional description of the preference cookie.¢ctaglparam:accessdtexty
Creates a new Client preference cookie. 
 Handles returned by RegClientCookie can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie. Optional description of the preference cookie. What CookieAccess level to assign to this cookie.¢ctagfreturndtextyuCreates a new Client preference cookie. 
 Handles returned by RegClientCookie can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie. Optional description of the preference cookie. What CookieAccess level to assign to this cookie. A handle to the newly created cookie. If the cookie already exists, a handle to it will still be returned.¢ctageerrordtextyãCreates a new Client preference cookie. 
 Handles returned by RegClientCookie can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie. Optional description of the preference cookie. What CookieAccess level to assign to this cookie. A handle to the newly created cookie. If the cookie already exists, a handle to it will still be returned. Cookie name is blank.dkindfnativejreturnTypefHandleiargumentsÉ£dtypelconst char[]dnamednameddeclqconst char[] name£dtypelconst char[]dnamekdescriptionddeclxconst char[] description£dtypelCookieAccessdnamefaccessddeclsCookieAccess accessˇødnamepFindClientCookiehdocStart‰fdocEndddocs¢ebriefxÜSearches for a Client preference cookie. 
 Handles returned by FindClientCookie can be closed via CloseHandle() when no longer needed.dtagsÉ¢ctag`dtextxÜSearches for a Client preference cookie. 
 Handles returned by FindClientCookie can be closed via CloseHandle() when no longer needed.¢ctagjparam:namedtextx†Searches for a Client preference cookie. 
 Handles returned by FindClientCookie can be closed via CloseHandle() when no longer needed. 
 Name of cookie to find.¢ctagfreturndtextx·Searches for a Client preference cookie. 
 Handles returned by FindClientCookie can be closed via CloseHandle() when no longer needed. 
 Name of cookie to find. A handle to the cookie if it is found. INVALID_HANDLE otherwise.dkindfnativejreturnTypefHandleiargumentsÅ£dtypelconst char[]dnamednameddeclqconst char[] nameˇødnameoSetClientCookiehdocStartHfdocEnd\ddocs¢ebriefx,Set the value of a Client preference cookie.dtagsÖ¢ctag`dtextx,Set the value of a Client preference cookie.¢ctaglparam:clientdtextx<Set the value of a Client preference cookie. 
 Client index.¢ctaglparam:cookiedtextx]Set the value of a Client preference cookie. 
 Client index. Client preference cookie handle.¢ctagkparam:valuedtextxrSet the value of a Client preference cookie. 
 Client index. Client preference cookie handle. String value to set.¢ctageerrordtextx°Set the value of a Client preference cookie. 
 Client index. Client preference cookie handle. String value to set. Invalid cookie handle or invalid client index.dkindfnativejreturnTypedvoidiargumentsÉ£dtypecintdnamefclientddecljint client£dtypefHandlednamefcookieddeclmHandle cookie£dtypelconst char[]dnameevalueddeclrconst char[] valueˇødnameoGetClientCookiehdocStart≠fdocEnd ddocs¢ebriefx1Retrieve the value of a Client preference cookie.dtagsÜ¢ctag`dtextx1Retrieve the value of a Client preference cookie.¢ctaglparam:clientdtextxARetrieve the value of a Client preference cookie. 
 Client index.¢ctaglparam:cookiedtextxbRetrieve the value of a Client preference cookie. 
 Client index. Client preference cookie handle.¢ctaglparam:bufferdtextx}Retrieve the value of a Client preference cookie. 
 Client index. Client preference cookie handle. Copyback buffer for value.¢ctaglparam:maxlendtextxõRetrieve the value of a Client preference cookie. 
 Client index. Client preference cookie handle. Copyback buffer for value. Maximum length of the buffer.¢ctageerrordtextx Retrieve the value of a Client preference cookie. 
 Client index. Client preference cookie handle. Copyback buffer for value. Maximum length of the buffer. Invalid cookie handle or invalid client index.dkindfnativejreturnTypedvoidiargumentsÑ£dtypecintdnamefclientddecljint client£dtypefHandlednamefcookieddeclmHandle cookie£dtypefchar[]dnamefbufferddeclmchar[] buffer£dtypecintdnamefmaxlenddecljint maxlenˇødnameoSetAuthIdCookiehdocStart [fdocEnd!ãddocs¢ebriefxGSets the value of a Client preference cookie based on an authID string.dtagsÖ¢ctag`dtextxGSets the value of a Client preference cookie based on an authID string.¢ctaglparam:authIDdtextxpSets the value of a Client preference cookie based on an authID string. 
 String Auth/STEAM ID of player to set.¢ctaglparam:cookiedtextxëSets the value of a Client preference cookie based on an authID string. 
 String Auth/STEAM ID of player to set. Client preference cookie handle.¢ctagkparam:valuedtextx¶Sets the value of a Client preference cookie based on an authID string. 
 String Auth/STEAM ID of player to set. Client preference cookie handle. String value to set.¢ctageerrordtextxΩSets the value of a Client preference cookie based on an authID string. 
 String Auth/STEAM ID of player to set. Client preference cookie handle. String value to set. Invalid cookie handle.dkindfnativejreturnTypedvoidiargumentsÉ£dtypelconst char[]dnamefauthIDddeclsconst char[] authID£dtypefHandlednamefcookieddeclmHandle cookie£dtypelconst char[]dnameevalueddeclrconst char[] valueˇødnamevAreClientCookiesCachedhdocStart!ÂfdocEnd"≈ddocs¢ebriefx?Checks if a clients cookies have been loaded from the database.dtagsÑ¢ctag`dtextx?Checks if a clients cookies have been loaded from the database.¢ctaglparam:clientdtextxOChecks if a clients cookies have been loaded from the database. 
 Client index.¢ctagfreturndtextxpChecks if a clients cookies have been loaded from the database. 
 Client index. True if loaded, false otherwise.¢ctageerrordtextxÜChecks if a clients cookies have been loaded from the database. 
 Client index. True if loaded, false otherwise. Invalid client index.dkindfnativejreturnTypedbooliargumentsÅ£dtypecintdnamefclientddecljint clientˇødnameuOnClientCookiesCachedhdocStart"˙fdocEnd#zddocs¢ebriefxHCalled once a client's saved cookies have been loaded from the database.dtagsÇ¢ctag`dtextxHCalled once a client's saved cookies have been loaded from the database.¢ctaglparam:clientdtextxXCalled once a client's saved cookies have been loaded from the database. 
 Client index.dkindgforwardjreturnTypedvoidiargumentsÅ£dtypecintdnamefclientddecljint clientˇødnamesSetCookiePrefabMenuhdocStart#ØfdocEnd%∫ddocs¢ebriefxáAdd a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callbackdtagsá¢ctag`dtextxáAdd a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback¢ctaglparam:cookiedtextx™Add a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 Client preference cookie handle.¢ctagjparam:typedtextx…Add a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 Client preference cookie handle. A CookieMenu prefab menu type.¢ctagmparam:displaydtextx„Add a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 Client preference cookie handle. A CookieMenu prefab menu type. Text to show on the menu.¢ctagmparam:handlerdtexty&Add a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 Client preference cookie handle. A CookieMenu prefab menu type. Text to show on the menu. Optional handler callback for translations and output on selection¢ctagjparam:infodtextyIAdd a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 Client preference cookie handle. A CookieMenu prefab menu type. Text to show on the menu. Optional handler callback for translations and output on selection Info data to pass to the callback.¢ctageerrordtexty`Add a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 Client preference cookie handle. A CookieMenu prefab menu type. Text to show on the menu. Optional handler callback for translations and output on selection Info data to pass to the callback. Invalid cookie handle.dkindfnativejreturnTypedvoidiargumentsÖ£dtypefHandlednamefcookieddeclmHandle cookie£dtypejCookieMenudnamedtypeddecloCookieMenu type£dtypelconst char[]dnamegdisplayddecltconst char[] display£dtypexWfunction void(int client, CookieMenuAction action, any info, char[] buffer, int maxlen)dnameghandlerddeclx_function void(int client, CookieMenuAction action, any info, char[] buffer, int maxlen) handler£dtypecanydnamedinfoddeclhany infoˇødnameqSetCookieMenuItemhdocStart&NfdocEnd'œddocs¢ebriefxñAdds a new item to the client cookie settings menu. 
 Note: This only adds the top level menu item. You need to handle any submenus from the callback.dtagsÖ¢ctag`dtextxñAdds a new item to the client cookie settings menu. 
 Note: This only adds the top level menu item. You need to handle any submenus from the callback.¢ctagmparam:handlerdtextxπAdds a new item to the client cookie settings menu. 
 Note: This only adds the top level menu item. You need to handle any submenus from the callback. 
 A MenuHandler callback function.¢ctagjparam:infodtextx◊Adds a new item to the client cookie settings menu. 
 Note: This only adds the top level menu item. You need to handle any submenus from the callback. 
 A MenuHandler callback function. Data to pass to the callback.¢ctagmparam:displaydtextxÒAdds a new item to the client cookie settings menu. 
 Note: This only adds the top level menu item. You need to handle any submenus from the callback. 
 A MenuHandler callback function. Data to pass to the callback. Text to show on the menu.¢ctageerrordtextyAdds a new item to the client cookie settings menu. 
 Note: This only adds the top level menu item. You need to handle any submenus from the callback. 
 A MenuHandler callback function. Data to pass to the callback. Text to show on the menu. Invalid cookie handle.dkindfnativejreturnTypedvoidiargumentsÉ£dtypexWfunction void(int client, CookieMenuAction action, any info, char[] buffer, int maxlen)dnameghandlerddeclx_function void(int client, CookieMenuAction action, any info, char[] buffer, int maxlen) handler£dtypecanydnamedinfoddeclhany info£dtypelconst char[]dnamegdisplayddecltconst char[] displayˇødnamenShowCookieMenuhdocStart(.fdocEnd(çddocs¢ebriefx'Displays the settings menu to a client.dtagsÇ¢ctag`dtextx'Displays the settings menu to a client.¢ctaglparam:clientdtextx7Displays the settings menu to a client. 
 Client index.dkindfnativejreturnTypedvoidiargumentsÅ£dtypecintdnamefclientddecljint clientˇødnameqGetCookieIteratorhdocStart(∫fdocEnd)5ddocs¢ebriefx:Gets a cookie iterator.  Must be freed with CloseHandle().dtagsÇ¢ctag`dtextx:Gets a cookie iterator.  Must be freed with CloseHandle().¢ctagfreturndtextxSGets a cookie iterator.  Must be freed with CloseHandle(). 
 A new cookie iterator.dkindfnativejreturnTypefHandleiargumentsÄˇødnamerReadCookieIteratorhdocStart)]fdocEnd+"ddocs¢ebriefxAReads a cookie iterator, then advances to the next cookie if any.dtagsà¢ctag`dtextxAReads a cookie iterator, then advances to the next cookie if any.¢ctagjparam:iterdtextx[Reads a cookie iterator, then advances to the next cookie if any. 
 Cookie iterator Handle.¢ctagjparam:namedtextxhReads a cookie iterator, then advances to the next cookie if any. 
 Cookie iterator Handle. Name buffer.¢ctagmparam:nameLendtextxzReads a cookie iterator, then advances to the next cookie if any. 
 Cookie iterator Handle. Name buffer. Name buffer size.¢ctaglparam:accessdtextxñReads a cookie iterator, then advances to the next cookie if any. 
 Cookie iterator Handle. Name buffer. Name buffer size. Access level of the cookie.¢ctagjparam:descdtextx±Reads a cookie iterator, then advances to the next cookie if any. 
 Cookie iterator Handle. Name buffer. Name buffer size. Access level of the cookie. Cookie description buffer.¢ctagmparam:descLendtextx—Reads a cookie iterator, then advances to the next cookie if any. 
 Cookie iterator Handle. Name buffer. Name buffer size. Access level of the cookie. Cookie description buffer. Cookie description buffer size.¢ctagfreturndtextyReads a cookie iterator, then advances to the next cookie if any. 
 Cookie iterator Handle. Name buffer. Name buffer size. Access level of the cookie. Cookie description buffer. Cookie description buffer size. True on success, false if there are no more commands.dkindfnativejreturnTypedbooliargumentsÜ£dtypefHandlednamediterddeclkHandle iter£dtypefchar[]dnamednameddeclkchar[] name£dtypecintdnamegnameLenddeclkint nameLen£dtypemCookieAccess&dnamefaccessddecltCookieAccess& access£dtypefchar[]dnameddescddeclkchar[] desc£dtypecintdnamegdescLenddeclkint descLenˇødnameoGetCookieAccesshdocStart+‘fdocEnd,ßddocs¢ebriefx$Returns the access level of a cookiedtagsÑ¢ctag`dtextx$Returns the access level of a cookie¢ctaglparam:cookiedtextxGReturns the access level of a cookie 
 Client preference cookie handle.¢ctagfreturndtextxbReturns the access level of a cookie 
 Client preference cookie handle. CookieAccess access level.¢ctageerrordtextxyReturns the access level of a cookie 
 Client preference cookie handle. CookieAccess access level. Invalid cookie handle.dkindfnativejreturnTypelCookieAccessiargumentsÅ£dtypefHandlednamefcookieddeclmHandle cookieˇødnamesGetClientCookieTimehdocStart,‡fdocEnd-ßddocs¢ebriefx6Returns the last updated timestamp for a client cookiedtagsÑ¢ctag`dtextx6Returns the last updated timestamp for a client cookie¢ctaglparam:clientdtextxFReturns the last updated timestamp for a client cookie 
 Client index.¢ctaglparam:cookiedtextxUReturns the last updated timestamp for a client cookie 
 Client index. Cookie handle.¢ctagfreturndtextxmReturns the last updated timestamp for a client cookie 
 Client index. Cookie handle. Last updated timestamp.dkindfnativejreturnTypecintiargumentsÇ£dtypecintdnamefclientddecljint client£dtypefHandlednamefcookieddeclmHandle cookieˇødnamex__ext_cprefs_SetNTVOptionalhdocStart fdocEnd ddocsˆdkindestockjreturnTypedvoidiargumentsÄˇjmethodmapsÅødnamefCookiehdocStart fdocEnd ddocsˆgmethodsáødnamefCookiehdocStart∞fdocEnd◊ddocs¢ebriefxqCreates a new Client preference cookie. 
 Handles returned can be closed via CloseHandle() when no longer needed.dtagsÜ¢ctag`dtextxqCreates a new Client preference cookie. 
 Handles returned can be closed via CloseHandle() when no longer needed.¢ctagjparam:namedtextxñCreates a new Client preference cookie. 
 Handles returned can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie.¢ctagqparam:descriptiondtextx≈Creates a new Client preference cookie. 
 Handles returned can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie. Optional description of the preference cookie.¢ctaglparam:accessdtextx˜Creates a new Client preference cookie. 
 Handles returned can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie. Optional description of the preference cookie. What CookieAccess level to assign to this cookie.¢ctagfreturndtextybCreates a new Client preference cookie. 
 Handles returned can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie. Optional description of the preference cookie. What CookieAccess level to assign to this cookie. A handle to the newly created cookie. If the cookie already exists, a handle to it will still be returned.¢ctageerrordtextywCreates a new Client preference cookie. 
 Handles returned can be closed via CloseHandle() when no longer needed. 
 Name of the new preference cookie. Optional description of the preference cookie. What CookieAccess level to assign to this cookie. A handle to the newly created cookie. If the cookie already exists, a handle to it will still be returned. Cookie name is blankdkindˆjreturnTypefCookieiargumentsÉ£dtypelconst char[]dnamednameddeclqconst char[] name£dtypelconst char[]dnamekdescriptionddeclxconst char[] description£dtypelCookieAccessdnamefaccessddeclsCookieAccess accessˇødnamedFindhdocStart6fdocEndYddocs¢ebriefxÅSearches for a Client preference cookie. 
 Handles returned by Cookie.Find can be closed via CloseHandle() when no longer needed.dtagsÉ¢ctag`dtextxÅSearches for a Client preference cookie. 
 Handles returned by Cookie.Find can be closed via CloseHandle() when no longer needed.¢ctagjparam:namedtextxõSearches for a Client preference cookie. 
 Handles returned by Cookie.Find can be closed via CloseHandle() when no longer needed. 
 Name of cookie to find.¢ctagfreturndtextx€Searches for a Client preference cookie. 
 Handles returned by Cookie.Find can be closed via CloseHandle() when no longer needed. 
 Name of cookie to find. A handle to the cookie if it is found. INVALID_HANDLE otherwisedkindˆjreturnTypefCookieiargumentsÅ£dtypelconst char[]dnamednameddeclqconst char[] nameˇødnamecSethdocStartïfdocEndiddocs¢ebriefx,Set the value of a Client preference cookie.dtagsÑ¢ctag`dtextx,Set the value of a Client preference cookie.¢ctaglparam:clientdtextx<Set the value of a Client preference cookie. 
 Client index.¢ctagkparam:valuedtextxQSet the value of a Client preference cookie. 
 Client index. String value to set.¢ctageerrordtextxSet the value of a Client preference cookie. 
 Client index. String value to set. Invalid cookie handle or invalid client indexdkindˆjreturnTypedvoidiargumentsÇ£dtypecintdnamefclientddecljint client£dtypelconst char[]dnameevalueddeclrconst char[] valueˇødnamecGethdocStart®fdocEndøddocs¢ebriefx1Retrieve the value of a Client preference cookie.dtagsÖ¢ctag`dtextx1Retrieve the value of a Client preference cookie.¢ctaglparam:clientdtextxARetrieve the value of a Client preference cookie. 
 Client index.¢ctaglparam:bufferdtextx\Retrieve the value of a Client preference cookie. 
 Client index. Copyback buffer for value.¢ctaglparam:maxlendtextxzRetrieve the value of a Client preference cookie. 
 Client index. Copyback buffer for value. Maximum length of the buffer.¢ctageerrordtextx®Retrieve the value of a Client preference cookie. 
 Client index. Copyback buffer for value. Maximum length of the buffer. Invalid cookie handle or invalid client indexdkindˆjreturnTypedvoidiargumentsÉ£dtypecintdnamefclientddecljint client£dtypefchar[]dnamefbufferddeclmchar[] buffer£dtypecintdnamefmaxlenddecljint maxlenˇødnamekSetByAuthIdhdocStartfdocEndıddocs¢ebriefxGSets the value of a Client preference cookie based on an authID string.dtagsÑ¢ctag`dtextxGSets the value of a Client preference cookie based on an authID string.¢ctaglparam:authIDdtextxpSets the value of a Client preference cookie based on an authID string. 
 String Auth/STEAM ID of player to set.¢ctagkparam:valuedtextxÖSets the value of a Client preference cookie based on an authID string. 
 String Auth/STEAM ID of player to set. String value to set.¢ctageerrordtextxõSets the value of a Client preference cookie based on an authID string. 
 String Auth/STEAM ID of player to set. String value to set. Invalid cookie handledkindˆjreturnTypedvoidiargumentsÇ£dtypelconst char[]dnamefauthIDddeclsconst char[] authID£dtypelconst char[]dnameevalueddeclrconst char[] valueˇødnamemSetPrefabMenuhdocStartEfdocEndddocs¢ebriefxáAdd a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callbackdtagsÜ¢ctag`dtextxáAdd a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback¢ctagjparam:typedtextx®Add a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 A CookieMenu prefab menu type.¢ctagmparam:displaydtextx¬Add a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 A CookieMenu prefab menu type. Text to show on the menu.¢ctagmparam:handlerdtextyAdd a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 A CookieMenu prefab menu type. Text to show on the menu. Optional handler callback for translations and output on selection¢ctagjparam:infodtexty(Add a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 A CookieMenu prefab menu type. Text to show on the menu. Optional handler callback for translations and output on selection Info data to pass to the callback.¢ctageerrordtexty>Add a new prefab item to the client cookie settings menu. 
 Note: This handles everything automatically and does not require a callback 
 A CookieMenu prefab menu type. Text to show on the menu. Optional handler callback for translations and output on selection Info data to pass to the callback. Invalid cookie handledkindˆjreturnTypedvoidiargumentsÑ£dtypejCookieMenudnamedtypeddecloCookieMenu type£dtypelconst char[]dnamegdisplayddecltconst char[] display£dtypexWfunction void(int client, CookieMenuAction action, any info, char[] buffer, int maxlen)dnameghandlerddeclx_function void(int client, CookieMenuAction action, any info, char[] buffer, int maxlen) handler£dtypecanydnamedinfoddeclhany infoˇødnamemGetClientTimehdocStartúfdocEnd4ddocs¢ebriefx6Returns the last updated timestamp for a client cookiedtagsÉ¢ctag`dtextx6Returns the last updated timestamp for a client cookie¢ctaglparam:clientdtextxFReturns the last updated timestamp for a client cookie 
 Client index.¢ctagfreturndtextx]Returns the last updated timestamp for a client cookie 
 Client index. Last updated timestampdkindˆjreturnTypecintiargumentsÅ£dtypecintdnamefclientddecljint clientˇjpropertiesÅødnamekAccessLevelhdocStarthfdocEnd˙ddocs¢ebriefx$Returns the access level of a cookiedtagsÉ¢ctag`dtextx$Returns the access level of a cookie¢ctagfreturndtextxAReturns the access level of a cookie 
 CookieAccess access level.¢ctageerrordtextxWReturns the access level of a cookie 
 CookieAccess access level. Invalid cookie handledtypelCookieAccessfgetterıfsetterÙˇˇiconstantsÄeenumsÉødnamelCookieAccesshdocStartqfdocEnd§ddocs¢ebriefx&Cookie access types for client viewingdtagsÅ¢ctag`dtextx&Cookie access types for client viewinggentriesÉødnamesCookieAccess_PublichdocStart›fdocEndddocsˆˇødnamevCookieAccess_ProtectedhdocStart'fdocEndAddocsˆˇødnametCookieAccess_PrivatehdocStartdfdocEndÑddocsˆˇˇødnamejCookieMenuhdocStartåfdocEnd±ddocs¢ebriefxCookie Prefab menu typesdtagsÅ¢ctag`dtextxCookie Prefab menu typesgentriesÑødnamepCookieMenu_YesNohdocStart‰fdocEnd%ddocsˆˇødnametCookieMenu_YesNo_InthdocStartDfdocEndvddocsˆˇødnamepCookieMenu_OnOffhdocStartïfdocEnd÷ddocsˆˇødnametCookieMenu_OnOff_InthdocStartıfdocEnd	'ddocsˆˇˇødnamepCookieMenuActionhdocStart fdocEnd ddocsˆgentriesÇødnamexCookieMenuAction_DisplayOptionhdocStart	JfdocEnd	ÎddocsˆˇødnamexCookieMenuAction_SelectOptionhdocStart
fdocEnd
ÄddocsˆˇˇhtypesetsÄhtypedefsÅødnameqCookieMenuHandlerhdocStart
¨fdocEnd ddocs¢ebriefxCookie Menu Callback prototypedtagsÜ¢ctag`dtextxCookie Menu Callback prototype¢ctaglparam:clientdtextx.Cookie Menu Callback prototype 
 Client index.¢ctaglparam:actiondtextxPCookie Menu Callback prototype 
 Client index. CookieMenuAction being performed.¢ctagjparam:infodtextxbCookie Menu Callback prototype 
 Client index. CookieMenuAction being performed. Info data passed.¢ctaglparam:bufferdtextxqCookie Menu Callback prototype 
 Client index. CookieMenuAction being performed. Info data passed. Outbut buffer.¢ctaglparam:maxlendtextxíCookie Menu Callback prototype 
 Client index. CookieMenuAction being performed. Info data passed. Outbut buffer. Max length of the output buffer.dtypexWfunction void(int client, CookieMenuAction action, any info, char[] buffer, int maxlen)ˇ