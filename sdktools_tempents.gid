{"functions":[{"name":"AddTempEntHook","docStart":2151,"docEnd":2364,"docs":{"brief":"Hooks a temp entity.","tags":[{"tag":"","text":"Hooks a temp entity."},{"tag":"param:te_name","text":"Hooks a temp entity. \n TE name to hook."},{"tag":"param:hook","text":"Hooks a temp entity. \n TE name to hook. Function to use as a hook."},{"tag":"error","text":"Hooks a temp entity. \n TE name to hook. Function to use as a hook. Temp Entity name not available or invalid function hook."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"te_name","decl":"const char[] te_name"},{"type":"TEHook","name":"hook","decl":"TEHook hook"}]},{"name":"RemoveTempEntHook","docStart":2432,"docEnd":2655,"docs":{"brief":"Removes a temp entity hook.","tags":[{"tag":"","text":"Removes a temp entity hook."},{"tag":"param:te_name","text":"Removes a temp entity hook. \n TE name to unhook."},{"tag":"param:hook","text":"Removes a temp entity hook. \n TE name to unhook. Function used for the hook."},{"tag":"error","text":"Removes a temp entity hook. \n TE name to unhook. Function used for the hook. Temp Entity name not available or invalid function hook."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"te_name","decl":"const char[] te_name"},{"type":"TEHook","name":"hook","decl":"TEHook hook"}]},{"name":"TE_Start","docStart":2726,"docEnd":2868,"docs":{"brief":"Starts a temp entity transmission.","tags":[{"tag":"","text":"Starts a temp entity transmission."},{"tag":"param:te_name","text":"Starts a temp entity transmission. \n TE name."},{"tag":"error","text":"Starts a temp entity transmission. \n TE name. Temp Entity name not available."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"te_name","decl":"const char[] te_name"}]},{"name":"TE_IsValidProp","docStart":2917,"docEnd":3086,"docs":{"brief":"Checks if a certain TE property exists.","tags":[{"tag":"","text":"Checks if a certain TE property exists."},{"tag":"param:prop","text":"Checks if a certain TE property exists. \n Property to use."},{"tag":"return","text":"Checks if a certain TE property exists. \n Property to use. True if the property exists, otherwise false."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"}]},{"name":"TE_WriteNum","docStart":3138,"docEnd":3338,"docs":{"brief":"Sets an integer value in the current temp entity.","tags":[{"tag":"","text":"Sets an integer value in the current temp entity."},{"tag":"param:prop","text":"Sets an integer value in the current temp entity. \n Property to use."},{"tag":"param:value","text":"Sets an integer value in the current temp entity. \n Property to use. Integer value to set."},{"tag":"error","text":"Sets an integer value in the current temp entity. \n Property to use. Integer value to set. Property not found."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"},{"type":"int","name":"value","decl":"int value"}]},{"name":"TE_ReadNum","docStart":3398,"docEnd":3593,"docs":{"brief":"Reads an integer value in the current temp entity.","tags":[{"tag":"","text":"Reads an integer value in the current temp entity."},{"tag":"param:prop","text":"Reads an integer value in the current temp entity. \n Property to use."},{"tag":"return","text":"Reads an integer value in the current temp entity. \n Property to use. Property value."},{"tag":"error","text":"Reads an integer value in the current temp entity. \n Property to use. Property value. Property not found."}]},"kind":"native","returnType":"int","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"}]},{"name":"TE_WriteFloat","docStart":3640,"docEnd":3855,"docs":{"brief":"Sets a floating point number in the current temp entity.","tags":[{"tag":"","text":"Sets a floating point number in the current temp entity."},{"tag":"param:prop","text":"Sets a floating point number in the current temp entity. \n Property to use."},{"tag":"param:value","text":"Sets a floating point number in the current temp entity. \n Property to use. Floating point number to set."},{"tag":"error","text":"Sets a floating point number in the current temp entity. \n Property to use. Floating point number to set. Property not found."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"},{"type":"float","name":"value","decl":"float value"}]},{"name":"TE_ReadFloat","docStart":3919,"docEnd":4121,"docs":{"brief":"Reads a floating point number in the current temp entity.","tags":[{"tag":"","text":"Reads a floating point number in the current temp entity."},{"tag":"param:prop","text":"Reads a floating point number in the current temp entity. \n Property to use."},{"tag":"return","text":"Reads a floating point number in the current temp entity. \n Property to use. Property value."},{"tag":"error","text":"Reads a floating point number in the current temp entity. \n Property to use. Property value. Property not found."}]},"kind":"native","returnType":"float","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"}]},{"name":"TE_WriteVector","docStart":4172,"docEnd":4357,"docs":{"brief":"Sets a vector in the current temp entity.","tags":[{"tag":"","text":"Sets a vector in the current temp entity."},{"tag":"param:prop","text":"Sets a vector in the current temp entity. \n Property to use."},{"tag":"param:vector","text":"Sets a vector in the current temp entity. \n Property to use. Vector to set."},{"tag":"error","text":"Sets a vector in the current temp entity. \n Property to use. Vector to set. Property not found."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"},{"type":"const float[3]","name":"vector","decl":"const float vector[3]"}]},{"name":"TE_ReadVector","docStart":4432,"docEnd":4619,"docs":{"brief":"Reads a vector in the current temp entity.","tags":[{"tag":"","text":"Reads a vector in the current temp entity."},{"tag":"param:prop","text":"Reads a vector in the current temp entity. \n Property to use."},{"tag":"param:vector","text":"Reads a vector in the current temp entity. \n Property to use. Vector to read."},{"tag":"error","text":"Reads a vector in the current temp entity. \n Property to use. Vector to read. Property not found."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"},{"type":"float[3]","name":"vector","decl":"float vector[3]"}]},{"name":"TE_WriteAngles","docStart":4687,"docEnd":4872,"docs":{"brief":"Sets a QAngle in the current temp entity.","tags":[{"tag":"","text":"Sets a QAngle in the current temp entity."},{"tag":"param:prop","text":"Sets a QAngle in the current temp entity. \n Property to use."},{"tag":"param:angles","text":"Sets a QAngle in the current temp entity. \n Property to use. Angles to set."},{"tag":"error","text":"Sets a QAngle in the current temp entity. \n Property to use. Angles to set. Property not found."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"},{"type":"const float[3]","name":"angles","decl":"const float angles[3]"}]},{"name":"TE_WriteFloatArray","docStart":4947,"docEnd":5203,"docs":{"brief":"Sets an array of floats in the current temp entity.","tags":[{"tag":"","text":"Sets an array of floats in the current temp entity."},{"tag":"param:prop","text":"Sets an array of floats in the current temp entity. \n Property to use."},{"tag":"param:array","text":"Sets an array of floats in the current temp entity. \n Property to use. Array of values to copy."},{"tag":"param:arraySize","text":"Sets an array of floats in the current temp entity. \n Property to use. Array of values to copy. Number of values to copy."},{"tag":"error","text":"Sets an array of floats in the current temp entity. \n Property to use. Array of values to copy. Number of values to copy. Property not found."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"},{"type":"const float[]","name":"array","decl":"const float[] array"},{"type":"int","name":"arraySize","decl":"int arraySize"}]},{"name":"TE_Send","docStart":5295,"docEnd":5623,"docs":{"brief":"Sends the current temp entity to one or more clients.","tags":[{"tag":"","text":"Sends the current temp entity to one or more clients."},{"tag":"param:clients","text":"Sends the current temp entity to one or more clients. \n Array containing player indexes to broadcast to."},{"tag":"param:numClients","text":"Sends the current temp entity to one or more clients. \n Array containing player indexes to broadcast to. Number of players in the array."},{"tag":"param:delay","text":"Sends the current temp entity to one or more clients. \n Array containing player indexes to broadcast to. Number of players in the array. Delay in seconds to send the TE."},{"tag":"error","text":"Sends the current temp entity to one or more clients. \n Array containing player indexes to broadcast to. Number of players in the array. Delay in seconds to send the TE. Invalid client index or client not in game."}]},"kind":"native","returnType":"void","arguments":[{"type":"const int[]","name":"clients","decl":"const int[] clients"},{"type":"int","name":"numClients","decl":"int numClients"},{"type":"float","name":"delay","decl":"float delay"}]},{"name":"TE_WriteEncodedEnt","docStart":5703,"docEnd":5966,"docs":{"brief":"Sets an encoded entity index in the current temp entity. (This is usually used for m_nStartEntity and m_nEndEntity).","tags":[{"tag":"","text":"Sets an encoded entity index in the current temp entity. (This is usually used for m_nStartEntity and m_nEndEntity)."},{"tag":"param:prop","text":"Sets an encoded entity index in the current temp entity. (This is usually used for m_nStartEntity and m_nEndEntity). \n Property to use."},{"tag":"param:value","text":"Sets an encoded entity index in the current temp entity. (This is usually used for m_nStartEntity and m_nEndEntity). \n Property to use. Value to set."},{"tag":"error","text":"Sets an encoded entity index in the current temp entity. (This is usually used for m_nStartEntity and m_nEndEntity). \n Property to use. Value to set. Property not found."}]},"kind":"stock","returnType":"void","arguments":[{"type":"const char[]","name":"prop","decl":"const char[] prop"},{"type":"int","name":"value","decl":"int value"}]},{"name":"TE_SendToAll","docStart":6121,"docEnd":6272,"docs":{"brief":"Broadcasts the current temp entity to all clients.","tags":[{"tag":"","text":"Broadcasts the current temp entity to all clients."},{"tag":"note","text":"Broadcasts the current temp entity to all clients. See TE_Start()."},{"tag":"param:delay","text":"Broadcasts the current temp entity to all clients. See TE_Start(). \n Delay in seconds to send the TE."}]},"kind":"stock","returnType":"void","arguments":[{"type":"float","name":"delay","decl":"float delay"}]},{"name":"TE_SendToClient","docStart":6520,"docEnd":6772,"docs":{"brief":"Sends the current TE to only a client.","tags":[{"tag":"","text":"Sends the current TE to only a client."},{"tag":"note","text":"Sends the current TE to only a client. See TE_Start()."},{"tag":"param:client","text":"Sends the current TE to only a client. See TE_Start(). \n Client to send to."},{"tag":"param:delay","text":"Sends the current TE to only a client. See TE_Start(). \n Client to send to. Delay in seconds to send the TE."},{"tag":"error","text":"Sends the current TE to only a client. See TE_Start(). \n Client to send to. Delay in seconds to send the TE. Invalid client index or client not in game."}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client"},{"type":"float","name":"delay","decl":"float delay"}]},{"name":"TE_SendToAllInRange","docStart":6914,"docEnd":7269,"docs":{"brief":"Sends the current TE to all clients that are in visible or audible range of the origin.","tags":[{"tag":"","text":"Sends the current TE to all clients that are in visible or audible range of the origin."},{"tag":"note","text":"Sends the current TE to all clients that are in visible or audible range of the origin. See TE_Start()."},{"tag":"note","text":"Sends the current TE to all clients that are in visible or audible range of the origin. See TE_Start(). See GetClientsInRange()"},{"tag":"param:origin","text":"Sends the current TE to all clients that are in visible or audible range of the origin. See TE_Start(). See GetClientsInRange() \n Coordinates from which to test range."},{"tag":"param:rangeType","text":"Sends the current TE to all clients that are in visible or audible range of the origin. See TE_Start(). See GetClientsInRange() \n Coordinates from which to test range. Range type to use for filtering clients."},{"tag":"param:delay","text":"Sends the current TE to all clients that are in visible or audible range of the origin. See TE_Start(). See GetClientsInRange() \n Coordinates from which to test range. Range type to use for filtering clients. Delay in seconds to send the TE."}]},"kind":"stock","returnType":"void","arguments":[{"type":"const float[3]","name":"origin","decl":"const float origin[3]"},{"type":"ClientRangeType","name":"rangeType","decl":"ClientRangeType rangeType"},{"type":"float","name":"delay","decl":"float delay"}]}],"methodmaps":[],"constants":[],"enums":[],"typesets":[],"typedefs":[{"name":"TEHook","docStart":1659,"docEnd":2039,"docs":{"brief":"Called when a temp entity is going to be sent.","tags":[{"tag":"","text":"Called when a temp entity is going to be sent."},{"tag":"param:te_name","text":"Called when a temp entity is going to be sent. \n TE name."},{"tag":"param:Players","text":"Called when a temp entity is going to be sent. \n TE name. Array containing target player indexes."},{"tag":"param:numClients","text":"Called when a temp entity is going to be sent. \n TE name. Array containing target player indexes. Number of players in the array."},{"tag":"param:delay","text":"Called when a temp entity is going to be sent. \n TE name. Array containing target player indexes. Number of players in the array. Delay in seconds to send the TE."},{"tag":"return","text":"Called when a temp entity is going to be sent. \n TE name. Array containing target player indexes. Number of players in the array. Delay in seconds to send the TE. Plugin_Continue to allow the transmission of the TE, Plugin_Stop to block it."}]},"type":"function Action(const char[] te_name, const int[] Players, int numClients, float delay)"}]}